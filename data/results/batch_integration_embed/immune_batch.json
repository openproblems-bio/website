{
  "name": "Immune (by batch)",
  "data_url": "https://ndownloader.figshare.com/files/36086786",
  "data_reference": "https://doi.org/10.1038/s41592-021-01336-8",
  "categories": [
    {
      "id": "base",
      "label": "Base",
      "enabled": true,
      "width": 2
    },
    {
      "id": "meta",
      "label": "Meta",
      "enabled": false,
      "width": 3
    },
    {
      "id": "execution",
      "label": "Execution",
      "enabled": true,
      "width": 3
    },
    {
      "id": "raw",
      "label": "Raw values",
      "enabled": false,
      "width": 5
    },
    {
      "id": "scaled",
      "label": "Scaled values",
      "enabled": true,
      "width": 5
    }
  ],
  "headers": [
    {
      "category": "base",
      "id": "rank",
      "label": "Rank",
      "result_name": "rank",
      "orderable": true,
      "tooltip": "Todo: fill in",
      "bold": true
    },
    {
      "category": "base",
      "id": "name",
      "label": "Name",
      "result_name": "name",
      "orderable": true,
      "tooltip": "Todo: fill in",
      "bold": false,
      "href": "implementation",
      "align": "left"
    },
    {
      "category": "meta",
      "id": "paper",
      "label": "Paper",
      "orderable": false,
      "tooltip": "Todo: fill in",
      "bold": false,
      "href": "paper_url",
      "html": "<i class=\"fas fa-file-alt\"/>"
    },
    {
      "category": "meta",
      "id": "year",
      "label": "Year",
      "result_name": "year",
      "orderable": true,
      "tooltip": "Todo: fill in",
      "bold": false
    },
    {
      "category": "meta",
      "id": "library",
      "label": "Library",
      "result_name": "version",
      "orderable": true,
      "tooltip": "Todo: fill in",
      "bold": false,
      "href": "library"
    },
    {
      "category": "execution",
      "id": "memory_gb",
      "label": "Memory (GB)",
      "result_name": "memory_gb",
      "orderable": true,
      "tooltip": "Todo: fill in",
      "bold": false,
      "digits": 1
    },
    {
      "category": "execution",
      "id": "runtime_min",
      "label": "Runtime (min)",
      "result_name": "runtime_min",
      "orderable": true,
      "tooltip": "Todo: fill in",
      "bold": false,
      "digits": 1
    },
    {
      "category": "execution",
      "id": "cpu_pct",
      "label": "CPU (%)",
      "result_name": "cpu_pct",
      "orderable": true,
      "tooltip": "Todo: fill in",
      "bold": false,
      "digits": 1
    },
    {
      "category": "raw",
      "id": "cell_cycle_score_raw",
      "label": "Cell Cycle Score",
      "result_name": "cell_cycle_score_raw",
      "orderable": true,
      "tooltip": "Todo: fill in",
      "bold": false,
      "digits": 2
    },
    {
      "category": "raw",
      "id": "isolated_label_silhouette_raw",
      "label": "Isolated label Silhouette",
      "result_name": "isolated_label_silhouette_raw",
      "orderable": true,
      "tooltip": "Todo: fill in",
      "bold": false,
      "digits": 2
    },
    {
      "category": "raw",
      "id": "silhouette_raw",
      "label": "Silhouette",
      "result_name": "silhouette_raw",
      "orderable": true,
      "tooltip": "Todo: fill in",
      "bold": false,
      "digits": 2
    },
    {
      "category": "raw",
      "id": "batch_asw_raw",
      "label": "Batch ASW",
      "result_name": "batch_asw_raw",
      "orderable": true,
      "tooltip": "Todo: fill in",
      "bold": false,
      "digits": 2
    },
    {
      "category": "raw",
      "id": "pc_regression_raw",
      "label": "PC Regression",
      "result_name": "pc_regression_raw",
      "orderable": true,
      "tooltip": "Todo: fill in",
      "bold": false,
      "digits": 2
    },
    {
      "category": "scaled",
      "id": "cell_cycle_score_scaled",
      "label": "Cell Cycle Score",
      "result_name": "cell_cycle_score_scaled",
      "orderable": true,
      "tooltip": "Todo: fill in",
      "bold": false,
      "digits": 2
    },
    {
      "category": "scaled",
      "id": "isolated_label_silhouette_scaled",
      "label": "Isolated label Silhouette",
      "result_name": "isolated_label_silhouette_scaled",
      "orderable": true,
      "tooltip": "Todo: fill in",
      "bold": false,
      "digits": 2
    },
    {
      "category": "scaled",
      "id": "silhouette_scaled",
      "label": "Silhouette",
      "result_name": "silhouette_scaled",
      "orderable": true,
      "tooltip": "Todo: fill in",
      "bold": false,
      "digits": 2
    },
    {
      "category": "scaled",
      "id": "batch_asw_scaled",
      "label": "Batch ASW",
      "result_name": "batch_asw_scaled",
      "orderable": true,
      "tooltip": "Todo: fill in",
      "bold": false,
      "digits": 2
    },
    {
      "category": "scaled",
      "id": "pc_regression_scaled",
      "label": "PC Regression",
      "result_name": "pc_regression_scaled",
      "orderable": true,
      "tooltip": "Todo: fill in",
      "bold": false,
      "digits": 2
    }
  ],
  "results": [
    {
      "name": "FastMNN embed (full/unscaled)",
      "paper": "A description of the theory behind the fastMNN algorithm",
      "paper_url": "https://marionilab.github.io/FurtherMNN2018/theory/description.html",
      "year": 2019,
      "library": "https://doi.org/doi:10.18129/B9.bioc.batchelor",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/fastmnn.py",
      "version": "1.12.3",
      "runtime_min": 4.8,
      "cpu_pct": 130.5,
      "memory_gb": 7.1,
      "rank": 1,
      "cell_cycle_score_scaled": 1.2163,
      "pc_regression_scaled": 0.8114,
      "isolated_label_silhouette_scaled": 4.1051,
      "batch_asw_scaled": 0.5165,
      "silhouette_scaled": 0.9757,
      "cell_cycle_score_raw": "NaN",
      "isolated_label_silhouette_raw": "NaN",
      "silhouette_raw": "NaN",
      "batch_asw_raw": "NaN",
      "pc_regression_raw": "NaN"
    },
    {
      "name": "scANVI (full/unscaled)",
      "paper": "Probabilistic harmonization and annotation of single‐cell transcriptomics data with deep generative models",
      "paper_url": "https://doi.org/10.15252/msb.20209620",
      "year": 2021,
      "library": "https://github.com/YosefLab/scvi-tools",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/scanvi.py",
      "version": "0.19.0",
      "runtime_min": 77.6333,
      "cpu_pct": 2682.6,
      "memory_gb": 5.9,
      "rank": 2,
      "batch_asw_scaled": 0.7011,
      "silhouette_scaled": 1.6708,
      "cell_cycle_score_scaled": 0.9874,
      "isolated_label_silhouette_scaled": 3.1998,
      "pc_regression_scaled": 0.9189,
      "cell_cycle_score_raw": "NaN",
      "isolated_label_silhouette_raw": "NaN",
      "silhouette_raw": "NaN",
      "batch_asw_raw": "NaN",
      "pc_regression_raw": "NaN"
    },
    {
      "name": "Liger (full/unscaled)",
      "paper": "Single-Cell Multi-omic Integration Compares and Contrasts Features of Brain Cell Identity",
      "paper_url": "https://doi.org/10.1016/j.cell.2019.05.006",
      "year": 2019,
      "library": "https://github.com/welch-lab/liger",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/liger.py",
      "version": "0.5.0.9000",
      "runtime_min": 183.2667,
      "cpu_pct": 101.3,
      "memory_gb": 15.5,
      "rank": 3,
      "pc_regression_scaled": 0.9454,
      "batch_asw_scaled": 0.1918,
      "cell_cycle_score_scaled": 0.8221,
      "isolated_label_silhouette_scaled": 4.2831,
      "silhouette_scaled": 0.9295,
      "cell_cycle_score_raw": "NaN",
      "isolated_label_silhouette_raw": "NaN",
      "silhouette_raw": "NaN",
      "batch_asw_raw": "NaN",
      "pc_regression_raw": "NaN"
    },
    {
      "name": "Scanorama (full/scaled)",
      "paper": "Efficient integration of heterogeneous single-cell transcriptomes using Scanorama",
      "paper_url": "https://www.nature.com/articles/s41587-019-0113-3",
      "year": 2019,
      "library": "https://github.com/brianhie/scanorama",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/scanorama.py",
      "version": "1.7",
      "runtime_min": 22.5333,
      "cpu_pct": 1301.8,
      "memory_gb": 39.6,
      "rank": 4,
      "isolated_label_silhouette_scaled": 3.9211,
      "pc_regression_scaled": 0.215,
      "cell_cycle_score_scaled": 0.8143,
      "silhouette_scaled": 1.2305,
      "batch_asw_scaled": 0.9889,
      "cell_cycle_score_raw": "NaN",
      "isolated_label_silhouette_raw": "NaN",
      "silhouette_raw": "NaN",
      "batch_asw_raw": "NaN",
      "pc_regression_raw": "NaN"
    },
    {
      "name": "scANVI (hvg/unscaled)",
      "paper": "Probabilistic harmonization and annotation of single‐cell transcriptomics data with deep generative models",
      "paper_url": "https://doi.org/10.15252/msb.20209620",
      "year": 2021,
      "library": "https://github.com/YosefLab/scvi-tools",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/scanvi.py",
      "version": "0.19.0",
      "runtime_min": 95.65,
      "cpu_pct": 2195.2,
      "memory_gb": 13.8,
      "rank": 5,
      "batch_asw_scaled": 0.6893,
      "cell_cycle_score_scaled": 0.912,
      "isolated_label_silhouette_scaled": 2.6684,
      "silhouette_scaled": 1.8244,
      "pc_regression_scaled": 0.9143,
      "cell_cycle_score_raw": "NaN",
      "isolated_label_silhouette_raw": "NaN",
      "silhouette_raw": "NaN",
      "batch_asw_raw": "NaN",
      "pc_regression_raw": "NaN"
    },
    {
      "name": "Scanorama gene output (hvg/scaled)",
      "paper": "Efficient integration of heterogeneous single-cell transcriptomes using Scanorama",
      "paper_url": "https://www.nature.com/articles/s41587-019-0113-3",
      "year": 2019,
      "library": "https://github.com/brianhie/scanorama",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/scanorama.py",
      "version": "1.7",
      "runtime_min": 8.8667,
      "cpu_pct": 1011.8,
      "memory_gb": 8.3,
      "rank": 6,
      "pc_regression_scaled": 2.5466e-06,
      "batch_asw_scaled": 0.5134,
      "silhouette_scaled": 1.6531,
      "isolated_label_silhouette_scaled": 3.7338,
      "cell_cycle_score_scaled": 1.0434,
      "cell_cycle_score_raw": "NaN",
      "isolated_label_silhouette_raw": "NaN",
      "silhouette_raw": "NaN",
      "batch_asw_raw": "NaN",
      "pc_regression_raw": "NaN"
    },
    {
      "name": "Scanorama (hvg/scaled)",
      "paper": "Efficient integration of heterogeneous single-cell transcriptomes using Scanorama",
      "paper_url": "https://www.nature.com/articles/s41587-019-0113-3",
      "year": 2019,
      "library": "https://github.com/brianhie/scanorama",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/scanorama.py",
      "version": "1.7",
      "runtime_min": 5.3667,
      "cpu_pct": 1156.2,
      "memory_gb": 8.2,
      "rank": 7,
      "cell_cycle_score_scaled": 1.1476,
      "isolated_label_silhouette_scaled": 3.2438,
      "pc_regression_scaled": 0.1458,
      "batch_asw_scaled": 1.0257,
      "silhouette_scaled": 1.3332,
      "cell_cycle_score_raw": "NaN",
      "isolated_label_silhouette_raw": "NaN",
      "silhouette_raw": "NaN",
      "batch_asw_raw": "NaN",
      "pc_regression_raw": "NaN"
    },
    {
      "name": "Liger (hvg/unscaled)",
      "paper": "Single-Cell Multi-omic Integration Compares and Contrasts Features of Brain Cell Identity",
      "paper_url": "https://doi.org/10.1016/j.cell.2019.05.006",
      "year": 2019,
      "library": "https://github.com/welch-lab/liger",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/liger.py",
      "version": "0.5.0.9000",
      "runtime_min": 36.25,
      "cpu_pct": 103.3,
      "memory_gb": 5,
      "rank": 8,
      "pc_regression_scaled": 0.9336,
      "isolated_label_silhouette_scaled": 3.4751,
      "silhouette_scaled": 1.3375,
      "batch_asw_scaled": 0.3541,
      "cell_cycle_score_scaled": 0.786,
      "cell_cycle_score_raw": "NaN",
      "isolated_label_silhouette_raw": "NaN",
      "silhouette_raw": "NaN",
      "batch_asw_raw": "NaN",
      "pc_regression_raw": "NaN"
    },
    {
      "name": "scVI (full/unscaled)",
      "paper": "Deep generative modeling for single-cell transcriptomics",
      "paper_url": "https://www.nature.com/articles/s41592-018-0229-2",
      "year": 2018,
      "library": "https://github.com/YosefLab/scvi-tools",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/scvi.py",
      "version": "0.19.0",
      "runtime_min": 56.6833,
      "cpu_pct": 2802.9,
      "memory_gb": 3.4,
      "rank": 9,
      "pc_regression_scaled": 0.9364,
      "silhouette_scaled": 1.3131,
      "batch_asw_scaled": 0.7268,
      "cell_cycle_score_scaled": 0.8618,
      "isolated_label_silhouette_scaled": 3.0398,
      "cell_cycle_score_raw": "NaN",
      "isolated_label_silhouette_raw": "NaN",
      "silhouette_raw": "NaN",
      "batch_asw_raw": "NaN",
      "pc_regression_raw": "NaN"
    },
    {
      "name": "FastMNN embed (full/scaled)",
      "paper": "A description of the theory behind the fastMNN algorithm",
      "paper_url": "https://marionilab.github.io/FurtherMNN2018/theory/description.html",
      "year": 2019,
      "library": "https://doi.org/doi:10.18129/B9.bioc.batchelor",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/fastmnn.py",
      "version": "1.12.3",
      "runtime_min": 7.45,
      "cpu_pct": 117.3,
      "memory_gb": 13.9,
      "rank": 10,
      "silhouette_scaled": 0.9756,
      "batch_asw_scaled": 0.5166,
      "cell_cycle_score_scaled": 0.932,
      "pc_regression_scaled": 0,
      "isolated_label_silhouette_scaled": 4.1054,
      "cell_cycle_score_raw": "NaN",
      "isolated_label_silhouette_raw": "NaN",
      "silhouette_raw": "NaN",
      "batch_asw_raw": "NaN",
      "pc_regression_raw": "NaN"
    },
    {
      "name": "Scanorama gene output (full/scaled)",
      "paper": "Efficient integration of heterogeneous single-cell transcriptomes using Scanorama",
      "paper_url": "https://www.nature.com/articles/s41587-019-0113-3",
      "year": 2019,
      "library": "https://github.com/brianhie/scanorama",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/scanorama.py",
      "version": "1.7",
      "runtime_min": 25.2667,
      "cpu_pct": 1426.3,
      "memory_gb": 39.5,
      "rank": 11,
      "cell_cycle_score_scaled": 0.6044,
      "pc_regression_scaled": 0.0883,
      "isolated_label_silhouette_scaled": 3.929,
      "silhouette_scaled": 1.3427,
      "batch_asw_scaled": 0.5257,
      "cell_cycle_score_raw": "NaN",
      "isolated_label_silhouette_raw": "NaN",
      "silhouette_raw": "NaN",
      "batch_asw_raw": "NaN",
      "pc_regression_raw": "NaN"
    },
    {
      "name": "SCALEX (full)",
      "paper": "Online single-cell data integration through projecting heterogeneous datasets into a common cell-embedding space",
      "paper_url": "https://doi.org/10.1038/s41467-022-33758-z",
      "year": 2022,
      "library": "https://github.com/jsxlei/SCALEX",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_embed/methods/scalex.py",
      "version": "1.0.2",
      "runtime_min": 60.7833,
      "cpu_pct": 2428.8,
      "memory_gb": 26.2,
      "rank": 12,
      "pc_regression_scaled": 1,
      "batch_asw_scaled": 0.6185,
      "silhouette_scaled": 1.2951,
      "cell_cycle_score_scaled": 1.172,
      "isolated_label_silhouette_scaled": 2.3796,
      "cell_cycle_score_raw": "NaN",
      "isolated_label_silhouette_raw": "NaN",
      "silhouette_raw": "NaN",
      "batch_asw_raw": "NaN",
      "pc_regression_raw": "NaN"
    },
    {
      "name": "Scanorama gene output (hvg/unscaled)",
      "paper": "Efficient integration of heterogeneous single-cell transcriptomes using Scanorama",
      "paper_url": "https://www.nature.com/articles/s41587-019-0113-3",
      "year": 2019,
      "library": "https://github.com/brianhie/scanorama",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/scanorama.py",
      "version": "1.7",
      "runtime_min": 5.8667,
      "cpu_pct": 1262.7,
      "memory_gb": 7.6,
      "rank": 13,
      "cell_cycle_score_scaled": 1.2027,
      "batch_asw_scaled": 0.4558,
      "isolated_label_silhouette_scaled": 2.9459,
      "pc_regression_scaled": 8.4466e-07,
      "silhouette_scaled": 1.7684,
      "cell_cycle_score_raw": "NaN",
      "isolated_label_silhouette_raw": "NaN",
      "silhouette_raw": "NaN",
      "batch_asw_raw": "NaN",
      "pc_regression_raw": "NaN"
    },
    {
      "name": "Scanorama (full/unscaled)",
      "paper": "Efficient integration of heterogeneous single-cell transcriptomes using Scanorama",
      "paper_url": "https://www.nature.com/articles/s41587-019-0113-3",
      "year": 2019,
      "library": "https://github.com/brianhie/scanorama",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/scanorama.py",
      "version": "1.7",
      "runtime_min": 11.7,
      "cpu_pct": 1365.8,
      "memory_gb": 18.2,
      "rank": 14,
      "batch_asw_scaled": 0.8957,
      "cell_cycle_score_scaled": 1.1569,
      "pc_regression_scaled": 0.1656,
      "silhouette_scaled": 1.2411,
      "isolated_label_silhouette_scaled": 2.9063,
      "cell_cycle_score_raw": "NaN",
      "isolated_label_silhouette_raw": "NaN",
      "silhouette_raw": "NaN",
      "batch_asw_raw": "NaN",
      "pc_regression_raw": "NaN"
    },
    {
      "name": "scVI (hvg/unscaled)",
      "paper": "Deep generative modeling for single-cell transcriptomics",
      "paper_url": "https://www.nature.com/articles/s41592-018-0229-2",
      "year": 2018,
      "library": "https://github.com/YosefLab/scvi-tools",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/scvi.py",
      "version": "0.19.0",
      "runtime_min": 49.0833,
      "cpu_pct": 2358.2,
      "memory_gb": 12.1,
      "rank": 15,
      "isolated_label_silhouette_scaled": 2.3518,
      "cell_cycle_score_scaled": 0.9053,
      "batch_asw_scaled": 0.7469,
      "silhouette_scaled": 1.3298,
      "pc_regression_scaled": 0.9325,
      "cell_cycle_score_raw": "NaN",
      "isolated_label_silhouette_raw": "NaN",
      "silhouette_raw": "NaN",
      "batch_asw_raw": "NaN",
      "pc_regression_raw": "NaN"
    },
    {
      "name": "MNN (full/unscaled)",
      "paper": "Batch effects in single-cell RNA-sequencing data are corrected by matching mutual nearest neighbors",
      "paper_url": "https://www.nature.com/articles/nbt.4091",
      "year": 2018,
      "library": "https://github.com/chriscainx/mnnpy",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/mnn.py",
      "version": "0.1.9.5",
      "runtime_min": 58.9333,
      "cpu_pct": 3362.1,
      "memory_gb": 375.3,
      "rank": 16,
      "batch_asw_scaled": 0.8044,
      "cell_cycle_score_scaled": 1.0948,
      "isolated_label_silhouette_scaled": 2.6696,
      "pc_regression_scaled": 0.1788,
      "silhouette_scaled": 1.4764,
      "cell_cycle_score_raw": "NaN",
      "isolated_label_silhouette_raw": "NaN",
      "silhouette_raw": "NaN",
      "batch_asw_raw": "NaN",
      "pc_regression_raw": "NaN"
    },
    {
      "name": "SCALEX (hvg)",
      "paper": "Online single-cell data integration through projecting heterogeneous datasets into a common cell-embedding space",
      "paper_url": "https://doi.org/10.1038/s41467-022-33758-z",
      "year": 2022,
      "library": "https://github.com/jsxlei/SCALEX",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_embed/methods/scalex.py",
      "version": "1.0.2",
      "runtime_min": 14.4,
      "cpu_pct": 2520.1,
      "memory_gb": 18.7,
      "rank": 17,
      "pc_regression_scaled": 0.9982,
      "isolated_label_silhouette_scaled": 1.9928,
      "batch_asw_scaled": 0.6884,
      "cell_cycle_score_scaled": 1.0659,
      "silhouette_scaled": 1.4551,
      "cell_cycle_score_raw": "NaN",
      "isolated_label_silhouette_raw": "NaN",
      "silhouette_raw": "NaN",
      "batch_asw_raw": "NaN",
      "pc_regression_raw": "NaN"
    },
    {
      "name": "MNN (full/scaled)",
      "paper": "Batch effects in single-cell RNA-sequencing data are corrected by matching mutual nearest neighbors",
      "paper_url": "https://www.nature.com/articles/nbt.4091",
      "year": 2018,
      "library": "https://github.com/chriscainx/mnnpy",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/mnn.py",
      "version": "0.1.9.5",
      "runtime_min": 68.3167,
      "cpu_pct": 2751.8,
      "memory_gb": 601,
      "rank": 18,
      "pc_regression_scaled": 0.1112,
      "cell_cycle_score_scaled": 1.0253,
      "batch_asw_scaled": 1.0689,
      "isolated_label_silhouette_scaled": 2.7962,
      "silhouette_scaled": 1.1395,
      "cell_cycle_score_raw": "NaN",
      "isolated_label_silhouette_raw": "NaN",
      "silhouette_raw": "NaN",
      "batch_asw_raw": "NaN",
      "pc_regression_raw": "NaN"
    },
    {
      "name": "MNN (hvg/scaled)",
      "paper": "Batch effects in single-cell RNA-sequencing data are corrected by matching mutual nearest neighbors",
      "paper_url": "https://www.nature.com/articles/nbt.4091",
      "year": 2018,
      "library": "https://github.com/chriscainx/mnnpy",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/mnn.py",
      "version": "0.1.9.5",
      "runtime_min": 14.8,
      "cpu_pct": 1775.5,
      "memory_gb": 84.6,
      "rank": 19,
      "silhouette_scaled": 1.4806,
      "batch_asw_scaled": 0.841,
      "pc_regression_scaled": 2.4556e-06,
      "isolated_label_silhouette_scaled": 3.191,
      "cell_cycle_score_scaled": 0.6098,
      "cell_cycle_score_raw": "NaN",
      "isolated_label_silhouette_raw": "NaN",
      "silhouette_raw": "NaN",
      "batch_asw_raw": "NaN",
      "pc_regression_raw": "NaN"
    },
    {
      "name": "Scanorama (hvg/unscaled)",
      "paper": "Efficient integration of heterogeneous single-cell transcriptomes using Scanorama",
      "paper_url": "https://www.nature.com/articles/s41587-019-0113-3",
      "year": 2019,
      "library": "https://github.com/brianhie/scanorama",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/scanorama.py",
      "version": "1.7",
      "runtime_min": 4.1667,
      "cpu_pct": 1382.8,
      "memory_gb": 7.6,
      "rank": 20,
      "cell_cycle_score_scaled": 1.2325,
      "isolated_label_silhouette_scaled": 2.4708,
      "batch_asw_scaled": 0.88,
      "pc_regression_scaled": 0.0173,
      "silhouette_scaled": 1.5128,
      "cell_cycle_score_raw": "NaN",
      "isolated_label_silhouette_raw": "NaN",
      "silhouette_raw": "NaN",
      "batch_asw_raw": "NaN",
      "pc_regression_raw": "NaN"
    },
    {
      "name": "MNN (hvg/unscaled)",
      "paper": "Batch effects in single-cell RNA-sequencing data are corrected by matching mutual nearest neighbors",
      "paper_url": "https://www.nature.com/articles/nbt.4091",
      "year": 2018,
      "library": "https://github.com/chriscainx/mnnpy",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/mnn.py",
      "version": "0.1.9.5",
      "runtime_min": 10.4667,
      "cpu_pct": 2627.6,
      "memory_gb": 92,
      "rank": 21,
      "cell_cycle_score_scaled": 1.1902,
      "silhouette_scaled": 1.564,
      "batch_asw_scaled": 0.8259,
      "isolated_label_silhouette_scaled": 2.5157,
      "pc_regression_scaled": 7.0951e-07,
      "cell_cycle_score_raw": "NaN",
      "isolated_label_silhouette_raw": "NaN",
      "silhouette_raw": "NaN",
      "batch_asw_raw": "NaN",
      "pc_regression_raw": "NaN"
    },
    {
      "name": "Harmony (full/scaled)",
      "paper": "Fast, sensitive and accurate integration of single-cell data with Harmony",
      "paper_url": "https://www.nature.com/articles/s41592-019-0619-0",
      "year": 2019,
      "library": "https://github.com/lilab-bcb/harmony-pytorch",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/harmony.py",
      "version": "0.1.7",
      "runtime_min": 1.9333,
      "cpu_pct": 1745.6,
      "memory_gb": 9,
      "rank": 22,
      "cell_cycle_score_scaled": 0.935,
      "isolated_label_silhouette_scaled": 2.6203,
      "silhouette_scaled": 1.3262,
      "pc_regression_scaled": 0,
      "batch_asw_scaled": 0.7837,
      "cell_cycle_score_raw": "NaN",
      "isolated_label_silhouette_raw": "NaN",
      "silhouette_raw": "NaN",
      "batch_asw_raw": "NaN",
      "pc_regression_raw": "NaN"
    },
    {
      "name": "Scanorama gene output (full/unscaled)",
      "paper": "Efficient integration of heterogeneous single-cell transcriptomes using Scanorama",
      "paper_url": "https://www.nature.com/articles/s41587-019-0113-3",
      "year": 2019,
      "library": "https://github.com/brianhie/scanorama",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/scanorama.py",
      "version": "1.7",
      "runtime_min": 9,
      "cpu_pct": 2030.4,
      "memory_gb": 18.2,
      "rank": 23,
      "batch_asw_scaled": 0.8087,
      "cell_cycle_score_scaled": 1.0245,
      "isolated_label_silhouette_scaled": 2.2446,
      "silhouette_scaled": 1.3024,
      "pc_regression_scaled": 0.0374,
      "cell_cycle_score_raw": "NaN",
      "isolated_label_silhouette_raw": "NaN",
      "silhouette_raw": "NaN",
      "batch_asw_raw": "NaN",
      "pc_regression_raw": "NaN"
    },
    {
      "name": "Harmony (full/unscaled)",
      "paper": "Fast, sensitive and accurate integration of single-cell data with Harmony",
      "paper_url": "https://www.nature.com/articles/s41592-019-0619-0",
      "year": 2019,
      "library": "https://github.com/lilab-bcb/harmony-pytorch",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/harmony.py",
      "version": "0.1.7",
      "runtime_min": 2.7167,
      "cpu_pct": 1974.8,
      "memory_gb": 2.4,
      "rank": 24,
      "cell_cycle_score_scaled": 0.9565,
      "batch_asw_scaled": 0.5338,
      "isolated_label_silhouette_scaled": 1.7763,
      "silhouette_scaled": 1.0598,
      "pc_regression_scaled": 0.9393,
      "cell_cycle_score_raw": "NaN",
      "isolated_label_silhouette_raw": "NaN",
      "silhouette_raw": "NaN",
      "batch_asw_raw": "NaN",
      "pc_regression_raw": "NaN"
    },
    {
      "name": "Harmony (hvg/unscaled)",
      "paper": "Fast, sensitive and accurate integration of single-cell data with Harmony",
      "paper_url": "https://www.nature.com/articles/s41592-019-0619-0",
      "year": 2019,
      "library": "https://github.com/lilab-bcb/harmony-pytorch",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/harmony.py",
      "version": "0.1.7",
      "runtime_min": 1.4833,
      "cpu_pct": 1089.2,
      "memory_gb": 2.3,
      "rank": 25,
      "isolated_label_silhouette_scaled": 1.5398,
      "silhouette_scaled": 1.2874,
      "pc_regression_scaled": 0.8822,
      "batch_asw_scaled": 0.5608,
      "cell_cycle_score_scaled": 0.9171,
      "cell_cycle_score_raw": "NaN",
      "isolated_label_silhouette_raw": "NaN",
      "silhouette_raw": "NaN",
      "batch_asw_raw": "NaN",
      "pc_regression_raw": "NaN"
    },
    {
      "name": "FastMNN embed (hvg/unscaled)",
      "paper": "A description of the theory behind the fastMNN algorithm",
      "paper_url": "https://marionilab.github.io/FurtherMNN2018/theory/description.html",
      "year": 2019,
      "library": "https://doi.org/doi:10.18129/B9.bioc.batchelor",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/fastmnn.py",
      "version": "1.12.3",
      "runtime_min": 2.4667,
      "cpu_pct": 150.1,
      "memory_gb": 3.4,
      "rank": 26,
      "cell_cycle_score_scaled": 0.9914,
      "silhouette_scaled": 1.5809,
      "pc_regression_scaled": 0.8602,
      "isolated_label_silhouette_scaled": 1.2043,
      "batch_asw_scaled": 0.5092,
      "cell_cycle_score_raw": "NaN",
      "isolated_label_silhouette_raw": "NaN",
      "silhouette_raw": "NaN",
      "batch_asw_raw": "NaN",
      "pc_regression_raw": "NaN"
    },
    {
      "name": "Combat (full/scaled)",
      "paper": "Adjusting batch effects in microarray expression data using empirical Bayes methods",
      "paper_url": "https://academic.oup.com/biostatistics/article/8/1/118/252073",
      "year": 2007,
      "library": "https://scanpy.readthedocs.io/en/stable/api/scanpy.pp.combat.html",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/combat.py",
      "version": "1.9.1",
      "runtime_min": 5.9667,
      "cpu_pct": 1223.9,
      "memory_gb": 23.6,
      "rank": 27,
      "cell_cycle_score_scaled": 1.1486,
      "isolated_label_silhouette_scaled": 2.0108,
      "pc_regression_scaled": "NaN",
      "batch_asw_scaled": 0.9527,
      "silhouette_scaled": 1.0246,
      "cell_cycle_score_raw": "NaN",
      "isolated_label_silhouette_raw": "NaN",
      "silhouette_raw": "NaN",
      "batch_asw_raw": "NaN",
      "pc_regression_raw": "NaN"
    },
    {
      "name": "Combat (hvg/scaled)",
      "paper": "Adjusting batch effects in microarray expression data using empirical Bayes methods",
      "paper_url": "https://academic.oup.com/biostatistics/article/8/1/118/252073",
      "year": 2007,
      "library": "https://scanpy.readthedocs.io/en/stable/api/scanpy.pp.combat.html",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/combat.py",
      "version": "1.9.1",
      "runtime_min": 3.35,
      "cpu_pct": 1094.2,
      "memory_gb": 5.5,
      "rank": 28,
      "cell_cycle_score_scaled": 0.9145,
      "pc_regression_scaled": "NaN",
      "silhouette_scaled": 1.3692,
      "batch_asw_scaled": 0.5997,
      "isolated_label_silhouette_scaled": 1.9665,
      "cell_cycle_score_raw": "NaN",
      "isolated_label_silhouette_raw": "NaN",
      "silhouette_raw": "NaN",
      "batch_asw_raw": "NaN",
      "pc_regression_raw": "NaN"
    },
    {
      "name": "Combat (full/unscaled)",
      "paper": "Adjusting batch effects in microarray expression data using empirical Bayes methods",
      "paper_url": "https://academic.oup.com/biostatistics/article/8/1/118/252073",
      "year": 2007,
      "library": "https://scanpy.readthedocs.io/en/stable/api/scanpy.pp.combat.html",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/combat.py",
      "version": "1.9.1",
      "runtime_min": 4.3167,
      "cpu_pct": 1307,
      "memory_gb": 17.6,
      "rank": 29,
      "cell_cycle_score_scaled": 0.9055,
      "batch_asw_scaled": 0.7081,
      "pc_regression_scaled": 0.8891,
      "isolated_label_silhouette_scaled": 1.0775,
      "silhouette_scaled": 1.1645,
      "cell_cycle_score_raw": "NaN",
      "isolated_label_silhouette_raw": "NaN",
      "silhouette_raw": "NaN",
      "batch_asw_raw": "NaN",
      "pc_regression_raw": "NaN"
    },
    {
      "name": "Harmony (hvg/scaled)",
      "paper": "Fast, sensitive and accurate integration of single-cell data with Harmony",
      "paper_url": "https://www.nature.com/articles/s41592-019-0619-0",
      "year": 2019,
      "library": "https://github.com/lilab-bcb/harmony-pytorch",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/harmony.py",
      "version": "0.1.7",
      "runtime_min": 1.9,
      "cpu_pct": 920.3,
      "memory_gb": 3,
      "rank": 30,
      "silhouette_scaled": 1.2694,
      "batch_asw_scaled": 0.8229,
      "isolated_label_silhouette_scaled": 1.5066,
      "pc_regression_scaled": 0,
      "cell_cycle_score_scaled": 0.9274,
      "cell_cycle_score_raw": "NaN",
      "isolated_label_silhouette_raw": "NaN",
      "silhouette_raw": "NaN",
      "batch_asw_raw": "NaN",
      "pc_regression_raw": "NaN"
    },
    {
      "name": "FastMNN embed (hvg/scaled)",
      "paper": "A description of the theory behind the fastMNN algorithm",
      "paper_url": "https://marionilab.github.io/FurtherMNN2018/theory/description.html",
      "year": 2019,
      "library": "https://doi.org/doi:10.18129/B9.bioc.batchelor",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/fastmnn.py",
      "version": "1.12.3",
      "runtime_min": 2.5833,
      "cpu_pct": 131.9,
      "memory_gb": 4.1,
      "rank": 31,
      "silhouette_scaled": 1.5809,
      "batch_asw_scaled": 0.5092,
      "isolated_label_silhouette_scaled": 1.2043,
      "cell_cycle_score_scaled": 0.8473,
      "pc_regression_scaled": 0,
      "cell_cycle_score_raw": "NaN",
      "isolated_label_silhouette_raw": "NaN",
      "silhouette_raw": "NaN",
      "batch_asw_raw": "NaN",
      "pc_regression_raw": "NaN"
    },
    {
      "name": "Combat (hvg/unscaled)",
      "paper": "Adjusting batch effects in microarray expression data using empirical Bayes methods",
      "paper_url": "https://academic.oup.com/biostatistics/article/8/1/118/252073",
      "year": 2007,
      "library": "https://scanpy.readthedocs.io/en/stable/api/scanpy.pp.combat.html",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/combat.py",
      "version": "1.9.1",
      "runtime_min": 3.1167,
      "cpu_pct": 1313.4,
      "memory_gb": 4.8,
      "rank": 32,
      "isolated_label_silhouette_scaled": 1.0786,
      "cell_cycle_score_scaled": 1.1883,
      "silhouette_scaled": 1.2714,
      "pc_regression_scaled": 0,
      "batch_asw_scaled": 0.6004,
      "cell_cycle_score_raw": "NaN",
      "isolated_label_silhouette_raw": "NaN",
      "silhouette_raw": "NaN",
      "batch_asw_raw": "NaN",
      "pc_regression_raw": "NaN"
    }
  ]
}
