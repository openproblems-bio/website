{
  "name": "Pancreas (by batch)",
  "data_url": "https://ndownloader.figshare.com/files/36086813",
  "data_reference": "https://doi.org/10.1038/s41592-021-01336-8",
  "headers": [
    {
      "category": "method",
      "id": "rank",
      "label": "Rank",
      "result_name": "rank",
      "orderable": true,
      "tooltip": "Todo: fill in",
      "bold": true
    },
    {
      "category": "method",
      "id": "name",
      "label": "Name",
      "result_name": "name",
      "orderable": true,
      "tooltip": "Todo: fill in",
      "bold": false,
      "href": "implementation",
      "align": "left"
    },
    {
      "category": "info",
      "id": "paper",
      "label": "Paper",
      "orderable": false,
      "tooltip": "Todo: fill in",
      "bold": false,
      "href": "paper_url",
      "html": "<i class=\"fas fa-file-alt\"/>"
    },
    {
      "category": "info",
      "id": "year",
      "label": "Year",
      "result_name": "year",
      "orderable": true,
      "tooltip": "Todo: fill in",
      "bold": false
    },
    {
      "category": "info",
      "id": "library",
      "label": "Library",
      "result_name": "version",
      "orderable": true,
      "tooltip": "Todo: fill in",
      "bold": false,
      "href": "library"
    },
    {
      "category": "execution",
      "id": "memory_gb",
      "label": "Memory (GB)",
      "result_name": "memory_gb",
      "orderable": true,
      "tooltip": "Todo: fill in",
      "bold": false,
      "digits": 1
    },
    {
      "category": "execution",
      "id": "runtime_min",
      "label": "Runtime (min)",
      "result_name": "runtime_min",
      "orderable": true,
      "tooltip": "Todo: fill in",
      "bold": false,
      "digits": 1
    },
    {
      "category": "execution",
      "id": "cpu_pct",
      "label": "CPU (%)",
      "result_name": "cpu_pct",
      "orderable": true,
      "tooltip": "Todo: fill in",
      "bold": false,
      "digits": 1
    },
    {
      "category": "raw",
      "id": "cell_cycle_score_raw",
      "label": "Cell Cycle Score",
      "result_name": "cell_cycle_score_raw",
      "orderable": true,
      "tooltip": "Todo: fill in",
      "bold": false,
      "digits": 2
    },
    {
      "category": "raw",
      "id": "isolated_label_silhouette_raw",
      "label": "Isolated label Silhouette",
      "result_name": "isolated_label_silhouette_raw",
      "orderable": true,
      "tooltip": "Todo: fill in",
      "bold": false,
      "digits": 2
    },
    {
      "category": "raw",
      "id": "silhouette_raw",
      "label": "Silhouette",
      "result_name": "silhouette_raw",
      "orderable": true,
      "tooltip": "Todo: fill in",
      "bold": false,
      "digits": 2
    },
    {
      "category": "raw",
      "id": "batch_asw_raw",
      "label": "Batch ASW",
      "result_name": "batch_asw_raw",
      "orderable": true,
      "tooltip": "Todo: fill in",
      "bold": false,
      "digits": 2
    },
    {
      "category": "raw",
      "id": "pc_regression_raw",
      "label": "PC Regression",
      "result_name": "pc_regression_raw",
      "orderable": true,
      "tooltip": "Todo: fill in",
      "bold": false,
      "digits": 2
    },
    {
      "category": "scaled",
      "id": "cell_cycle_score_scaled",
      "label": "Cell Cycle Score",
      "result_name": "cell_cycle_score_scaled",
      "orderable": true,
      "tooltip": "Todo: fill in",
      "bold": false,
      "digits": 2
    },
    {
      "category": "scaled",
      "id": "isolated_label_silhouette_scaled",
      "label": "Isolated label Silhouette",
      "result_name": "isolated_label_silhouette_scaled",
      "orderable": true,
      "tooltip": "Todo: fill in",
      "bold": false,
      "digits": 2
    },
    {
      "category": "scaled",
      "id": "silhouette_scaled",
      "label": "Silhouette",
      "result_name": "silhouette_scaled",
      "orderable": true,
      "tooltip": "Todo: fill in",
      "bold": false,
      "digits": 2
    },
    {
      "category": "scaled",
      "id": "batch_asw_scaled",
      "label": "Batch ASW",
      "result_name": "batch_asw_scaled",
      "orderable": true,
      "tooltip": "Todo: fill in",
      "bold": false,
      "digits": 2
    },
    {
      "category": "scaled",
      "id": "pc_regression_scaled",
      "label": "PC Regression",
      "result_name": "pc_regression_scaled",
      "orderable": true,
      "tooltip": "Todo: fill in",
      "bold": false,
      "digits": 2
    }
  ],
  "results": [
    {
      "name": "Harmony (hvg/scaled)",
      "paper": "Fast, sensitive and accurate integration of single-cell data with Harmony",
      "paper_url": "https://www.nature.com/articles/s41592-019-0619-0",
      "year": 2019,
      "library": "https://github.com/lilab-bcb/harmony-pytorch",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/harmony.py",
      "version": "0.1.7",
      "runtime_min": 1.7167,
      "cpu_pct": 817.9,
      "memory_gb": 2.5,
      "rank": 1,
      "isolated_label_silhouette_scaled": 7.1166,
      "silhouette_scaled": 3.8881,
      "pc_regression_scaled": 0,
      "batch_asw_scaled": 0.6481,
      "cell_cycle_score_scaled": 1.1179,
      "cell_cycle_score_raw": "NaN",
      "isolated_label_silhouette_raw": "NaN",
      "silhouette_raw": "NaN",
      "batch_asw_raw": "NaN",
      "pc_regression_raw": "NaN"
    },
    {
      "name": "Combat (hvg/scaled)",
      "paper": "Adjusting batch effects in microarray expression data using empirical Bayes methods",
      "paper_url": "https://academic.oup.com/biostatistics/article/8/1/118/252073",
      "year": 2007,
      "library": "https://scanpy.readthedocs.io/en/stable/api/scanpy.pp.combat.html",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/combat.py",
      "version": "1.9.1",
      "runtime_min": 2.0333,
      "cpu_pct": 1689.2,
      "memory_gb": 3.7,
      "rank": 2,
      "cell_cycle_score_scaled": 1.1881,
      "isolated_label_silhouette_scaled": 7.3651,
      "pc_regression_scaled": "NaN",
      "batch_asw_scaled": 0.8843,
      "silhouette_scaled": 3.322,
      "cell_cycle_score_raw": "NaN",
      "isolated_label_silhouette_raw": "NaN",
      "silhouette_raw": "NaN",
      "batch_asw_raw": "NaN",
      "pc_regression_raw": "NaN"
    },
    {
      "name": "Combat (full/scaled)",
      "paper": "Adjusting batch effects in microarray expression data using empirical Bayes methods",
      "paper_url": "https://academic.oup.com/biostatistics/article/8/1/118/252073",
      "year": 2007,
      "library": "https://scanpy.readthedocs.io/en/stable/api/scanpy.pp.combat.html",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/combat.py",
      "version": "1.9.1",
      "runtime_min": 4.4667,
      "cpu_pct": 1266.4,
      "memory_gb": 16,
      "rank": 3,
      "pc_regression_scaled": "NaN",
      "batch_asw_scaled": 1.085,
      "isolated_label_silhouette_scaled": 7.8196,
      "cell_cycle_score_scaled": 0.6358,
      "silhouette_scaled": 1.3095,
      "cell_cycle_score_raw": "NaN",
      "isolated_label_silhouette_raw": "NaN",
      "silhouette_raw": "NaN",
      "batch_asw_raw": "NaN",
      "pc_regression_raw": "NaN"
    },
    {
      "name": "Harmony (full/scaled)",
      "paper": "Fast, sensitive and accurate integration of single-cell data with Harmony",
      "paper_url": "https://www.nature.com/articles/s41592-019-0619-0",
      "year": 2019,
      "library": "https://github.com/lilab-bcb/harmony-pytorch",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/harmony.py",
      "version": "0.1.7",
      "runtime_min": 1.5,
      "cpu_pct": 1503.4,
      "memory_gb": 7.6,
      "rank": 4,
      "batch_asw_scaled": 0.757,
      "pc_regression_scaled": 0,
      "silhouette_scaled": 2.5569,
      "cell_cycle_score_scaled": 0.8029,
      "isolated_label_silhouette_scaled": 6.5427,
      "cell_cycle_score_raw": "NaN",
      "isolated_label_silhouette_raw": "NaN",
      "silhouette_raw": "NaN",
      "batch_asw_raw": "NaN",
      "pc_regression_raw": "NaN"
    },
    {
      "name": "SCALEX (hvg)",
      "paper": "Online single-cell data integration through projecting heterogeneous datasets into a common cell-embedding space",
      "paper_url": "https://doi.org/10.1038/s41467-022-33758-z",
      "year": 2022,
      "library": "https://github.com/jsxlei/SCALEX",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_embed/methods/scalex.py",
      "version": "1.0.2",
      "runtime_min": 12.0167,
      "cpu_pct": 2621.9,
      "memory_gb": 19.9,
      "rank": 5,
      "pc_regression_scaled": 1,
      "batch_asw_scaled": 1.0812,
      "silhouette_scaled": 3.3444,
      "cell_cycle_score_scaled": 1.1817,
      "isolated_label_silhouette_scaled": 2.5805,
      "cell_cycle_score_raw": "NaN",
      "isolated_label_silhouette_raw": "NaN",
      "silhouette_raw": "NaN",
      "batch_asw_raw": "NaN",
      "pc_regression_raw": "NaN"
    },
    {
      "name": "scANVI (hvg/unscaled)",
      "paper": "Probabilistic harmonization and annotation of single‚Äêcell transcriptomics data with deep generative models",
      "paper_url": "https://doi.org/10.15252/msb.20209620",
      "year": 2021,
      "library": "https://github.com/YosefLab/scvi-tools",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/scanvi.py",
      "version": "0.19.0",
      "runtime_min": 50.75,
      "cpu_pct": 2357.6,
      "memory_gb": 6.5,
      "rank": 6,
      "batch_asw_scaled": 0.9226,
      "silhouette_scaled": 2.9698,
      "pc_regression_scaled": 0.7969,
      "cell_cycle_score_scaled": 0.7317,
      "isolated_label_silhouette_scaled": 2.8457,
      "cell_cycle_score_raw": "NaN",
      "isolated_label_silhouette_raw": "NaN",
      "silhouette_raw": "NaN",
      "batch_asw_raw": "NaN",
      "pc_regression_raw": "NaN"
    },
    {
      "name": "scVI (hvg/unscaled)",
      "paper": "Deep generative modeling for single-cell transcriptomics",
      "paper_url": "https://www.nature.com/articles/s41592-018-0229-2",
      "year": 2018,
      "library": "https://github.com/YosefLab/scvi-tools",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/scvi.py",
      "version": "0.19.0",
      "runtime_min": 63.3,
      "cpu_pct": 2178.4,
      "memory_gb": 5.9,
      "rank": 7,
      "batch_asw_scaled": 0.9163,
      "silhouette_scaled": 2.5419,
      "cell_cycle_score_scaled": 0.6558,
      "isolated_label_silhouette_scaled": 2.7956,
      "pc_regression_scaled": 0.8219,
      "cell_cycle_score_raw": "NaN",
      "isolated_label_silhouette_raw": "NaN",
      "silhouette_raw": "NaN",
      "batch_asw_raw": "NaN",
      "pc_regression_raw": "NaN"
    },
    {
      "name": "Scanorama gene output (hvg/unscaled)",
      "paper": "Efficient integration of heterogeneous single-cell transcriptomes using Scanorama",
      "paper_url": "https://www.nature.com/articles/s41587-019-0113-3",
      "year": 2019,
      "library": "https://github.com/brianhie/scanorama",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/scanorama.py",
      "version": "1.7",
      "runtime_min": 3.95,
      "cpu_pct": 1187.3,
      "memory_gb": 4.8,
      "rank": 8,
      "silhouette_scaled": 3.9043,
      "cell_cycle_score_scaled": 1.2341,
      "batch_asw_scaled": 0.211,
      "isolated_label_silhouette_scaled": 1.9776,
      "pc_regression_scaled": 1.9668e-07,
      "cell_cycle_score_raw": "NaN",
      "isolated_label_silhouette_raw": "NaN",
      "silhouette_raw": "NaN",
      "batch_asw_raw": "NaN",
      "pc_regression_raw": "NaN"
    },
    {
      "name": "Harmony (full/unscaled)",
      "paper": "Fast, sensitive and accurate integration of single-cell data with Harmony",
      "paper_url": "https://www.nature.com/articles/s41592-019-0619-0",
      "year": 2019,
      "library": "https://github.com/lilab-bcb/harmony-pytorch",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/harmony.py",
      "version": "0.1.7",
      "runtime_min": 3.65,
      "cpu_pct": 1177.4,
      "memory_gb": 2.6,
      "rank": 9,
      "batch_asw_scaled": 1.1124,
      "silhouette_scaled": 2.2901,
      "pc_regression_scaled": 0.9192,
      "cell_cycle_score_scaled": 0.9879,
      "isolated_label_silhouette_scaled": 1.9545,
      "cell_cycle_score_raw": "NaN",
      "isolated_label_silhouette_raw": "NaN",
      "silhouette_raw": "NaN",
      "batch_asw_raw": "NaN",
      "pc_regression_raw": "NaN"
    },
    {
      "name": "Harmony (hvg/unscaled)",
      "paper": "Fast, sensitive and accurate integration of single-cell data with Harmony",
      "paper_url": "https://www.nature.com/articles/s41592-019-0619-0",
      "year": 2019,
      "library": "https://github.com/lilab-bcb/harmony-pytorch",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/harmony.py",
      "version": "0.1.7",
      "runtime_min": 2.2,
      "cpu_pct": 654.8,
      "memory_gb": 2.2,
      "rank": 10,
      "silhouette_scaled": 3.4158,
      "batch_asw_scaled": 1.0985,
      "isolated_label_silhouette_scaled": 0.764,
      "pc_regression_scaled": 0.7385,
      "cell_cycle_score_scaled": 1.2368,
      "cell_cycle_score_raw": "NaN",
      "isolated_label_silhouette_raw": "NaN",
      "silhouette_raw": "NaN",
      "batch_asw_raw": "NaN",
      "pc_regression_raw": "NaN"
    },
    {
      "name": "SCALEX (full)",
      "paper": "Online single-cell data integration through projecting heterogeneous datasets into a common cell-embedding space",
      "paper_url": "https://doi.org/10.1038/s41467-022-33758-z",
      "year": 2022,
      "library": "https://github.com/jsxlei/SCALEX",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_embed/methods/scalex.py",
      "version": "1.0.2",
      "runtime_min": 72.8833,
      "cpu_pct": 2251.3,
      "memory_gb": 23.1,
      "rank": 11,
      "silhouette_scaled": 2.4643,
      "cell_cycle_score_scaled": 0.9248,
      "isolated_label_silhouette_scaled": 1.9127,
      "batch_asw_scaled": 0.9027,
      "pc_regression_scaled": 1.0009,
      "cell_cycle_score_raw": "NaN",
      "isolated_label_silhouette_raw": "NaN",
      "silhouette_raw": "NaN",
      "batch_asw_raw": "NaN",
      "pc_regression_raw": "NaN"
    },
    {
      "name": "scANVI (full/unscaled)",
      "paper": "Probabilistic harmonization and annotation of single‚Äêcell transcriptomics data with deep generative models",
      "paper_url": "https://doi.org/10.15252/msb.20209620",
      "year": 2021,
      "library": "https://github.com/YosefLab/scvi-tools",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/scanvi.py",
      "version": "0.19.0",
      "runtime_min": 67.05,
      "cpu_pct": 2715.8,
      "memory_gb": 5.9,
      "rank": 12,
      "cell_cycle_score_scaled": 0.8151,
      "isolated_label_silhouette_scaled": 2.2246,
      "batch_asw_scaled": 0.8974,
      "silhouette_scaled": 2.2796,
      "pc_regression_scaled": 0.9022,
      "cell_cycle_score_raw": "NaN",
      "isolated_label_silhouette_raw": "NaN",
      "silhouette_raw": "NaN",
      "batch_asw_raw": "NaN",
      "pc_regression_raw": "NaN"
    },
    {
      "name": "Scanorama (hvg/unscaled)",
      "paper": "Efficient integration of heterogeneous single-cell transcriptomes using Scanorama",
      "paper_url": "https://www.nature.com/articles/s41587-019-0113-3",
      "year": 2019,
      "library": "https://github.com/brianhie/scanorama",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/scanorama.py",
      "version": "1.7",
      "runtime_min": 3.6333,
      "cpu_pct": 873.5,
      "memory_gb": 4.8,
      "rank": 13,
      "cell_cycle_score_scaled": 1.2769,
      "isolated_label_silhouette_scaled": 1.277,
      "silhouette_scaled": 3.0446,
      "pc_regression_scaled": 0,
      "batch_asw_scaled": 1.4744,
      "cell_cycle_score_raw": "NaN",
      "isolated_label_silhouette_raw": "NaN",
      "silhouette_raw": "NaN",
      "batch_asw_raw": "NaN",
      "pc_regression_raw": "NaN"
    },
    {
      "name": "scVI (full/unscaled)",
      "paper": "Deep generative modeling for single-cell transcriptomics",
      "paper_url": "https://www.nature.com/articles/s41592-018-0229-2",
      "year": 2018,
      "library": "https://github.com/YosefLab/scvi-tools",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/scvi.py",
      "version": "0.19.0",
      "runtime_min": 79.4667,
      "cpu_pct": 2599.5,
      "memory_gb": 3.8,
      "rank": 14,
      "pc_regression_scaled": 0.9093,
      "silhouette_scaled": 2.1185,
      "isolated_label_silhouette_scaled": 2.2892,
      "cell_cycle_score_scaled": 0.8405,
      "batch_asw_scaled": 0.9152,
      "cell_cycle_score_raw": "NaN",
      "isolated_label_silhouette_raw": "NaN",
      "silhouette_raw": "NaN",
      "batch_asw_raw": "NaN",
      "pc_regression_raw": "NaN"
    },
    {
      "name": "MNN (hvg/unscaled)",
      "paper": "Batch effects in single-cell RNA-sequencing data are corrected by matching mutual nearest neighbors",
      "paper_url": "https://www.nature.com/articles/nbt.4091",
      "year": 2018,
      "library": "https://github.com/chriscainx/mnnpy",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/mnn.py",
      "version": "0.1.9.5",
      "runtime_min": 5.25,
      "cpu_pct": 1845,
      "memory_gb": 71,
      "rank": 15,
      "batch_asw_scaled": 1.3054,
      "isolated_label_silhouette_scaled": 1.3233,
      "pc_regression_scaled": 3.4646e-07,
      "cell_cycle_score_scaled": 1.1598,
      "silhouette_scaled": 3.1341,
      "cell_cycle_score_raw": "NaN",
      "isolated_label_silhouette_raw": "NaN",
      "silhouette_raw": "NaN",
      "batch_asw_raw": "NaN",
      "pc_regression_raw": "NaN"
    },
    {
      "name": "Scanorama (full/unscaled)",
      "paper": "Efficient integration of heterogeneous single-cell transcriptomes using Scanorama",
      "paper_url": "https://www.nature.com/articles/s41587-019-0113-3",
      "year": 2019,
      "library": "https://github.com/brianhie/scanorama",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/scanorama.py",
      "version": "1.7",
      "runtime_min": 9.75,
      "cpu_pct": 1636.2,
      "memory_gb": 26.9,
      "rank": 16,
      "silhouette_scaled": 2.0264,
      "cell_cycle_score_scaled": 1.2321,
      "isolated_label_silhouette_scaled": 1.9847,
      "pc_regression_scaled": 0.1918,
      "batch_asw_scaled": 1.3081,
      "cell_cycle_score_raw": "NaN",
      "isolated_label_silhouette_raw": "NaN",
      "silhouette_raw": "NaN",
      "batch_asw_raw": "NaN",
      "pc_regression_raw": "NaN"
    },
    {
      "name": "MNN (full/unscaled)",
      "paper": "Batch effects in single-cell RNA-sequencing data are corrected by matching mutual nearest neighbors",
      "paper_url": "https://www.nature.com/articles/nbt.4091",
      "year": 2018,
      "library": "https://github.com/chriscainx/mnnpy",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/mnn.py",
      "version": "0.1.9.5",
      "runtime_min": 21.7,
      "cpu_pct": 3806.2,
      "memory_gb": 330.8,
      "rank": 17,
      "silhouette_scaled": 2.4964,
      "pc_regression_scaled": 0.4659,
      "cell_cycle_score_scaled": 0.9755,
      "isolated_label_silhouette_scaled": 1.3331,
      "batch_asw_scaled": 1.3395,
      "cell_cycle_score_raw": "NaN",
      "isolated_label_silhouette_raw": "NaN",
      "silhouette_raw": "NaN",
      "batch_asw_raw": "NaN",
      "pc_regression_raw": "NaN"
    },
    {
      "name": "FastMNN embed (full/unscaled)",
      "paper": "A description of the theory behind the fastMNN algorithm",
      "paper_url": "https://marionilab.github.io/FurtherMNN2018/theory/description.html",
      "year": 2019,
      "library": "https://doi.org/doi:10.18129/B9.bioc.batchelor",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/fastmnn.py",
      "version": "1.12.3",
      "runtime_min": 3.8,
      "cpu_pct": 110.2,
      "memory_gb": 6.6,
      "rank": 18,
      "pc_regression_scaled": 0.866,
      "isolated_label_silhouette_scaled": 0.009,
      "batch_asw_scaled": 0.2893,
      "cell_cycle_score_scaled": 0.4287,
      "silhouette_scaled": 4.7885,
      "cell_cycle_score_raw": "NaN",
      "isolated_label_silhouette_raw": "NaN",
      "silhouette_raw": "NaN",
      "batch_asw_raw": "NaN",
      "pc_regression_raw": "NaN"
    },
    {
      "name": "FastMNN embed (hvg/unscaled)",
      "paper": "A description of the theory behind the fastMNN algorithm",
      "paper_url": "https://marionilab.github.io/FurtherMNN2018/theory/description.html",
      "year": 2019,
      "library": "https://doi.org/doi:10.18129/B9.bioc.batchelor",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/fastmnn.py",
      "version": "1.12.3",
      "runtime_min": 2.1167,
      "cpu_pct": 129.2,
      "memory_gb": 2.9,
      "rank": 19,
      "cell_cycle_score_scaled": 0.9025,
      "silhouette_scaled": 5.0836,
      "pc_regression_scaled": 0.6981,
      "isolated_label_silhouette_scaled": -0.6261,
      "batch_asw_scaled": 0.1,
      "cell_cycle_score_raw": "NaN",
      "isolated_label_silhouette_raw": "NaN",
      "silhouette_raw": "NaN",
      "batch_asw_raw": "NaN",
      "pc_regression_raw": "NaN"
    },
    {
      "name": "Combat (hvg/unscaled)",
      "paper": "Adjusting batch effects in microarray expression data using empirical Bayes methods",
      "paper_url": "https://academic.oup.com/biostatistics/article/8/1/118/252073",
      "year": 2007,
      "library": "https://scanpy.readthedocs.io/en/stable/api/scanpy.pp.combat.html",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/combat.py",
      "version": "1.9.1",
      "runtime_min": 2.5,
      "cpu_pct": 1377.2,
      "memory_gb": 3.3,
      "rank": 20,
      "pc_regression_scaled": 0,
      "silhouette_scaled": 2.8032,
      "isolated_label_silhouette_scaled": 0.5748,
      "cell_cycle_score_scaled": 1.2474,
      "batch_asw_scaled": 1.2391,
      "cell_cycle_score_raw": "NaN",
      "isolated_label_silhouette_raw": "NaN",
      "silhouette_raw": "NaN",
      "batch_asw_raw": "NaN",
      "pc_regression_raw": "NaN"
    },
    {
      "name": "Combat (full/unscaled)",
      "paper": "Adjusting batch effects in microarray expression data using empirical Bayes methods",
      "paper_url": "https://academic.oup.com/biostatistics/article/8/1/118/252073",
      "year": 2007,
      "library": "https://scanpy.readthedocs.io/en/stable/api/scanpy.pp.combat.html",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/combat.py",
      "version": "1.9.1",
      "runtime_min": 3.4833,
      "cpu_pct": 1183.4,
      "memory_gb": 13.9,
      "rank": 21,
      "silhouette_scaled": 2.6263,
      "batch_asw_scaled": 1.3471,
      "pc_regression_scaled": 0.6455,
      "isolated_label_silhouette_scaled": 0.3642,
      "cell_cycle_score_scaled": 0.7491,
      "cell_cycle_score_raw": "NaN",
      "isolated_label_silhouette_raw": "NaN",
      "silhouette_raw": "NaN",
      "batch_asw_raw": "NaN",
      "pc_regression_raw": "NaN"
    },
    {
      "name": "MNN (full/scaled)",
      "paper": "Batch effects in single-cell RNA-sequencing data are corrected by matching mutual nearest neighbors",
      "paper_url": "https://www.nature.com/articles/nbt.4091",
      "year": 2018,
      "library": "https://github.com/chriscainx/mnnpy",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/mnn.py",
      "version": "0.1.9.5",
      "runtime_min": 38.0833,
      "cpu_pct": 2145.9,
      "memory_gb": 502.8,
      "rank": 22,
      "pc_regression_scaled": 0.515,
      "cell_cycle_score_scaled": 1.0756,
      "batch_asw_scaled": 1.3078,
      "silhouette_scaled": 0.6495,
      "isolated_label_silhouette_scaled": 1.9145,
      "cell_cycle_score_raw": "NaN",
      "isolated_label_silhouette_raw": "NaN",
      "silhouette_raw": "NaN",
      "batch_asw_raw": "NaN",
      "pc_regression_raw": "NaN"
    },
    {
      "name": "Scanorama (full/scaled)",
      "paper": "Efficient integration of heterogeneous single-cell transcriptomes using Scanorama",
      "paper_url": "https://www.nature.com/articles/s41587-019-0113-3",
      "year": 2019,
      "library": "https://github.com/brianhie/scanorama",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/scanorama.py",
      "version": "1.7",
      "runtime_min": 20.5,
      "cpu_pct": 983.1,
      "memory_gb": 33,
      "rank": 23,
      "batch_asw_scaled": 1.4067,
      "silhouette_scaled": 1.9928,
      "cell_cycle_score_scaled": 1.0064,
      "isolated_label_silhouette_scaled": 0.5644,
      "pc_regression_scaled": 0.3516,
      "cell_cycle_score_raw": "NaN",
      "isolated_label_silhouette_raw": "NaN",
      "silhouette_raw": "NaN",
      "batch_asw_raw": "NaN",
      "pc_regression_raw": "NaN"
    },
    {
      "name": "Scanorama gene output (full/unscaled)",
      "paper": "Efficient integration of heterogeneous single-cell transcriptomes using Scanorama",
      "paper_url": "https://www.nature.com/articles/s41587-019-0113-3",
      "year": 2019,
      "library": "https://github.com/brianhie/scanorama",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/scanorama.py",
      "version": "1.7",
      "runtime_min": 11.2167,
      "cpu_pct": 1743.7,
      "memory_gb": 26.9,
      "rank": 24,
      "pc_regression_scaled": 0.4126,
      "isolated_label_silhouette_scaled": 0.505,
      "batch_asw_scaled": 0.5463,
      "cell_cycle_score_scaled": 1.032,
      "silhouette_scaled": 2.7619,
      "cell_cycle_score_raw": "NaN",
      "isolated_label_silhouette_raw": "NaN",
      "silhouette_raw": "NaN",
      "batch_asw_raw": "NaN",
      "pc_regression_raw": "NaN"
    },
    {
      "name": "FastMNN embed (full/scaled)",
      "paper": "A description of the theory behind the fastMNN algorithm",
      "paper_url": "https://marionilab.github.io/FurtherMNN2018/theory/description.html",
      "year": 2019,
      "library": "https://doi.org/doi:10.18129/B9.bioc.batchelor",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/fastmnn.py",
      "version": "1.12.3",
      "runtime_min": 5.75,
      "cpu_pct": 105.2,
      "memory_gb": 10,
      "rank": 25,
      "pc_regression_scaled": 0,
      "silhouette_scaled": 4.7885,
      "batch_asw_scaled": 0.2893,
      "isolated_label_silhouette_scaled": 0.009,
      "cell_cycle_score_scaled": 0.148,
      "cell_cycle_score_raw": "NaN",
      "isolated_label_silhouette_raw": "NaN",
      "silhouette_raw": "NaN",
      "batch_asw_raw": "NaN",
      "pc_regression_raw": "NaN"
    },
    {
      "name": "FastMNN embed (hvg/scaled)",
      "paper": "A description of the theory behind the fastMNN algorithm",
      "paper_url": "https://marionilab.github.io/FurtherMNN2018/theory/description.html",
      "year": 2019,
      "library": "https://doi.org/doi:10.18129/B9.bioc.batchelor",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/fastmnn.py",
      "version": "1.12.3",
      "runtime_min": 2.25,
      "cpu_pct": 122.7,
      "memory_gb": 3.3,
      "rank": 26,
      "batch_asw_scaled": 0.1015,
      "isolated_label_silhouette_scaled": -0.626,
      "pc_regression_scaled": 0,
      "cell_cycle_score_scaled": 0.604,
      "silhouette_scaled": 5.0836,
      "cell_cycle_score_raw": "NaN",
      "isolated_label_silhouette_raw": "NaN",
      "silhouette_raw": "NaN",
      "batch_asw_raw": "NaN",
      "pc_regression_raw": "NaN"
    },
    {
      "name": "Liger (hvg/unscaled)",
      "paper": "Single-Cell Multi-omic Integration Compares and Contrasts Features of Brain Cell Identity",
      "paper_url": "https://doi.org/10.1016/j.cell.2019.05.006",
      "year": 2019,
      "library": "https://github.com/welch-lab/liger",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/liger.py",
      "version": "0.5.0.9000",
      "runtime_min": 24.9667,
      "cpu_pct": 102,
      "memory_gb": 3.7,
      "rank": 27,
      "pc_regression_scaled": 0.8773,
      "isolated_label_silhouette_scaled": 2.2384,
      "batch_asw_scaled": 0.0605,
      "silhouette_scaled": 1.4149,
      "cell_cycle_score_scaled": 0.3835,
      "cell_cycle_score_raw": "NaN",
      "isolated_label_silhouette_raw": "NaN",
      "silhouette_raw": "NaN",
      "batch_asw_raw": "NaN",
      "pc_regression_raw": "NaN"
    },
    {
      "name": "Liger (full/unscaled)",
      "paper": "Single-Cell Multi-omic Integration Compares and Contrasts Features of Brain Cell Identity",
      "paper_url": "https://doi.org/10.1016/j.cell.2019.05.006",
      "year": 2019,
      "library": "https://github.com/welch-lab/liger",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/liger.py",
      "version": "0.5.0.9000",
      "runtime_min": 182.5667,
      "cpu_pct": 101,
      "memory_gb": 13.6,
      "rank": 28,
      "isolated_label_silhouette_scaled": 1.9279,
      "silhouette_scaled": 0.9546,
      "cell_cycle_score_scaled": 0.5538,
      "pc_regression_scaled": 0.953,
      "batch_asw_scaled": 0.391,
      "cell_cycle_score_raw": "NaN",
      "isolated_label_silhouette_raw": "NaN",
      "silhouette_raw": "NaN",
      "batch_asw_raw": "NaN",
      "pc_regression_raw": "NaN"
    },
    {
      "name": "Scanorama (hvg/scaled)",
      "paper": "Efficient integration of heterogeneous single-cell transcriptomes using Scanorama",
      "paper_url": "https://www.nature.com/articles/s41587-019-0113-3",
      "year": 2019,
      "library": "https://github.com/brianhie/scanorama",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/scanorama.py",
      "version": "1.7",
      "runtime_min": 3.1,
      "cpu_pct": 905.3,
      "memory_gb": 5,
      "rank": 29,
      "pc_regression_scaled": 0.253,
      "batch_asw_scaled": 1.2973,
      "isolated_label_silhouette_scaled": -0.8495,
      "silhouette_scaled": 2.657,
      "cell_cycle_score_scaled": 1.217,
      "cell_cycle_score_raw": "NaN",
      "isolated_label_silhouette_raw": "NaN",
      "silhouette_raw": "NaN",
      "batch_asw_raw": "NaN",
      "pc_regression_raw": "NaN"
    },
    {
      "name": "Scanorama gene output (full/scaled)",
      "paper": "Efficient integration of heterogeneous single-cell transcriptomes using Scanorama",
      "paper_url": "https://www.nature.com/articles/s41587-019-0113-3",
      "year": 2019,
      "library": "https://github.com/brianhie/scanorama",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/scanorama.py",
      "version": "1.7",
      "runtime_min": 19.45,
      "cpu_pct": 1340.6,
      "memory_gb": 33,
      "rank": 30,
      "isolated_label_silhouette_scaled": 0.4409,
      "pc_regression_scaled": 0.0998,
      "batch_asw_scaled": 0.2049,
      "silhouette_scaled": 2.3699,
      "cell_cycle_score_scaled": 1.1561,
      "cell_cycle_score_raw": "NaN",
      "isolated_label_silhouette_raw": "NaN",
      "silhouette_raw": "NaN",
      "batch_asw_raw": "NaN",
      "pc_regression_raw": "NaN"
    },
    {
      "name": "MNN (hvg/scaled)",
      "paper": "Batch effects in single-cell RNA-sequencing data are corrected by matching mutual nearest neighbors",
      "paper_url": "https://www.nature.com/articles/nbt.4091",
      "year": 2018,
      "library": "https://github.com/chriscainx/mnnpy",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/mnn.py",
      "version": "0.1.9.5",
      "runtime_min": 5.8,
      "cpu_pct": 1553.3,
      "memory_gb": 109,
      "rank": 31,
      "pc_regression_scaled": 0,
      "cell_cycle_score_scaled": 0.9244,
      "isolated_label_silhouette_scaled": -0.7343,
      "batch_asw_scaled": 1.177,
      "silhouette_scaled": 2.7261,
      "cell_cycle_score_raw": "NaN",
      "isolated_label_silhouette_raw": "NaN",
      "silhouette_raw": "NaN",
      "batch_asw_raw": "NaN",
      "pc_regression_raw": "NaN"
    },
    {
      "name": "Scanorama gene output (hvg/scaled)",
      "paper": "Efficient integration of heterogeneous single-cell transcriptomes using Scanorama",
      "paper_url": "https://www.nature.com/articles/s41587-019-0113-3",
      "year": 2019,
      "library": "https://github.com/brianhie/scanorama",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/scanorama.py",
      "version": "1.7",
      "runtime_min": 3.3667,
      "cpu_pct": 1614.7,
      "memory_gb": 4.9,
      "rank": 32,
      "silhouette_scaled": 3.9069,
      "pc_regression_scaled": 0,
      "isolated_label_silhouette_scaled": -0.903,
      "batch_asw_scaled": -0.4355,
      "cell_cycle_score_scaled": 1.143,
      "cell_cycle_score_raw": "NaN",
      "isolated_label_silhouette_raw": "NaN",
      "silhouette_raw": "NaN",
      "batch_asw_raw": "NaN",
      "pc_regression_raw": "NaN"
    }
  ]
}
