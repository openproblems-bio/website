{
  "name": "Immune (by batch)",
  "data_url": "https://ndownloader.figshare.com/files/36086786",
  "data_reference": "https://doi.org/10.1038/s41592-021-01336-8",
  "headers": [
    {
      "category": "method",
      "id": "rank",
      "label": "Rank",
      "result_name": "rank",
      "orderable": true,
      "tooltip": "Todo: fill in",
      "bold": true
    },
    {
      "category": "method",
      "id": "name",
      "label": "Name",
      "result_name": "name",
      "orderable": true,
      "tooltip": "Todo: fill in",
      "bold": false,
      "href": "implementation",
      "align": "left"
    },
    {
      "category": "info",
      "id": "paper",
      "label": "Paper",
      "orderable": false,
      "tooltip": "Todo: fill in",
      "bold": false,
      "href": "paper_url",
      "html": "<i class=\"fas fa-file-alt\"/>"
    },
    {
      "category": "info",
      "id": "year",
      "label": "Year",
      "result_name": "year",
      "orderable": true,
      "tooltip": "Todo: fill in",
      "bold": false
    },
    {
      "category": "info",
      "id": "library",
      "label": "Library",
      "result_name": "version",
      "orderable": true,
      "tooltip": "Todo: fill in",
      "bold": false,
      "href": "library"
    },
    {
      "category": "execution",
      "id": "memory_gb",
      "label": "Memory (GB)",
      "result_name": "memory_gb",
      "orderable": true,
      "tooltip": "Todo: fill in",
      "bold": false,
      "digits": 1
    },
    {
      "category": "execution",
      "id": "runtime_min",
      "label": "Runtime (min)",
      "result_name": "runtime_min",
      "orderable": true,
      "tooltip": "Todo: fill in",
      "bold": false,
      "digits": 1
    },
    {
      "category": "execution",
      "id": "cpu_pct",
      "label": "CPU (%)",
      "result_name": "cpu_pct",
      "orderable": true,
      "tooltip": "Todo: fill in",
      "bold": false,
      "digits": 1
    },
    {
      "category": "raw",
      "id": "hvg_conservation_raw",
      "label": "HVG conservation",
      "result_name": "hvg_conservation_raw",
      "orderable": true,
      "tooltip": "Todo: fill in",
      "bold": false,
      "digits": 2
    },
    {
      "category": "scaled",
      "id": "hvg_conservation_scaled",
      "label": "HVG conservation",
      "result_name": "hvg_conservation_scaled",
      "orderable": true,
      "tooltip": "Todo: fill in",
      "bold": false,
      "digits": 2
    }
  ],
  "results": [
    {
      "name": "SCALEX (hvg)",
      "paper": "Online single-cell data integration through projecting heterogeneous datasets into a common cell-embedding space",
      "paper_url": "https://doi.org/10.1038/s41467-022-33758-z",
      "year": 2022,
      "library": "https://github.com/jsxlei/SCALEX",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_feature/methods/scalex.py",
      "version": "1.0.2",
      "runtime_min": 17.8,
      "cpu_pct": 2596.9,
      "memory_gb": 18.8,
      "rank": 1,
      "hvg_conservation_scaled": 0.4286,
      "hvg_conservation_raw": "NaN"
    },
    {
      "name": "MNN (hvg/unscaled)",
      "paper": "Batch effects in single-cell RNA-sequencing data are corrected by matching mutual nearest neighbors",
      "paper_url": "https://www.nature.com/articles/nbt.4091",
      "year": 2018,
      "library": "https://github.com/chriscainx/mnnpy",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/mnn.py",
      "version": "0.1.9.5",
      "runtime_min": 14.0833,
      "cpu_pct": 1895.6,
      "memory_gb": 87.7,
      "rank": 2,
      "hvg_conservation_scaled": 0.3612,
      "hvg_conservation_raw": "NaN"
    },
    {
      "name": "Combat (hvg/unscaled)",
      "paper": "Adjusting batch effects in microarray expression data using empirical Bayes methods",
      "paper_url": "https://academic.oup.com/biostatistics/article/8/1/118/252073",
      "year": 2007,
      "library": "https://scanpy.readthedocs.io/en/stable/api/scanpy.pp.combat.html",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/combat.py",
      "version": "1.9.1",
      "runtime_min": 3.7667,
      "cpu_pct": 1017.3,
      "memory_gb": 4.8,
      "rank": 3,
      "hvg_conservation_scaled": 0.3574,
      "hvg_conservation_raw": "NaN"
    },
    {
      "name": "SCALEX (full)",
      "paper": "Online single-cell data integration through projecting heterogeneous datasets into a common cell-embedding space",
      "paper_url": "https://doi.org/10.1038/s41467-022-33758-z",
      "year": 2022,
      "library": "https://github.com/jsxlei/SCALEX",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_feature/methods/scalex.py",
      "version": "1.0.2",
      "runtime_min": 57.6,
      "cpu_pct": 2421.6,
      "memory_gb": 25.5,
      "rank": 4,
      "hvg_conservation_scaled": 0.2334,
      "hvg_conservation_raw": "NaN"
    },
    {
      "name": "FastMNN feature (hvg/unscaled)",
      "paper": "A description of the theory behind the fastMNN algorithm",
      "paper_url": "https://marionilab.github.io/FurtherMNN2018/theory/description.html",
      "year": 2019,
      "library": "https://doi.org/doi:10.18129/B9.bioc.batchelor",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/fastmnn.py",
      "version": "1.12.3",
      "runtime_min": 4.0167,
      "cpu_pct": 480.9,
      "memory_gb": 8.1,
      "rank": 5,
      "hvg_conservation_scaled": 0.2225,
      "hvg_conservation_raw": "NaN"
    },
    {
      "name": "FastMNN feature (hvg/scaled)",
      "paper": "A description of the theory behind the fastMNN algorithm",
      "paper_url": "https://marionilab.github.io/FurtherMNN2018/theory/description.html",
      "year": 2019,
      "library": "https://doi.org/doi:10.18129/B9.bioc.batchelor",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/fastmnn.py",
      "version": "1.12.3",
      "runtime_min": 3.85,
      "cpu_pct": 517.7,
      "memory_gb": 9.3,
      "rank": 6,
      "hvg_conservation_scaled": 0.2218,
      "hvg_conservation_raw": "NaN"
    },
    {
      "name": "MNN (full/unscaled)",
      "paper": "Batch effects in single-cell RNA-sequencing data are corrected by matching mutual nearest neighbors",
      "paper_url": "https://www.nature.com/articles/nbt.4091",
      "year": 2018,
      "library": "https://github.com/chriscainx/mnnpy",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/mnn.py",
      "version": "0.1.9.5",
      "runtime_min": 61.75,
      "cpu_pct": 3044.4,
      "memory_gb": 376.5,
      "rank": 7,
      "hvg_conservation_scaled": 0.2144,
      "hvg_conservation_raw": "NaN"
    },
    {
      "name": "MNN (hvg/scaled)",
      "paper": "Batch effects in single-cell RNA-sequencing data are corrected by matching mutual nearest neighbors",
      "paper_url": "https://www.nature.com/articles/nbt.4091",
      "year": 2018,
      "library": "https://github.com/chriscainx/mnnpy",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/mnn.py",
      "version": "0.1.9.5",
      "runtime_min": 14.2167,
      "cpu_pct": 1893.6,
      "memory_gb": 63.7,
      "rank": 8,
      "hvg_conservation_scaled": 0.214,
      "hvg_conservation_raw": "NaN"
    },
    {
      "name": "Scanorama gene output (hvg/scaled)",
      "paper": "Efficient integration of heterogeneous single-cell transcriptomes using Scanorama",
      "paper_url": "https://www.nature.com/articles/s41587-019-0113-3",
      "year": 2019,
      "library": "https://github.com/brianhie/scanorama",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/scanorama.py",
      "version": "1.7",
      "runtime_min": 7.75,
      "cpu_pct": 1302.5,
      "memory_gb": 8.2,
      "rank": 9,
      "hvg_conservation_scaled": 0.1738,
      "hvg_conservation_raw": "NaN"
    },
    {
      "name": "Combat (hvg/scaled)",
      "paper": "Adjusting batch effects in microarray expression data using empirical Bayes methods",
      "paper_url": "https://academic.oup.com/biostatistics/article/8/1/118/252073",
      "year": 2007,
      "library": "https://scanpy.readthedocs.io/en/stable/api/scanpy.pp.combat.html",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/combat.py",
      "version": "1.9.1",
      "runtime_min": 2.9,
      "cpu_pct": 1228.6,
      "memory_gb": 5.6,
      "rank": 10,
      "hvg_conservation_scaled": 0.1666,
      "hvg_conservation_raw": "NaN"
    },
    {
      "name": "Scanorama gene output (hvg/unscaled)",
      "paper": "Efficient integration of heterogeneous single-cell transcriptomes using Scanorama",
      "paper_url": "https://www.nature.com/articles/s41587-019-0113-3",
      "year": 2019,
      "library": "https://github.com/brianhie/scanorama",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/scanorama.py",
      "version": "1.7",
      "runtime_min": 4.95,
      "cpu_pct": 1702.4,
      "memory_gb": 7.6,
      "rank": 11,
      "hvg_conservation_scaled": 0.1519,
      "hvg_conservation_raw": "NaN"
    },
    {
      "name": "Combat (full/unscaled)",
      "paper": "Adjusting batch effects in microarray expression data using empirical Bayes methods",
      "paper_url": "https://academic.oup.com/biostatistics/article/8/1/118/252073",
      "year": 2007,
      "library": "https://scanpy.readthedocs.io/en/stable/api/scanpy.pp.combat.html",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/combat.py",
      "version": "1.9.1",
      "runtime_min": 6,
      "cpu_pct": 813.3,
      "memory_gb": 17.6,
      "rank": 12,
      "hvg_conservation_scaled": 0.0931,
      "hvg_conservation_raw": "NaN"
    },
    {
      "name": "FastMNN feature (full/scaled)",
      "paper": "A description of the theory behind the fastMNN algorithm",
      "paper_url": "https://marionilab.github.io/FurtherMNN2018/theory/description.html",
      "year": 2019,
      "library": "https://doi.org/doi:10.18129/B9.bioc.batchelor",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/fastmnn.py",
      "version": "1.12.3",
      "runtime_min": 14.5833,
      "cpu_pct": 182.6,
      "memory_gb": 29.2,
      "rank": 13,
      "hvg_conservation_scaled": 0.067,
      "hvg_conservation_raw": "NaN"
    },
    {
      "name": "FastMNN feature (full/unscaled)",
      "paper": "A description of the theory behind the fastMNN algorithm",
      "paper_url": "https://marionilab.github.io/FurtherMNN2018/theory/description.html",
      "year": 2019,
      "library": "https://doi.org/doi:10.18129/B9.bioc.batchelor",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/fastmnn.py",
      "version": "1.12.3",
      "runtime_min": 11.1333,
      "cpu_pct": 233.6,
      "memory_gb": 23.6,
      "rank": 14,
      "hvg_conservation_scaled": 0.067,
      "hvg_conservation_raw": "NaN"
    },
    {
      "name": "MNN (full/scaled)",
      "paper": "Batch effects in single-cell RNA-sequencing data are corrected by matching mutual nearest neighbors",
      "paper_url": "https://www.nature.com/articles/nbt.4091",
      "year": 2018,
      "library": "https://github.com/chriscainx/mnnpy",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/mnn.py",
      "version": "0.1.9.5",
      "runtime_min": 67.5667,
      "cpu_pct": 2840,
      "memory_gb": 598.3,
      "rank": 15,
      "hvg_conservation_scaled": -0.0512,
      "hvg_conservation_raw": "NaN"
    },
    {
      "name": "Scanorama gene output (full/scaled)",
      "paper": "Efficient integration of heterogeneous single-cell transcriptomes using Scanorama",
      "paper_url": "https://www.nature.com/articles/s41587-019-0113-3",
      "year": 2019,
      "library": "https://github.com/brianhie/scanorama",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/scanorama.py",
      "version": "1.7",
      "runtime_min": 25.6667,
      "cpu_pct": 1479.6,
      "memory_gb": 39.1,
      "rank": 16,
      "hvg_conservation_scaled": -0.0663,
      "hvg_conservation_raw": "NaN"
    },
    {
      "name": "Scanorama gene output (full/unscaled)",
      "paper": "Efficient integration of heterogeneous single-cell transcriptomes using Scanorama",
      "paper_url": "https://www.nature.com/articles/s41587-019-0113-3",
      "year": 2019,
      "library": "https://github.com/brianhie/scanorama",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/scanorama.py",
      "version": "1.7",
      "runtime_min": 10.2,
      "cpu_pct": 2014.6,
      "memory_gb": 18.1,
      "rank": 17,
      "hvg_conservation_scaled": -0.0681,
      "hvg_conservation_raw": "NaN"
    },
    {
      "name": "Combat (full/scaled)",
      "paper": "Adjusting batch effects in microarray expression data using empirical Bayes methods",
      "paper_url": "https://academic.oup.com/biostatistics/article/8/1/118/252073",
      "year": 2007,
      "library": "https://scanpy.readthedocs.io/en/stable/api/scanpy.pp.combat.html",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/combat.py",
      "version": "1.9.1",
      "runtime_min": 6.35,
      "cpu_pct": 1185.2,
      "memory_gb": 20.1,
      "rank": 18,
      "hvg_conservation_scaled": -0.0701,
      "hvg_conservation_raw": "NaN"
    }
  ]
}
