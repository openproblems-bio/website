{
  "name": "Pancreas (by batch)",
  "data_url": "https://ndownloader.figshare.com/files/36086813",
  "data_reference": "https://doi.org/10.1038/s41592-021-01336-8",
  "categories": [
    {
      "id": "method",
      "label": "Method",
      "enabled": true,
      "width": 2
    },
    {
      "id": "info",
      "label": "Info",
      "enabled": false,
      "width": 3
    },
    {
      "id": "execution",
      "label": "Execution",
      "enabled": true,
      "width": 3
    },
    {
      "id": "raw",
      "label": "Raw values",
      "enabled": false,
      "width": 1
    },
    {
      "id": "scaled",
      "label": "Scaled values",
      "enabled": true,
      "width": 1
    }
  ],
  "headers": [
    {
      "category": "method",
      "id": "rank",
      "label": "Rank",
      "result_name": "rank",
      "orderable": true,
      "tooltip": "Todo: fill in",
      "bold": true
    },
    {
      "category": "method",
      "id": "name",
      "label": "Name",
      "result_name": "name",
      "orderable": true,
      "tooltip": "Todo: fill in",
      "bold": false,
      "href": "implementation",
      "align": "left"
    },
    {
      "category": "info",
      "id": "paper",
      "label": "Paper",
      "orderable": false,
      "tooltip": "Todo: fill in",
      "bold": false,
      "href": "paper_url",
      "html": "<i class=\"fas fa-file-alt\"/>"
    },
    {
      "category": "info",
      "id": "year",
      "label": "Year",
      "result_name": "year",
      "orderable": true,
      "tooltip": "Todo: fill in",
      "bold": false
    },
    {
      "category": "info",
      "id": "library",
      "label": "Library",
      "result_name": "version",
      "orderable": true,
      "tooltip": "Todo: fill in",
      "bold": false,
      "href": "library"
    },
    {
      "category": "execution",
      "id": "memory_gb",
      "label": "Memory (GB)",
      "result_name": "memory_gb",
      "orderable": true,
      "tooltip": "Todo: fill in",
      "bold": false,
      "digits": 1
    },
    {
      "category": "execution",
      "id": "runtime_min",
      "label": "Runtime (min)",
      "result_name": "runtime_min",
      "orderable": true,
      "tooltip": "Todo: fill in",
      "bold": false,
      "digits": 1
    },
    {
      "category": "execution",
      "id": "cpu_pct",
      "label": "CPU (%)",
      "result_name": "cpu_pct",
      "orderable": true,
      "tooltip": "Todo: fill in",
      "bold": false,
      "digits": 1
    },
    {
      "category": "raw",
      "id": "hvg_conservation_raw",
      "label": "HVG conservation",
      "result_name": "hvg_conservation_raw",
      "orderable": true,
      "tooltip": "Todo: fill in",
      "bold": false,
      "digits": 2
    },
    {
      "category": "scaled",
      "id": "hvg_conservation_scaled",
      "label": "HVG conservation",
      "result_name": "hvg_conservation_scaled",
      "orderable": true,
      "tooltip": "Todo: fill in",
      "bold": false,
      "digits": 2
    }
  ],
  "results": [
    {
      "name": "Combat (hvg/unscaled)",
      "paper": "Adjusting batch effects in microarray expression data using empirical Bayes methods",
      "paper_url": "https://academic.oup.com/biostatistics/article/8/1/118/252073",
      "year": 2007,
      "library": "https://scanpy.readthedocs.io/en/stable/api/scanpy.pp.combat.html",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/combat.py",
      "version": "1.9.1",
      "runtime_min": 3.2333,
      "cpu_pct": 1110.2,
      "memory_gb": 3.3,
      "rank": 1,
      "hvg_conservation_scaled": 0.2566,
      "hvg_conservation_raw": "NaN"
    },
    {
      "name": "MNN (hvg/unscaled)",
      "paper": "Batch effects in single-cell RNA-sequencing data are corrected by matching mutual nearest neighbors",
      "paper_url": "https://www.nature.com/articles/nbt.4091",
      "year": 2018,
      "library": "https://github.com/chriscainx/mnnpy",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/mnn.py",
      "version": "0.1.9.5",
      "runtime_min": 4.1333,
      "cpu_pct": 2304.6,
      "memory_gb": 71.4,
      "rank": 2,
      "hvg_conservation_scaled": -0.0189,
      "hvg_conservation_raw": "NaN"
    },
    {
      "name": "SCALEX (hvg)",
      "paper": "Online single-cell data integration through projecting heterogeneous datasets into a common cell-embedding space",
      "paper_url": "https://doi.org/10.1038/s41467-022-33758-z",
      "year": 2022,
      "library": "https://github.com/jsxlei/SCALEX",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_feature/methods/scalex.py",
      "version": "1.0.2",
      "runtime_min": 15.0833,
      "cpu_pct": 2531.5,
      "memory_gb": 19.9,
      "rank": 3,
      "hvg_conservation_scaled": -0.0576,
      "hvg_conservation_raw": "NaN"
    },
    {
      "name": "FastMNN feature (hvg/scaled)",
      "paper": "A description of the theory behind the fastMNN algorithm",
      "paper_url": "https://marionilab.github.io/FurtherMNN2018/theory/description.html",
      "year": 2019,
      "library": "https://doi.org/doi:10.18129/B9.bioc.batchelor",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/fastmnn.py",
      "version": "1.12.3",
      "runtime_min": 3.55,
      "cpu_pct": 435.4,
      "memory_gb": 5.4,
      "rank": 4,
      "hvg_conservation_scaled": -0.3464,
      "hvg_conservation_raw": "NaN"
    },
    {
      "name": "FastMNN feature (hvg/unscaled)",
      "paper": "A description of the theory behind the fastMNN algorithm",
      "paper_url": "https://marionilab.github.io/FurtherMNN2018/theory/description.html",
      "year": 2019,
      "library": "https://doi.org/doi:10.18129/B9.bioc.batchelor",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/fastmnn.py",
      "version": "1.12.3",
      "runtime_min": 3.0667,
      "cpu_pct": 509.9,
      "memory_gb": 5.4,
      "rank": 5,
      "hvg_conservation_scaled": -0.3468,
      "hvg_conservation_raw": "NaN"
    },
    {
      "name": "MNN (hvg/scaled)",
      "paper": "Batch effects in single-cell RNA-sequencing data are corrected by matching mutual nearest neighbors",
      "paper_url": "https://www.nature.com/articles/nbt.4091",
      "year": 2018,
      "library": "https://github.com/chriscainx/mnnpy",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/mnn.py",
      "version": "0.1.9.5",
      "runtime_min": 6.5667,
      "cpu_pct": 1503.6,
      "memory_gb": 78.3,
      "rank": 6,
      "hvg_conservation_scaled": -0.3674,
      "hvg_conservation_raw": "NaN"
    },
    {
      "name": "Combat (hvg/scaled)",
      "paper": "Adjusting batch effects in microarray expression data using empirical Bayes methods",
      "paper_url": "https://academic.oup.com/biostatistics/article/8/1/118/252073",
      "year": 2007,
      "library": "https://scanpy.readthedocs.io/en/stable/api/scanpy.pp.combat.html",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/combat.py",
      "version": "1.9.1",
      "runtime_min": 2.7167,
      "cpu_pct": 1176.5,
      "memory_gb": 3.8,
      "rank": 7,
      "hvg_conservation_scaled": -0.4474,
      "hvg_conservation_raw": "NaN"
    },
    {
      "name": "Scanorama gene output (hvg/scaled)",
      "paper": "Efficient integration of heterogeneous single-cell transcriptomes using Scanorama",
      "paper_url": "https://www.nature.com/articles/s41587-019-0113-3",
      "year": 2019,
      "library": "https://github.com/brianhie/scanorama",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/scanorama.py",
      "version": "1.7",
      "runtime_min": 5.0833,
      "cpu_pct": 1086,
      "memory_gb": 5,
      "rank": 8,
      "hvg_conservation_scaled": -0.4491,
      "hvg_conservation_raw": "NaN"
    },
    {
      "name": "Scanorama gene output (hvg/unscaled)",
      "paper": "Efficient integration of heterogeneous single-cell transcriptomes using Scanorama",
      "paper_url": "https://www.nature.com/articles/s41587-019-0113-3",
      "year": 2019,
      "library": "https://github.com/brianhie/scanorama",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/scanorama.py",
      "version": "1.7",
      "runtime_min": 3.0167,
      "cpu_pct": 1506.1,
      "memory_gb": 4.8,
      "rank": 9,
      "hvg_conservation_scaled": -0.4645,
      "hvg_conservation_raw": "NaN"
    },
    {
      "name": "Combat (full/unscaled)",
      "paper": "Adjusting batch effects in microarray expression data using empirical Bayes methods",
      "paper_url": "https://academic.oup.com/biostatistics/article/8/1/118/252073",
      "year": 2007,
      "library": "https://scanpy.readthedocs.io/en/stable/api/scanpy.pp.combat.html",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/combat.py",
      "version": "1.9.1",
      "runtime_min": 2.7167,
      "cpu_pct": 892.4,
      "memory_gb": 13.9,
      "rank": 10,
      "hvg_conservation_scaled": -0.5105,
      "hvg_conservation_raw": "NaN"
    },
    {
      "name": "MNN (full/unscaled)",
      "paper": "Batch effects in single-cell RNA-sequencing data are corrected by matching mutual nearest neighbors",
      "paper_url": "https://www.nature.com/articles/nbt.4091",
      "year": 2018,
      "library": "https://github.com/chriscainx/mnnpy",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/mnn.py",
      "version": "0.1.9.5",
      "runtime_min": 23.2333,
      "cpu_pct": 3256.7,
      "memory_gb": 330.7,
      "rank": 11,
      "hvg_conservation_scaled": -0.5449,
      "hvg_conservation_raw": "NaN"
    },
    {
      "name": "SCALEX (full)",
      "paper": "Online single-cell data integration through projecting heterogeneous datasets into a common cell-embedding space",
      "paper_url": "https://doi.org/10.1038/s41467-022-33758-z",
      "year": 2022,
      "library": "https://github.com/jsxlei/SCALEX",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_feature/methods/scalex.py",
      "version": "1.0.2",
      "runtime_min": 104.8167,
      "cpu_pct": 2002.5,
      "memory_gb": 23.4,
      "rank": 12,
      "hvg_conservation_scaled": -0.5776,
      "hvg_conservation_raw": "NaN"
    },
    {
      "name": "FastMNN feature (full/unscaled)",
      "paper": "A description of the theory behind the fastMNN algorithm",
      "paper_url": "https://marionilab.github.io/FurtherMNN2018/theory/description.html",
      "year": 2019,
      "library": "https://doi.org/doi:10.18129/B9.bioc.batchelor",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/fastmnn.py",
      "version": "1.12.3",
      "runtime_min": 8.45,
      "cpu_pct": 272.5,
      "memory_gb": 17.7,
      "rank": 13,
      "hvg_conservation_scaled": -0.7869,
      "hvg_conservation_raw": "NaN"
    },
    {
      "name": "FastMNN feature (full/scaled)",
      "paper": "A description of the theory behind the fastMNN algorithm",
      "paper_url": "https://marionilab.github.io/FurtherMNN2018/theory/description.html",
      "year": 2019,
      "library": "https://doi.org/doi:10.18129/B9.bioc.batchelor",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/fastmnn.py",
      "version": "1.12.3",
      "runtime_min": 10.5667,
      "cpu_pct": 243.6,
      "memory_gb": 22.6,
      "rank": 14,
      "hvg_conservation_scaled": -0.7869,
      "hvg_conservation_raw": "NaN"
    },
    {
      "name": "Scanorama gene output (full/unscaled)",
      "paper": "Efficient integration of heterogeneous single-cell transcriptomes using Scanorama",
      "paper_url": "https://www.nature.com/articles/s41587-019-0113-3",
      "year": 2019,
      "library": "https://github.com/brianhie/scanorama",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/scanorama.py",
      "version": "1.7",
      "runtime_min": 9.3167,
      "cpu_pct": 1449.8,
      "memory_gb": 26.9,
      "rank": 15,
      "hvg_conservation_scaled": -0.8053,
      "hvg_conservation_raw": "NaN"
    },
    {
      "name": "MNN (full/scaled)",
      "paper": "Batch effects in single-cell RNA-sequencing data are corrected by matching mutual nearest neighbors",
      "paper_url": "https://www.nature.com/articles/nbt.4091",
      "year": 2018,
      "library": "https://github.com/chriscainx/mnnpy",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/mnn.py",
      "version": "0.1.9.5",
      "runtime_min": 36.15,
      "cpu_pct": 2252.6,
      "memory_gb": 503.3,
      "rank": 16,
      "hvg_conservation_scaled": -0.8238,
      "hvg_conservation_raw": "NaN"
    },
    {
      "name": "Scanorama gene output (full/scaled)",
      "paper": "Efficient integration of heterogeneous single-cell transcriptomes using Scanorama",
      "paper_url": "https://www.nature.com/articles/s41587-019-0113-3",
      "year": 2019,
      "library": "https://github.com/brianhie/scanorama",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/scanorama.py",
      "version": "1.7",
      "runtime_min": 16.5833,
      "cpu_pct": 1426.8,
      "memory_gb": 33.1,
      "rank": 17,
      "hvg_conservation_scaled": -0.835,
      "hvg_conservation_raw": "NaN"
    },
    {
      "name": "Combat (full/scaled)",
      "paper": "Adjusting batch effects in microarray expression data using empirical Bayes methods",
      "paper_url": "https://academic.oup.com/biostatistics/article/8/1/118/252073",
      "year": 2007,
      "library": "https://scanpy.readthedocs.io/en/stable/api/scanpy.pp.combat.html",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/_batch_integration/batch_integration_graph/methods/combat.py",
      "version": "1.9.1",
      "runtime_min": 4.7167,
      "cpu_pct": 1270.3,
      "memory_gb": 16,
      "rank": 18,
      "hvg_conservation_scaled": -0.8754,
      "hvg_conservation_raw": "NaN"
    }
  ]
}
