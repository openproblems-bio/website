{
    "name": "Pancreas (by batch)", 
    "data_url": "https://ndownloader.figshare.com/files/36086813", 
    "data_reference": "https://doi.org/10.1038/s41592-021-01336-8", 
    "headers": {
        "names": [
            "Rank", 
            "Mean score", 
            "Macro F1 score", 
            "Accuracy", 
            "F1 score", 
            "Memory (GB)", 
            "Runtime (min)", 
            "CPU (%)", 
            "Name", 
            "Paper", 
            "Year", 
            "Library"
        ], 
        "fixed": [
            "Name", 
            "Paper", 
            "Library"
        ]
    }, 
    "results": [
        {
            "Name": "Multilayer perceptron (log CPM)", 
            "Paper": "Connectionist learning procedures", 
            "Paper URL": "https://doi.org/10.1016/0004-3702(89)90049-0", 
            "Year": 1990, 
            "Library": "https://scikit-learn.org/stable/modules/generated/sklearn.neural_network.MLPClassifier.html", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/mlp.py", 
            "Version": "1.1.3", 
            "Runtime (min)": 1.2833333333333332, 
            "CPU (%)": 589.2, 
            "Memory (GB)": 2.3, 
            "Rank": 1, 
            "Mean score": 0.9314970704481392, 
            "F1 score": 0.9601199174287633, 
            "Accuracy": 0.959288402326377, 
            "Macro F1 score": 0.8750828915892774
        }, 
        {
            "Name": "XGBoost (log CPM)", 
            "Paper": "XGBoost: A Scalable Tree Boosting System", 
            "Paper URL": "https://doi.org/10.1145/2939672.2939785", 
            "Year": 2016, 
            "Library": "https://xgboost.readthedocs.io/en/stable/index.html", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/xgboost.py", 
            "Version": "1.6.2", 
            "Runtime (min)": 8.133333333333333, 
            "CPU (%)": 364.3, 
            "Memory (GB)": 2.7, 
            "Rank": 2, 
            "Mean score": 0.9143672697577142, 
            "Macro F1 score": 0.8981551990118072, 
            "Accuracy": 0.9230242901128977, 
            "F1 score": 0.9219223201484376
        }, 
        {
            "Name": "Logistic regression (log CPM)", 
            "Paper": "Applied Logistic Regression", 
            "Paper URL": "https://books.google.com/books?id=64JYAwAAQBAJ", 
            "Year": 2013, 
            "Library": "https://scikit-learn.org/stable/modules/generated/sklearn.linear_model.LogisticRegression.html", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/logistic_regression.py", 
            "Version": "1.1.3", 
            "Runtime (min)": 1.3, 
            "CPU (%)": 381.2, 
            "Memory (GB)": 2.3, 
            "Rank": 3, 
            "Mean score": 0.9121321195341842, 
            "Accuracy": 0.9486828600752651, 
            "F1 score": 0.9490223467555517, 
            "Macro F1 score": 0.8386911517717356
        }, 
        {
            "Name": "Seurat reference mapping (SCTransform)", 
            "Paper": "Integrated analysis of multimodal single-cell data", 
            "Paper URL": "https://doi.org/10.1016/j.cell.2021.04.048", 
            "Year": 2021, 
            "Library": "https://github.com/satijalab/seurat", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/seurat.py", 
            "Version": "4.1.1", 
            "Runtime (min)": 16.7, 
            "CPU (%)": 115.8, 
            "Memory (GB)": 361.7, 
            "Rank": 4, 
            "Mean score": 0.9120255282535439, 
            "F1 score": 0.9471232208854597, 
            "Macro F1 score": 0.8409547323322367, 
            "Accuracy": 0.9479986315429354
        }, 
        {
            "Name": "Multilayer perceptron (log scran)", 
            "Paper": "Connectionist learning procedures", 
            "Paper URL": "https://doi.org/10.1016/0004-3702(89)90049-0", 
            "Year": 1990, 
            "Library": "https://scikit-learn.org/stable/modules/generated/sklearn.neural_network.MLPClassifier.html", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/mlp.py", 
            "Version": "1.1.3", 
            "Runtime (min)": 17.45, 
            "CPU (%)": 697.3, 
            "Memory (GB)": 9.7, 
            "Rank": 5, 
            "Mean score": 0.895165957630577, 
            "Accuracy": 0.952788231269244, 
            "Macro F1 score": 0.7806422284269819, 
            "F1 score": 0.9520674131955053
        }, 
        {
            "Name": "XGBoost (log scran)", 
            "Paper": "XGBoost: A Scalable Tree Boosting System", 
            "Paper URL": "https://doi.org/10.1145/2939672.2939785", 
            "Year": 2016, 
            "Library": "https://xgboost.readthedocs.io/en/stable/index.html", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/xgboost.py", 
            "Version": "1.6.2", 
            "Runtime (min)": 12.65, 
            "CPU (%)": 319.1, 
            "Memory (GB)": 8.7, 
            "Rank": 6, 
            "Mean score": 0.8687119911459363, 
            "Macro F1 score": 0.7725747805248032, 
            "Accuracy": 0.9168662333219295, 
            "F1 score": 0.9166949595910763
        }, 
        {
            "Name": "scANVI (All genes)", 
            "Paper": "Probabilistic harmonization and annotation of single-cell transcriptomics data with deep generative models", 
            "Paper URL": "https://doi.org/10.15252/msb.20209620", 
            "Year": 2021, 
            "Library": "https://github.com/YosefLab/scvi-tools", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/scvi_tools.py", 
            "Version": "0.19.0", 
            "Runtime (min)": 53.483333333333334, 
            "CPU (%)": 1430.0, 
            "Memory (GB)": 4.5, 
            "Rank": 7, 
            "Mean score": 0.8426552810532982, 
            "F1 score": 0.9449605141090889, 
            "Macro F1 score": 0.6360330403063652, 
            "Accuracy": 0.9469722887444406
        }, 
        {
            "Name": "scANVI (Seurat v3 2000 HVG)", 
            "Paper": "Probabilistic harmonization and annotation of single-cell transcriptomics data with deep generative models", 
            "Paper URL": "https://doi.org/10.15252/msb.20209620", 
            "Year": 2021, 
            "Library": "https://github.com/YosefLab/scvi-tools", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/scvi_tools.py", 
            "Version": "0.19.0", 
            "Runtime (min)": 36.233333333333334, 
            "CPU (%)": 2384.9, 
            "Memory (GB)": 6.5, 
            "Rank": 8, 
            "Mean score": 0.8424767562433835, 
            "Macro F1 score": 0.6373394745381497, 
            "Accuracy": 0.9459459459459459, 
            "F1 score": 0.9441448482460549
        }, 
        {
            "Name": "scArches+scANVI (All genes)", 
            "Paper": "Query to reference single-cell integration with transfer learning", 
            "Paper URL": "https://doi.org/10.1101/2020.07.16.205997", 
            "Year": 2021, 
            "Library": "https://github.com/YosefLab/scvi-tools", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/scvi_tools.py", 
            "Version": "0.19.0", 
            "Runtime (min)": 44.61666666666667, 
            "CPU (%)": 1575.4, 
            "Memory (GB)": 5.8, 
            "Rank": 9, 
            "Mean score": 0.8369222291749544, 
            "F1 score": 0.9398490707360454, 
            "Accuracy": 0.9414984604858023, 
            "Macro F1 score": 0.6294191563030153
        }, 
        {
            "Name": "Logistic regression (log scran)", 
            "Paper": "Applied Logistic Regression", 
            "Paper URL": "https://books.google.com/books?id=64JYAwAAQBAJ", 
            "Year": 2013, 
            "Library": "https://scikit-learn.org/stable/modules/generated/sklearn.linear_model.LogisticRegression.html", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/logistic_regression.py", 
            "Version": "1.1.3", 
            "Runtime (min)": 10.466666666666667, 
            "CPU (%)": 140.0, 
            "Memory (GB)": 9.7, 
            "Rank": 10, 
            "Mean score": 0.816614210907162, 
            "Macro F1 score": 0.6065503464465095, 
            "Accuracy": 0.9223400615805679, 
            "F1 score": 0.9209522246944088
        }, 
        {
            "Name": "scArches+scANVI (Seurat v3 2000 HVG)", 
            "Paper": "Query to reference single-cell integration with transfer learning", 
            "Paper URL": "https://doi.org/10.1101/2020.07.16.205997", 
            "Year": 2021, 
            "Library": "https://github.com/YosefLab/scvi-tools", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/scvi_tools.py", 
            "Version": "0.19.0", 
            "Runtime (min)": 17.8, 
            "CPU (%)": 1401.5, 
            "Memory (GB)": 4.099999999, 
            "Rank": 11, 
            "Mean score": 0.7824148414626292, 
            "Accuracy": 0.9353404036948341, 
            "Macro F1 score": 0.4819322487444954, 
            "F1 score": 0.9299718719485583
        }, 
        {
            "Name": "K-neighbors classifier (log CPM)", 
            "Paper": "Nearest neighbor pattern classification", 
            "Paper URL": "https://doi.org/10.1109/TIT.1967.1053964", 
            "Year": 1967, 
            "Library": "https://scikit-learn.org/stable/modules/generated/sklearn.neighbors.KNeighborsClassifier.html", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/knn_classifier.py", 
            "Version": "1.1.3", 
            "Runtime (min)": 4.183333333333334, 
            "CPU (%)": 93.8, 
            "Memory (GB)": 2.6, 
            "Rank": 12, 
            "Mean score": 0.7259946643528575, 
            "Macro F1 score": 0.7378872886668939, 
            "Accuracy": 0.7249401300034212, 
            "F1 score": 0.7151565743882577
        }, 
        {
            "Name": "K-neighbors classifier (log scran)", 
            "Paper": "Nearest neighbor pattern classification", 
            "Paper URL": "https://doi.org/10.1109/TIT.1967.1053964", 
            "Year": 1967, 
            "Library": "https://scikit-learn.org/stable/modules/generated/sklearn.neighbors.KNeighborsClassifier.html", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/knn_classifier.py", 
            "Version": "1.1.3", 
            "Runtime (min)": 8.016666666666667, 
            "CPU (%)": 117.1, 
            "Memory (GB)": 9.7, 
            "Rank": 13, 
            "Mean score": 0.712954080450413, 
            "Accuracy": 0.7947314403010606, 
            "Macro F1 score": 0.5459940249659802, 
            "F1 score": 0.7981367760841981
        }, 
        {
            "Name": "Majority Vote", 
            "Paper": "Majority Vote (baseline)", 
            "Paper URL": "https://openproblems.bio", 
            "Year": 2022, 
            "Library": "https://github.com/openproblems-bio/openproblems", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/baseline.py", 
            "Version": "0.6.0", 
            "Runtime (min)": 0.14333333333333334, 
            "CPU (%)": 90.0, 
            "Memory (GB)": 1.5, 
            "Rank": 14, 
            "Mean score": 0.03538008081263729, 
            "Macro F1 score": -0.03307320816509656, 
            "F1 score": -0.03800173927040929, 
            "Accuracy": 0.17721518987341772
        }
    ]
}