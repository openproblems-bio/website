{
    "name": "CeNGEN (random split)", 
    "data_url": "https://github.com/Munfred/wormcells-data/releases/download/taylor2020/taylor2020.h5ad", 
    "data_reference": "https://doi.org/10.1016/j.neuron.2018.07.042", 
    "headers": {
        "names": [
            "Rank", 
            "Mean score", 
            "Macro F1 score", 
            "Accuracy", 
            "F1 score", 
            "Memory (GB)", 
            "Runtime (min)", 
            "CPU (%)", 
            "Name", 
            "Paper", 
            "Year", 
            "Library"
        ], 
        "fixed": [
            "Name", 
            "Paper", 
            "Library"
        ]
    }, 
    "results": [
        {
            "Name": "Logistic regression (log CPM)", 
            "Paper": "Applied Logistic Regression", 
            "Paper URL": "https://books.google.com/books?id=64JYAwAAQBAJ", 
            "Year": 2013, 
            "Library": "https://scikit-learn.org/stable/modules/generated/sklearn.linear_model.LogisticRegression.html", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/logistic_regression.py", 
            "Version": "1.1.3", 
            "Runtime (min)": 7.733333333333333, 
            "CPU (%)": 1890.8, 
            "Memory (GB)": 1.9, 
            "Rank": 1, 
            "Mean score": 0.8623558878162695, 
            "F1 score": 0.8861284288659187, 
            "Macro F1 score": 0.816789204334856, 
            "Accuracy": 0.884150030248034
        }, 
        {
            "Name": "Multilayer perceptron (log scran)", 
            "Paper": "Connectionist learning procedures", 
            "Paper URL": "https://doi.org/10.1016/0004-3702(89)90049-0", 
            "Year": 1990, 
            "Library": "https://scikit-learn.org/stable/modules/generated/sklearn.neural_network.MLPClassifier.html", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/mlp.py", 
            "Version": "1.1.3", 
            "Runtime (min)": 59.11666666666667, 
            "CPU (%)": 1279.3, 
            "Memory (GB)": 7.3, 
            "Rank": 2, 
            "Mean score": 0.8543124413273976, 
            "Accuracy": 0.8718491631377294, 
            "F1 score": 0.873422924697839, 
            "Macro F1 score": 0.8176652361466246
        }, 
        {
            "Name": "XGBoost (log CPM)", 
            "Paper": "XGBoost: A Scalable Tree Boosting System", 
            "Paper URL": "https://doi.org/10.1145/2939672.2939785", 
            "Year": 2016, 
            "Library": "https://xgboost.readthedocs.io/en/stable/index.html", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/xgboost.py", 
            "Version": "1.6.2", 
            "Runtime (min)": 12.583333333333334, 
            "CPU (%)": 2043.1, 
            "Memory (GB)": 2.0, 
            "Rank": 3, 
            "Mean score": 0.8249387775350777, 
            "F1 score": 0.8429178173603058, 
            "Accuracy": 0.8397358338374673, 
            "Macro F1 score": 0.7921626814074602
        }, 
        {
            "Name": "Multilayer perceptron (log CPM)", 
            "Paper": "Connectionist learning procedures", 
            "Paper URL": "https://doi.org/10.1016/0004-3702(89)90049-0", 
            "Year": 1990, 
            "Library": "https://scikit-learn.org/stable/modules/generated/sklearn.neural_network.MLPClassifier.html", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/mlp.py", 
            "Version": "1.1.3", 
            "Runtime (min)": 25.716666666666665, 
            "CPU (%)": 2546.9, 
            "Memory (GB)": 1.7, 
            "Rank": 4, 
            "Mean score": 0.8200651751597806, 
            "Macro F1 score": 0.7594256522912787, 
            "F1 score": 0.8500439203749962, 
            "Accuracy": 0.8507259528130672
        }, 
        {
            "Name": "Logistic regression (log scran)", 
            "Paper": "Applied Logistic Regression", 
            "Paper URL": "https://books.google.com/books?id=64JYAwAAQBAJ", 
            "Year": 2013, 
            "Library": "https://scikit-learn.org/stable/modules/generated/sklearn.linear_model.LogisticRegression.html", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/logistic_regression.py", 
            "Version": "1.1.3", 
            "Runtime (min)": 45.516666666666666, 
            "CPU (%)": 322.5, 
            "Memory (GB)": 7.3, 
            "Rank": 5, 
            "Mean score": 0.8175842047848777, 
            "Macro F1 score": 0.7936359122536898, 
            "Accuracy": 0.8226961080863077, 
            "F1 score": 0.8364205940146356
        }, 
        {
            "Name": "K-neighbors classifier (log scran)", 
            "Paper": "Nearest neighbor pattern classification", 
            "Paper URL": "https://doi.org/10.1109/TIT.1967.1053964", 
            "Year": 1967, 
            "Library": "https://scikit-learn.org/stable/modules/generated/sklearn.neighbors.KNeighborsClassifier.html", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/knn_classifier.py", 
            "Version": "1.1.3", 
            "Runtime (min)": 34.35, 
            "CPU (%)": 109.1, 
            "Memory (GB)": 7.3, 
            "Rank": 6, 
            "Mean score": 0.8114854614086796, 
            "Accuracy": 0.8363581367211131, 
            "Macro F1 score": 0.7607595930382328, 
            "F1 score": 0.8373386544666929
        }, 
        {
            "Name": "Seurat reference mapping (SCTransform)", 
            "Paper": "Integrated analysis of multimodal single-cell data", 
            "Paper URL": "https://doi.org/10.1016/j.cell.2021.04.048", 
            "Year": 2021, 
            "Library": "https://github.com/satijalab/seurat", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/seurat.py", 
            "Version": "4.1.1", 
            "Runtime (min)": 27.5, 
            "CPU (%)": 126.7, 
            "Memory (GB)": 1200.0, 
            "Rank": 7, 
            "Mean score": 0.8054107554266564, 
            "F1 score": 0.8296643439983402, 
            "Macro F1 score": 0.7560577387768901, 
            "Accuracy": 0.8305101835047388
        }, 
        {
            "Name": "XGBoost (log scran)", 
            "Paper": "XGBoost: A Scalable Tree Boosting System", 
            "Paper URL": "https://doi.org/10.1145/2939672.2939785", 
            "Year": 2016, 
            "Library": "https://xgboost.readthedocs.io/en/stable/index.html", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/xgboost.py", 
            "Version": "1.6.2", 
            "Runtime (min)": 48.21666666666667, 
            "CPU (%)": 754.6, 
            "Memory (GB)": 7.1, 
            "Rank": 8, 
            "Mean score": 0.79911591920095, 
            "F1 score": 0.8234489470064652, 
            "Macro F1 score": 0.756697761997877, 
            "Accuracy": 0.8172010485985078
        }, 
        {
            "Name": "K-neighbors classifier (log CPM)", 
            "Paper": "Nearest neighbor pattern classification", 
            "Paper URL": "https://doi.org/10.1109/TIT.1967.1053964", 
            "Year": 1967, 
            "Library": "https://scikit-learn.org/stable/modules/generated/sklearn.neighbors.KNeighborsClassifier.html", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/knn_classifier.py", 
            "Version": "1.1.3", 
            "Runtime (min)": 1.9333333333333333, 
            "CPU (%)": 738.0, 
            "Memory (GB)": 2.8, 
            "Rank": 9, 
            "Mean score": 0.7986848146826366, 
            "Macro F1 score": 0.7288888073742984, 
            "Accuracy": 0.8316696914700544, 
            "F1 score": 0.8354959452035571
        }, 
        {
            "Name": "scANVI (All genes)", 
            "Paper": "Probabilistic harmonization and annotation of single-cell transcriptomics data with deep generative models", 
            "Paper URL": "https://doi.org/10.15252/msb.20209620", 
            "Year": 2021, 
            "Library": "https://github.com/YosefLab/scvi-tools", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/scvi_tools.py", 
            "Version": "0.19.0", 
            "Runtime (min)": 196.63333333333333, 
            "CPU (%)": 1528.6, 
            "Memory (GB)": 10.1, 
            "Rank": 10, 
            "Mean score": 0.4779125156903061, 
            "Macro F1 score": 0.22687995006333891, 
            "Accuracy": 0.6495765275257108, 
            "F1 score": 0.5572810694818683
        }, 
        {
            "Name": "scANVI (Seurat v3 2000 HVG)", 
            "Paper": "Probabilistic harmonization and annotation of single-cell transcriptomics data with deep generative models", 
            "Paper URL": "https://doi.org/10.15252/msb.20209620", 
            "Year": 2021, 
            "Library": "https://github.com/YosefLab/scvi-tools", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/scvi_tools.py", 
            "Version": "0.19.0", 
            "Runtime (min)": 151.51666666666668, 
            "CPU (%)": 1315.3, 
            "Memory (GB)": 4.2, 
            "Rank": 11, 
            "Mean score": 0.4343112460470017, 
            "Accuracy": 0.597650736035491, 
            "Macro F1 score": 0.1989953516334216, 
            "F1 score": 0.5062876504720926
        }, 
        {
            "Name": "scArches+scANVI (Seurat v3 2000 HVG)", 
            "Paper": "Query to reference single-cell integration with transfer learning", 
            "Paper URL": "https://doi.org/10.1101/2020.07.16.205997", 
            "Year": 2021, 
            "Library": "https://github.com/YosefLab/scvi-tools", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/scvi_tools.py", 
            "Version": "0.19.0", 
            "Runtime (min)": 137.78333333333333, 
            "CPU (%)": 1379.6, 
            "Memory (GB)": 4.099999999, 
            "Rank": 12, 
            "Mean score": 0.2195742768385477, 
            "Macro F1 score": 0.055476778423445734, 
            "Accuracy": 0.3674631982254487, 
            "F1 score": 0.2357828538667486
        }, 
        {
            "Name": "scArches+scANVI (All genes)", 
            "Paper": "Query to reference single-cell integration with transfer learning", 
            "Paper URL": "https://doi.org/10.1101/2020.07.16.205997", 
            "Year": 2021, 
            "Library": "https://github.com/YosefLab/scvi-tools", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/scvi_tools.py", 
            "Version": "0.19.0", 
            "Runtime (min)": 256.5833333333333, 
            "CPU (%)": 1555.3, 
            "Memory (GB)": 11.1, 
            "Rank": 13, 
            "Mean score": 0.21192282064094048, 
            "F1 score": 0.22384285369820695, 
            "Accuracy": 0.3568763863682194, 
            "Macro F1 score": 0.05504922185639509
        }, 
        {
            "Name": "Majority Vote", 
            "Paper": "Majority Vote (baseline)", 
            "Paper URL": "https://openproblems.bio", 
            "Year": 2022, 
            "Library": "https://github.com/openproblems-bio/openproblems", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/baseline.py", 
            "Version": "0.6.0", 
            "Runtime (min)": 0.13499999999999998, 
            "CPU (%)": 112.2, 
            "Memory (GB)": 0.9942, 
            "Rank": 14, 
            "Mean score": 0.006662652024285562, 
            "Macro F1 score": -0.00531534137922687, 
            "Accuracy": 0.03654970760233918, 
            "F1 score": -0.01124641015025562
        }
    ]
}