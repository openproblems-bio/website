{
  "name": "CeNGEN (by batch)",
  "data_url": "https://github.com/Munfred/wormcells-data/releases/download/taylor2020/taylor2020.h5ad",
  "data_reference": "https://doi.org/10.1016/j.neuron.2018.07.042",
  "categories": [
    {
      "id": "base",
      "label": "Base",
      "enabled": true,
      "width": 2
    },
    {
      "id": "meta",
      "label": "Meta",
      "enabled": false,
      "width": 3
    },
    {
      "id": "execution",
      "label": "Execution",
      "enabled": true,
      "width": 3
    },
    {
      "id": "raw",
      "label": "Raw values",
      "enabled": false,
      "width": 3
    },
    {
      "id": "scaled",
      "label": "Scaled values",
      "enabled": true,
      "width": 3
    }
  ],
  "headers": [
    {
      "category": "base",
      "id": "rank",
      "label": "Rank",
      "result_name": "rank",
      "orderable": true,
      "tooltip": "Todo: fill in",
      "bold": true
    },
    {
      "category": "base",
      "id": "name",
      "label": "Name",
      "result_name": "name",
      "orderable": true,
      "tooltip": "Todo: fill in",
      "bold": false,
      "href": "implementation",
      "align": "left"
    },
    {
      "category": "meta",
      "id": "paper",
      "label": "Paper",
      "orderable": false,
      "tooltip": "Todo: fill in",
      "bold": false,
      "href": "paper_url",
      "html": "<i class=\"fas fa-file-alt\"/>"
    },
    {
      "category": "meta",
      "id": "year",
      "label": "Year",
      "result_name": "year",
      "orderable": true,
      "tooltip": "Todo: fill in",
      "bold": false
    },
    {
      "category": "meta",
      "id": "library",
      "label": "Library",
      "result_name": "version",
      "orderable": true,
      "tooltip": "Todo: fill in",
      "bold": false,
      "href": "library"
    },
    {
      "category": "execution",
      "id": "memory_gb",
      "label": "Memory (GB)",
      "result_name": "memory_gb",
      "orderable": true,
      "tooltip": "Todo: fill in",
      "bold": false,
      "digits": 1
    },
    {
      "category": "execution",
      "id": "runtime_min",
      "label": "Runtime (min)",
      "result_name": "runtime_min",
      "orderable": true,
      "tooltip": "Todo: fill in",
      "bold": false,
      "digits": 1
    },
    {
      "category": "execution",
      "id": "cpu_pct",
      "label": "CPU (%)",
      "result_name": "cpu_pct",
      "orderable": true,
      "tooltip": "Todo: fill in",
      "bold": false,
      "digits": 1
    },
    {
      "category": "raw",
      "id": "macro_f1_score_raw",
      "label": "Macro F1 score",
      "result_name": "macro_f1_score_raw",
      "orderable": true,
      "tooltip": "Todo: fill in",
      "bold": false,
      "digits": 2
    },
    {
      "category": "raw",
      "id": "accuracy_raw",
      "label": "Accuracy",
      "result_name": "accuracy_raw",
      "orderable": true,
      "tooltip": "Todo: fill in",
      "bold": false,
      "digits": 2
    },
    {
      "category": "raw",
      "id": "f1_score_raw",
      "label": "F1 score",
      "result_name": "f1_score_raw",
      "orderable": true,
      "tooltip": "Todo: fill in",
      "bold": false,
      "digits": 2
    },
    {
      "category": "scaled",
      "id": "macro_f1_score_scaled",
      "label": "Macro F1 score",
      "result_name": "macro_f1_score_scaled",
      "orderable": true,
      "tooltip": "Todo: fill in",
      "bold": false,
      "digits": 2
    },
    {
      "category": "scaled",
      "id": "accuracy_scaled",
      "label": "Accuracy",
      "result_name": "accuracy_scaled",
      "orderable": true,
      "tooltip": "Todo: fill in",
      "bold": false,
      "digits": 2
    },
    {
      "category": "scaled",
      "id": "f1_score_scaled",
      "label": "F1 score",
      "result_name": "f1_score_scaled",
      "orderable": true,
      "tooltip": "Todo: fill in",
      "bold": false,
      "digits": 2
    }
  ],
  "results": [
    {
      "name": "Logistic regression (log CPM)",
      "paper": "Applied Logistic Regression",
      "paper_url": "https://books.google.com/books?id=64JYAwAAQBAJ",
      "year": 2013,
      "library": "https://scikit-learn.org/stable/modules/generated/sklearn.linear_model.LogisticRegression.html",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/logistic_regression.py",
      "version": "1.1.3",
      "runtime_min": 15.0333,
      "cpu_pct": 2993.2,
      "memory_gb": 1.8,
      "rank": 1,
      "macro_f1_score_scaled": 0.5014,
      "accuracy_scaled": 0.877,
      "f1_score_scaled": 0.8707,
      "macro_f1_score_raw": "NaN",
      "accuracy_raw": "NaN",
      "f1_score_raw": "NaN"
    },
    {
      "name": "Multilayer perceptron (log scran)",
      "paper": "Connectionist learning procedures",
      "paper_url": "https://doi.org/10.1016/0004-3702(89)90049-0",
      "year": 1990,
      "library": "https://scikit-learn.org/stable/modules/generated/sklearn.neural_network.MLPClassifier.html",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/mlp.py",
      "version": "1.1.3",
      "runtime_min": 69.5833,
      "cpu_pct": 2588.1,
      "memory_gb": 7.5,
      "rank": 2,
      "accuracy_scaled": 0.8619,
      "macro_f1_score_scaled": 0.5017,
      "f1_score_scaled": 0.8598,
      "macro_f1_score_raw": "NaN",
      "accuracy_raw": "NaN",
      "f1_score_raw": "NaN"
    },
    {
      "name": "Seurat reference mapping (SCTransform)",
      "paper": "Integrated analysis of multimodal single-cell data",
      "paper_url": "https://doi.org/10.1016/j.cell.2021.04.048",
      "year": 2021,
      "library": "https://github.com/satijalab/seurat",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/seurat.py",
      "version": "4.1.1",
      "runtime_min": 25.8167,
      "cpu_pct": 122.7,
      "memory_gb": 1100,
      "rank": 3,
      "macro_f1_score_scaled": 0.4788,
      "accuracy_scaled": 0.8462,
      "f1_score_scaled": 0.8407,
      "macro_f1_score_raw": "NaN",
      "accuracy_raw": "NaN",
      "f1_score_raw": "NaN"
    },
    {
      "name": "XGBoost (log scran)",
      "paper": "XGBoost: A Scalable Tree Boosting System",
      "paper_url": "https://doi.org/10.1145/2939672.2939785",
      "year": 2016,
      "library": "https://xgboost.readthedocs.io/en/stable/index.html",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/xgboost.py",
      "version": "1.6.2",
      "runtime_min": 45.3,
      "cpu_pct": 1224.4,
      "memory_gb": 7.1,
      "rank": 4,
      "macro_f1_score_scaled": 0.4715,
      "f1_score_scaled": 0.8396,
      "accuracy_scaled": 0.8286,
      "macro_f1_score_raw": "NaN",
      "accuracy_raw": "NaN",
      "f1_score_raw": "NaN"
    },
    {
      "name": "XGBoost (log CPM)",
      "paper": "XGBoost: A Scalable Tree Boosting System",
      "paper_url": "https://doi.org/10.1145/2939672.2939785",
      "year": 2016,
      "library": "https://xgboost.readthedocs.io/en/stable/index.html",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/xgboost.py",
      "version": "1.6.2",
      "runtime_min": 14.6833,
      "cpu_pct": 2873.2,
      "memory_gb": 1.9,
      "rank": 5,
      "f1_score_scaled": 0.8334,
      "accuracy_scaled": 0.828,
      "macro_f1_score_scaled": 0.4653,
      "macro_f1_score_raw": "NaN",
      "accuracy_raw": "NaN",
      "f1_score_raw": "NaN"
    },
    {
      "name": "Logistic regression (log scran)",
      "paper": "Applied Logistic Regression",
      "paper_url": "https://books.google.com/books?id=64JYAwAAQBAJ",
      "year": 2013,
      "library": "https://scikit-learn.org/stable/modules/generated/sklearn.linear_model.LogisticRegression.html",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/logistic_regression.py",
      "version": "1.1.3",
      "runtime_min": 37.8,
      "cpu_pct": 562.6,
      "memory_gb": 7.5,
      "rank": 6,
      "macro_f1_score_scaled": 0.4851,
      "f1_score_scaled": 0.8002,
      "accuracy_scaled": 0.7692,
      "macro_f1_score_raw": "NaN",
      "accuracy_raw": "NaN",
      "f1_score_raw": "NaN"
    },
    {
      "name": "Multilayer perceptron (log CPM)",
      "paper": "Connectionist learning procedures",
      "paper_url": "https://doi.org/10.1016/0004-3702(89)90049-0",
      "year": 1990,
      "library": "https://scikit-learn.org/stable/modules/generated/sklearn.neural_network.MLPClassifier.html",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/mlp.py",
      "version": "1.1.3",
      "runtime_min": 12.25,
      "cpu_pct": 5546.1,
      "memory_gb": 1.6,
      "rank": 7,
      "f1_score_scaled": 0.83,
      "accuracy_scaled": 0.8237,
      "macro_f1_score_scaled": 0.3977,
      "macro_f1_score_raw": "NaN",
      "accuracy_raw": "NaN",
      "f1_score_raw": "NaN"
    },
    {
      "name": "K-neighbors classifier (log scran)",
      "paper": "Nearest neighbor pattern classification",
      "paper_url": "https://doi.org/10.1109/TIT.1967.1053964",
      "year": 1967,
      "library": "https://scikit-learn.org/stable/modules/generated/sklearn.neighbors.KNeighborsClassifier.html",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/knn_classifier.py",
      "version": "1.1.3",
      "runtime_min": 32.9667,
      "cpu_pct": 109.8,
      "memory_gb": 7.5,
      "rank": 8,
      "f1_score_scaled": 0.7998,
      "accuracy_scaled": 0.785,
      "macro_f1_score_scaled": 0.3527,
      "macro_f1_score_raw": "NaN",
      "accuracy_raw": "NaN",
      "f1_score_raw": "NaN"
    },
    {
      "name": "K-neighbors classifier (log CPM)",
      "paper": "Nearest neighbor pattern classification",
      "paper_url": "https://doi.org/10.1109/TIT.1967.1053964",
      "year": 1967,
      "library": "https://scikit-learn.org/stable/modules/generated/sklearn.neighbors.KNeighborsClassifier.html",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/knn_classifier.py",
      "version": "1.1.3",
      "runtime_min": 1.5,
      "cpu_pct": 432.6,
      "memory_gb": 2.6,
      "rank": 9,
      "macro_f1_score_scaled": 0.3753,
      "f1_score_scaled": 0.783,
      "accuracy_scaled": 0.7583,
      "macro_f1_score_raw": "NaN",
      "accuracy_raw": "NaN",
      "f1_score_raw": "NaN"
    },
    {
      "name": "scANVI (All genes)",
      "paper": "Probabilistic harmonization and annotation of single-cell transcriptomics data with deep generative models",
      "paper_url": "https://doi.org/10.15252/msb.20209620",
      "year": 2021,
      "library": "https://github.com/YosefLab/scvi-tools",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/scvi_tools.py",
      "version": "0.19.0",
      "runtime_min": 125.6333,
      "cpu_pct": 2773.3,
      "memory_gb": 11.8,
      "rank": 10,
      "accuracy_scaled": 0.6432,
      "macro_f1_score_scaled": 0.1959,
      "f1_score_scaled": 0.6107,
      "macro_f1_score_raw": "NaN",
      "accuracy_raw": "NaN",
      "f1_score_raw": "NaN"
    },
    {
      "name": "scANVI (Seurat v3 2000 HVG)",
      "paper": "Probabilistic harmonization and annotation of single-cell transcriptomics data with deep generative models",
      "paper_url": "https://doi.org/10.15252/msb.20209620",
      "year": 2021,
      "library": "https://github.com/YosefLab/scvi-tools",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/scvi_tools.py",
      "version": "0.19.0",
      "runtime_min": 124.8333,
      "cpu_pct": 2379,
      "memory_gb": 20.8,
      "rank": 11,
      "f1_score_scaled": 0.2159,
      "accuracy_scaled": 0.2592,
      "macro_f1_score_scaled": 0.1765,
      "macro_f1_score_raw": "NaN",
      "accuracy_raw": "NaN",
      "f1_score_raw": "NaN"
    },
    {
      "name": "scArches+scANVI (All genes)",
      "paper": "Query to reference single-cell integration with transfer learning",
      "paper_url": "https://doi.org/10.1101/2020.07.16.205997",
      "year": 2021,
      "library": "https://github.com/YosefLab/scvi-tools",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/scvi_tools.py",
      "version": "0.19.0",
      "runtime_min": 147.0833,
      "cpu_pct": 2777.4,
      "memory_gb": 15.7,
      "rank": 12,
      "accuracy_scaled": 0.2374,
      "f1_score_scaled": 0.1821,
      "macro_f1_score_scaled": 0.0892,
      "macro_f1_score_raw": "NaN",
      "accuracy_raw": "NaN",
      "f1_score_raw": "NaN"
    },
    {
      "name": "scArches+scANVI (Seurat v3 2000 HVG)",
      "paper": "Query to reference single-cell integration with transfer learning",
      "paper_url": "https://doi.org/10.1101/2020.07.16.205997",
      "year": 2021,
      "library": "https://github.com/YosefLab/scvi-tools",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/scvi_tools.py",
      "version": "0.19.0",
      "runtime_min": 97.3667,
      "cpu_pct": 2469.3,
      "memory_gb": 17.4,
      "rank": 13,
      "macro_f1_score_scaled": 0.0352,
      "f1_score_scaled": 0.0218,
      "accuracy_scaled": 0.0703,
      "macro_f1_score_raw": "NaN",
      "accuracy_raw": "NaN",
      "f1_score_raw": "NaN"
    },
    {
      "name": "Majority Vote",
      "paper": "Majority Vote (baseline)",
      "paper_url": "https://openproblems.bio",
      "year": 2022,
      "library": "https://github.com/openproblems-bio/openproblems",
      "implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/baseline.py",
      "version": "0.6.0",
      "runtime_min": 0.1833,
      "cpu_pct": 125.5,
      "memory_gb": 1.0149,
      "rank": 14,
      "macro_f1_score_scaled": -0.0012,
      "f1_score_scaled": -0.0151,
      "accuracy_scaled": 0.0115,
      "macro_f1_score_raw": "NaN",
      "accuracy_raw": "NaN",
      "f1_score_raw": "NaN"
    }
  ]
}
