{
    "name": "Pancreas (random split with label noise)", 
    "data_url": "https://ndownloader.figshare.com/files/36086813", 
    "data_reference": "https://doi.org/10.1038/s41592-021-01336-8", 
    "headers": {
        "names": [
            "Rank", 
            "Mean score", 
            "Macro F1 score Raw", 
            "Macro F1 score Scaled", 
            "Accuracy Raw", 
            "Accuracy Scaled", 
            "F1 score Scaled", 
            "F1 score Raw", 
            "Memory (GB)", 
            "Runtime (min)", 
            "CPU (%)", 
            "Name", 
            "Paper", 
            "Year", 
            "Library"
        ], 
        "fixed": [
            "Name", 
            "Paper", 
            "Library"
        ]
    }, 
    "results": [
        {
            "Name": "XGBoost (log CPM)", 
            "Paper": "XGBoost: A Scalable Tree Boosting System", 
            "Paper URL": "https://doi.org/10.1145/2939672.2939785", 
            "Year": 2016, 
            "Library": "https://xgboost.readthedocs.io/en/stable/index.html", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/xgboost.py", 
            "Version": "1.6.2", 
            "Runtime (min)": 4.366666666666666, 
            "CPU (%)": 1197.0, 
            "Memory (GB)": 2.6, 
            "Rank": 1, 
            "Mean score": 0.9469493999535068, 
            "Accuracy Raw": 0.9749687108886108, 
            "F1 score Raw": 0.9747144553846414, 
            "Macro F1 score Raw": 0.9099099911138733, 
            "Accuracy Scaled": 0.9693369106937525, 
            "F1 score Scaled": 0.9684171463119433, 
            "Macro F1 score Scaled": 0.9030941428548246
        }, 
        {
            "Name": "Logistic regression (log CPM)", 
            "Paper": "Applied Logistic Regression", 
            "Paper URL": "https://books.google.com/books?id=64JYAwAAQBAJ", 
            "Year": 2013, 
            "Library": "https://scikit-learn.org/stable/modules/generated/sklearn.linear_model.LogisticRegression.html", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/logistic_regression.py", 
            "Version": "1.1.3", 
            "Runtime (min)": 2.3833333333333333, 
            "CPU (%)": 346.0, 
            "Memory (GB)": 2.2, 
            "Rank": 2, 
            "Mean score": 0.9285651365517268, 
            "Accuracy Raw": 0.9809136420525657, 
            "F1 score Raw": 0.9800102847864098, 
            "Macro F1 score Raw": 0.8457165882270149, 
            "Accuracy Scaled": 0.9766193944039862, 
            "F1 score Scaled": 0.9750318903365338, 
            "Macro F1 score Scaled": 0.8340441249146605
        }, 
        {
            "Name": "Seurat reference mapping (SCTransform)", 
            "Paper": "Integrated analysis of multimodal single-cell data", 
            "Paper URL": "https://doi.org/10.1016/j.cell.2021.04.048", 
            "Year": 2021, 
            "Library": "https://github.com/satijalab/seurat", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/seurat.py", 
            "Version": "4.1.1", 
            "Runtime (min)": 17.75, 
            "CPU (%)": 118.0, 
            "Memory (GB)": 309.0, 
            "Rank": 3, 
            "Mean score": 0.9172379905522883, 
            "Accuracy Raw": 0.9818523153942428, 
            "F1 score Raw": 0.9802060320246957, 
            "Macro F1 score Raw": 0.8128289345220103, 
            "Accuracy Scaled": 0.9777692602529705, 
            "F1 score Scaled": 0.9752763879924344, 
            "Macro F1 score Scaled": 0.7986683234114601
        }, 
        {
            "Name": "XGBoost (log scran)", 
            "Paper": "XGBoost: A Scalable Tree Boosting System", 
            "Paper URL": "https://doi.org/10.1145/2939672.2939785", 
            "Year": 2016, 
            "Library": "https://xgboost.readthedocs.io/en/stable/index.html", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/xgboost.py", 
            "Version": "1.6.2", 
            "Runtime (min)": 22.783333333333335, 
            "CPU (%)": 296.4, 
            "Memory (GB)": 8.9, 
            "Rank": 4, 
            "Mean score": 0.9136569589786081, 
            "Accuracy Raw": 0.9540050062578223, 
            "F1 score Raw": 0.9537552529567384, 
            "Macro F1 score Raw": 0.8652693803402681, 
            "Accuracy Scaled": 0.9436565733997699, 
            "F1 score Scaled": 0.9422381007834262, 
            "Macro F1 score Scaled": 0.8550762027526283
        }, 
        {
            "Name": "scANVI (Seurat v3 2000 HVG)", 
            "Paper": "Probabilistic harmonization and annotation of single-cell transcriptomics data with deep generative models", 
            "Paper URL": "https://doi.org/10.15252/msb.20209620", 
            "Year": 2021, 
            "Library": "https://github.com/YosefLab/scvi-tools", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/scvi_tools.py", 
            "Version": "0.19.0", 
            "Runtime (min)": 56.35, 
            "CPU (%)": 1351.5, 
            "Memory (GB)": 3.3, 
            "Rank": 5, 
            "Mean score": 0.8633131033394514, 
            "Accuracy Raw": 0.973404255319149, 
            "F1 score Raw": 0.9700884804425712, 
            "Macro F1 score Raw": 0.6838020285147074, 
            "Accuracy Scaled": 0.967420467612112, 
            "F1 score Scaled": 0.9626390825216433, 
            "Macro F1 score Scaled": 0.659879759884599
        }, 
        {
            "Name": "K-neighbors classifier (log scran)", 
            "Paper": "Nearest neighbor pattern classification", 
            "Paper URL": "https://doi.org/10.1109/TIT.1967.1053964", 
            "Year": 1967, 
            "Library": "https://scikit-learn.org/stable/modules/generated/sklearn.neighbors.KNeighborsClassifier.html", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/knn_classifier.py", 
            "Version": "1.1.3", 
            "Runtime (min)": 16.4, 
            "CPU (%)": 114.8, 
            "Memory (GB)": 9.7, 
            "Rank": 6, 
            "Mean score": 0.8601029888373657, 
            "Accuracy Raw": 0.9443053817271589, 
            "F1 score Raw": 0.9432278119421197, 
            "Macro F1 score Raw": 0.7391782430344317, 
            "Accuracy Scaled": 0.9317746262935991, 
            "F1 score Scaled": 0.929088823821743, 
            "Macro F1 score Scaled": 0.719445516396755
        }, 
        {
            "Name": "K-neighbors classifier (log CPM)", 
            "Paper": "Nearest neighbor pattern classification", 
            "Paper URL": "https://doi.org/10.1109/TIT.1967.1053964", 
            "Year": 1967, 
            "Library": "https://scikit-learn.org/stable/modules/generated/sklearn.neighbors.KNeighborsClassifier.html", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/knn_classifier.py", 
            "Version": "1.1.3", 
            "Runtime (min)": 2.1333333333333333, 
            "CPU (%)": 215.2, 
            "Memory (GB)": 2.2, 
            "Rank": 7, 
            "Mean score": 0.8424773970218365, 
            "Accuracy Raw": 0.9192740926157698, 
            "F1 score Raw": 0.9187281897779298, 
            "Macro F1 score Raw": 0.7469758223447912, 
            "Accuracy Scaled": 0.9011115369873516, 
            "F1 score Scaled": 0.8984876248365216, 
            "Macro F1 score Scaled": 0.7278330292416365
        }, 
        {
            "Name": "scANVI (All genes)", 
            "Paper": "Probabilistic harmonization and annotation of single-cell transcriptomics data with deep generative models", 
            "Paper URL": "https://doi.org/10.15252/msb.20209620", 
            "Year": 2021, 
            "Library": "https://github.com/YosefLab/scvi-tools", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/scvi_tools.py", 
            "Version": "0.19.0", 
            "Runtime (min)": 64.48333333333333, 
            "CPU (%)": 1373.7, 
            "Memory (GB)": 4.6, 
            "Rank": 8, 
            "Mean score": 0.8216391044644814, 
            "Accuracy Raw": 0.9624530663329162, 
            "F1 score Raw": 0.9547409235231125, 
            "Macro F1 score Raw": 0.5978665023365848, 
            "Accuracy Scaled": 0.9540053660406286, 
            "F1 score Scaled": 0.9434692504286472, 
            "Macro F1 score Scaled": 0.5674426969241686
        }, 
        {
            "Name": "Multilayer perceptron (log scran)", 
            "Paper": "Connectionist learning procedures", 
            "Paper URL": "https://doi.org/10.1016/0004-3702(89)90049-0", 
            "Year": 1990, 
            "Library": "https://scikit-learn.org/stable/modules/generated/sklearn.neural_network.MLPClassifier.html", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/mlp.py", 
            "Version": "1.1.3", 
            "Runtime (min)": 13.183333333333334, 
            "CPU (%)": 918.5, 
            "Memory (GB)": 9.7, 
            "Rank": 9, 
            "Mean score": 0.8211898948047729, 
            "Accuracy Raw": 0.9267834793491865, 
            "F1 score Raw": 0.9330583015171671, 
            "Macro F1 score Raw": 0.662413072503177, 
            "Accuracy Scaled": 0.9103104637792258, 
            "F1 score Scaled": 0.916386619273008, 
            "Macro F1 score Scaled": 0.6368726013620851
        }, 
        {
            "Name": "scArches+scANVI (Seurat v3 2000 HVG)", 
            "Paper": "Query to reference single-cell integration with transfer learning", 
            "Paper URL": "https://doi.org/10.1101/2020.07.16.205997", 
            "Year": 2021, 
            "Library": "https://github.com/YosefLab/scvi-tools", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/scvi_tools.py", 
            "Version": "0.19.0", 
            "Runtime (min)": 57.333333333333336, 
            "CPU (%)": 1305.3, 
            "Memory (GB)": 3.8, 
            "Rank": 10, 
            "Mean score": 0.7932950906320292, 
            "Accuracy Raw": 0.9577596996245307, 
            "F1 score Raw": 0.9477507542181745, 
            "Macro F1 score Raw": 0.5322770780505731, 
            "Accuracy Scaled": 0.9482560367957071, 
            "F1 score Scaled": 0.9347381948879844, 
            "Macro F1 score Scaled": 0.49689104021239605
        }, 
        {
            "Name": "scArches+scANVI (All genes)", 
            "Paper": "Query to reference single-cell integration with transfer learning", 
            "Paper URL": "https://doi.org/10.1101/2020.07.16.205997", 
            "Year": 2021, 
            "Library": "https://github.com/YosefLab/scvi-tools", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/scvi_tools.py", 
            "Version": "0.19.0", 
            "Runtime (min)": 57.583333333333336, 
            "CPU (%)": 1443.6, 
            "Memory (GB)": 5.7, 
            "Rank": 11, 
            "Mean score": 0.7912698276569229, 
            "Accuracy Raw": 0.9533792240300375, 
            "F1 score Raw": 0.9429336644780905, 
            "Macro F1 score Raw": 0.5372108366962416, 
            "Accuracy Scaled": 0.9428899961671138, 
            "F1 score Scaled": 0.9287214195810802, 
            "Macro F1 score Scaled": 0.5021980672225749
        }, 
        {
            "Name": "Multilayer perceptron (log CPM)", 
            "Paper": "Connectionist learning procedures", 
            "Paper URL": "https://doi.org/10.1016/0004-3702(89)90049-0", 
            "Year": 1990, 
            "Library": "https://scikit-learn.org/stable/modules/generated/sklearn.neural_network.MLPClassifier.html", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/mlp.py", 
            "Version": "1.1.3", 
            "Runtime (min)": 3.25, 
            "CPU (%)": 1525.4, 
            "Memory (GB)": 2.2, 
            "Rank": 12, 
            "Mean score": 0.7373039096604277, 
            "Accuracy Raw": 0.8520025031289111, 
            "F1 score Raw": 0.8711717118204162, 
            "Macro F1 score Raw": 0.5854807920012866, 
            "Accuracy Scaled": 0.818704484476811, 
            "F1 score Scaled": 0.8390873110169356, 
            "Macro F1 score Scaled": 0.5541199334875366
        }, 
        {
            "Name": "Logistic regression (log scran)", 
            "Paper": "Applied Logistic Regression", 
            "Paper URL": "https://books.google.com/books?id=64JYAwAAQBAJ", 
            "Year": 2013, 
            "Library": "https://scikit-learn.org/stable/modules/generated/sklearn.linear_model.LogisticRegression.html", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/logistic_regression.py", 
            "Version": "1.1.3", 
            "Runtime (min)": 18.566666666666666, 
            "CPU (%)": 143.5, 
            "Memory (GB)": 9.7, 
            "Rank": 13, 
            "Mean score": 0.6262901067122211, 
            "Accuracy Raw": 0.8157071339173968, 
            "F1 score Raw": 0.7884572288334876, 
            "Macro F1 score Raw": 0.41324581192129595, 
            "Accuracy Scaled": 0.7742430049827521, 
            "F1 score Scaled": 0.7357729686209779, 
            "Macro F1 score Scaled": 0.3688543465329332
        }, 
        {
            "Name": "Majority Vote", 
            "Paper": "Majority Vote (baseline)", 
            "Paper URL": "https://openproblems.bio", 
            "Year": 2022, 
            "Library": "https://github.com/openproblems-bio/openproblems", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/baseline.py", 
            "Version": "0.6.0", 
            "Runtime (min)": 2.25, 
            "CPU (%)": 12.9, 
            "Memory (GB)": 1.5, 
            "Rank": 14, 
            "Mean score": 0.03951585134867166, 
            "Accuracy Raw": 0.3388610763454318, 
            "F1 score Raw": 0.17152911693484582, 
            "Macro F1 score Raw": 0.03615664541114412, 
            "Accuracy Scaled": 0.19011115369873513, 
            "F1 score Scaled": -0.034799727776826966, 
            "Macro F1 score Scaled": -0.03676387187589318
        }
    ]
}