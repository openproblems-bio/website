{
    "name": "Pancreas (random split with label noise)", 
    "data_url": "https://ndownloader.figshare.com/files/36086813", 
    "data_reference": "https://doi.org/10.1038/s41592-021-01336-8", 
    "headers": {
        "names": [
            "Rank", 
            "Mean score", 
            "Macro F1 score", 
            "Accuracy", 
            "F1 score", 
            "Memory (GB)", 
            "Runtime (min)", 
            "CPU (%)", 
            "Name", 
            "Paper", 
            "Year", 
            "Library"
        ], 
        "fixed": [
            "Name", 
            "Paper", 
            "Library"
        ]
    }, 
    "results": [
        {
            "Name": "XGBoost (log CPM)", 
            "Paper": "XGBoost: A Scalable Tree Boosting System", 
            "Paper URL": "https://doi.org/10.1145/2939672.2939785", 
            "Year": 2016, 
            "Library": "https://xgboost.readthedocs.io/en/stable/index.html", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/xgboost.py", 
            "Version": "1.6.2", 
            "Runtime (min)": 4.366666666666666, 
            "CPU (%)": 1197.0, 
            "Memory (GB)": 2.6, 
            "Rank": 1, 
            "Mean score": 0.9469493999535068, 
            "Accuracy": 0.9693369106937525, 
            "Macro F1 score": 0.9030941428548246, 
            "F1 score": 0.9684171463119433
        }, 
        {
            "Name": "Logistic regression (log CPM)", 
            "Paper": "Applied Logistic Regression", 
            "Paper URL": "https://books.google.com/books?id=64JYAwAAQBAJ", 
            "Year": 2013, 
            "Library": "https://scikit-learn.org/stable/modules/generated/sklearn.linear_model.LogisticRegression.html", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/logistic_regression.py", 
            "Version": "1.1.3", 
            "Runtime (min)": 2.3833333333333333, 
            "CPU (%)": 346.0, 
            "Memory (GB)": 2.2, 
            "Rank": 2, 
            "Mean score": 0.9285651365517268, 
            "F1 score": 0.9750318903365338, 
            "Accuracy": 0.9766193944039862, 
            "Macro F1 score": 0.8340441249146605
        }, 
        {
            "Name": "Seurat reference mapping (SCTransform)", 
            "Paper": "Integrated analysis of multimodal single-cell data", 
            "Paper URL": "https://doi.org/10.1016/j.cell.2021.04.048", 
            "Year": 2021, 
            "Library": "https://github.com/satijalab/seurat", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/seurat.py", 
            "Version": "4.1.1", 
            "Runtime (min)": 17.75, 
            "CPU (%)": 118.0, 
            "Memory (GB)": 309.0, 
            "Rank": 3, 
            "Mean score": 0.9172379905522883, 
            "Macro F1 score": 0.7986683234114601, 
            "F1 score": 0.9752763879924344, 
            "Accuracy": 0.9777692602529705
        }, 
        {
            "Name": "XGBoost (log scran)", 
            "Paper": "XGBoost: A Scalable Tree Boosting System", 
            "Paper URL": "https://doi.org/10.1145/2939672.2939785", 
            "Year": 2016, 
            "Library": "https://xgboost.readthedocs.io/en/stable/index.html", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/xgboost.py", 
            "Version": "1.6.2", 
            "Runtime (min)": 22.783333333333335, 
            "CPU (%)": 296.4, 
            "Memory (GB)": 8.9, 
            "Rank": 4, 
            "Mean score": 0.9136569589786081, 
            "F1 score": 0.9422381007834262, 
            "Macro F1 score": 0.8550762027526283, 
            "Accuracy": 0.9436565733997699
        }, 
        {
            "Name": "scANVI (Seurat v3 2000 HVG)", 
            "Paper": "Probabilistic harmonization and annotation of single-cell transcriptomics data with deep generative models", 
            "Paper URL": "https://doi.org/10.15252/msb.20209620", 
            "Year": 2021, 
            "Library": "https://github.com/YosefLab/scvi-tools", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/scvi_tools.py", 
            "Version": "0.19.0", 
            "Runtime (min)": 56.35, 
            "CPU (%)": 1351.5, 
            "Memory (GB)": 3.3, 
            "Rank": 5, 
            "Mean score": 0.8633131033394514, 
            "Macro F1 score": 0.659879759884599, 
            "F1 score": 0.9626390825216433, 
            "Accuracy": 0.967420467612112
        }, 
        {
            "Name": "K-neighbors classifier (log scran)", 
            "Paper": "Nearest neighbor pattern classification", 
            "Paper URL": "https://doi.org/10.1109/TIT.1967.1053964", 
            "Year": 1967, 
            "Library": "https://scikit-learn.org/stable/modules/generated/sklearn.neighbors.KNeighborsClassifier.html", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/knn_classifier.py", 
            "Version": "1.1.3", 
            "Runtime (min)": 16.4, 
            "CPU (%)": 114.8, 
            "Memory (GB)": 9.7, 
            "Rank": 6, 
            "Mean score": 0.8601029888373657, 
            "F1 score": 0.929088823821743, 
            "Macro F1 score": 0.719445516396755, 
            "Accuracy": 0.9317746262935991
        }, 
        {
            "Name": "K-neighbors classifier (log CPM)", 
            "Paper": "Nearest neighbor pattern classification", 
            "Paper URL": "https://doi.org/10.1109/TIT.1967.1053964", 
            "Year": 1967, 
            "Library": "https://scikit-learn.org/stable/modules/generated/sklearn.neighbors.KNeighborsClassifier.html", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/knn_classifier.py", 
            "Version": "1.1.3", 
            "Runtime (min)": 2.1333333333333333, 
            "CPU (%)": 215.2, 
            "Memory (GB)": 2.2, 
            "Rank": 7, 
            "Mean score": 0.8424773970218365, 
            "Accuracy": 0.9011115369873516, 
            "Macro F1 score": 0.7278330292416365, 
            "F1 score": 0.8984876248365216
        }, 
        {
            "Name": "scANVI (All genes)", 
            "Paper": "Probabilistic harmonization and annotation of single-cell transcriptomics data with deep generative models", 
            "Paper URL": "https://doi.org/10.15252/msb.20209620", 
            "Year": 2021, 
            "Library": "https://github.com/YosefLab/scvi-tools", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/scvi_tools.py", 
            "Version": "0.19.0", 
            "Runtime (min)": 64.48333333333333, 
            "CPU (%)": 1373.7, 
            "Memory (GB)": 4.6, 
            "Rank": 8, 
            "Mean score": 0.8216391044644814, 
            "Macro F1 score": 0.5674426969241686, 
            "Accuracy": 0.9540053660406286, 
            "F1 score": 0.9434692504286472
        }, 
        {
            "Name": "Multilayer perceptron (log scran)", 
            "Paper": "Connectionist learning procedures", 
            "Paper URL": "https://doi.org/10.1016/0004-3702(89)90049-0", 
            "Year": 1990, 
            "Library": "https://scikit-learn.org/stable/modules/generated/sklearn.neural_network.MLPClassifier.html", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/mlp.py", 
            "Version": "1.1.3", 
            "Runtime (min)": 13.183333333333334, 
            "CPU (%)": 918.5, 
            "Memory (GB)": 9.7, 
            "Rank": 9, 
            "Mean score": 0.821189894804773, 
            "Accuracy": 0.9103104637792258, 
            "F1 score": 0.916386619273008, 
            "Macro F1 score": 0.6368726013620851
        }, 
        {
            "Name": "scArches+scANVI (Seurat v3 2000 HVG)", 
            "Paper": "Query to reference single-cell integration with transfer learning", 
            "Paper URL": "https://doi.org/10.1101/2020.07.16.205997", 
            "Year": 2021, 
            "Library": "https://github.com/YosefLab/scvi-tools", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/scvi_tools.py", 
            "Version": "0.19.0", 
            "Runtime (min)": 57.333333333333336, 
            "CPU (%)": 1305.3, 
            "Memory (GB)": 3.8, 
            "Rank": 10, 
            "Mean score": 0.7932950906320292, 
            "Accuracy": 0.9482560367957071, 
            "Macro F1 score": 0.49689104021239605, 
            "F1 score": 0.9347381948879844
        }, 
        {
            "Name": "scArches+scANVI (All genes)", 
            "Paper": "Query to reference single-cell integration with transfer learning", 
            "Paper URL": "https://doi.org/10.1101/2020.07.16.205997", 
            "Year": 2021, 
            "Library": "https://github.com/YosefLab/scvi-tools", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/scvi_tools.py", 
            "Version": "0.19.0", 
            "Runtime (min)": 57.583333333333336, 
            "CPU (%)": 1443.6, 
            "Memory (GB)": 5.7, 
            "Rank": 11, 
            "Mean score": 0.7912698276569229, 
            "Macro F1 score": 0.5021980672225749, 
            "F1 score": 0.9287214195810802, 
            "Accuracy": 0.9428899961671138
        }, 
        {
            "Name": "Multilayer perceptron (log CPM)", 
            "Paper": "Connectionist learning procedures", 
            "Paper URL": "https://doi.org/10.1016/0004-3702(89)90049-0", 
            "Year": 1990, 
            "Library": "https://scikit-learn.org/stable/modules/generated/sklearn.neural_network.MLPClassifier.html", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/mlp.py", 
            "Version": "1.1.3", 
            "Runtime (min)": 3.25, 
            "CPU (%)": 1525.4, 
            "Memory (GB)": 2.2, 
            "Rank": 12, 
            "Mean score": 0.7373039096604277, 
            "Accuracy": 0.818704484476811, 
            "Macro F1 score": 0.5541199334875366, 
            "F1 score": 0.8390873110169356
        }, 
        {
            "Name": "Logistic regression (log scran)", 
            "Paper": "Applied Logistic Regression", 
            "Paper URL": "https://books.google.com/books?id=64JYAwAAQBAJ", 
            "Year": 2013, 
            "Library": "https://scikit-learn.org/stable/modules/generated/sklearn.linear_model.LogisticRegression.html", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/logistic_regression.py", 
            "Version": "1.1.3", 
            "Runtime (min)": 18.566666666666666, 
            "CPU (%)": 143.5, 
            "Memory (GB)": 9.7, 
            "Rank": 13, 
            "Mean score": 0.626290106712221, 
            "Macro F1 score": 0.3688543465329332, 
            "F1 score": 0.7357729686209779, 
            "Accuracy": 0.7742430049827521
        }, 
        {
            "Name": "Majority Vote", 
            "Paper": "Majority Vote (baseline)", 
            "Paper URL": "https://openproblems.bio", 
            "Year": 2022, 
            "Library": "https://github.com/openproblems-bio/openproblems", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/baseline.py", 
            "Version": "0.6.0", 
            "Runtime (min)": 2.25, 
            "CPU (%)": 12.9, 
            "Memory (GB)": 1.5, 
            "Rank": 14, 
            "Mean score": 0.039515851348671666, 
            "Accuracy": 0.19011115369873513, 
            "Macro F1 score": -0.03676387187589318, 
            "F1 score": -0.034799727776826966
        }
    ]
}