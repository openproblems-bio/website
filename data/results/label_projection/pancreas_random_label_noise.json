{
    "name": "Pancreas (random split with label noise)", 
    "data_url": "https://ndownloader.figshare.com/files/36086813", 
    "data_reference": "https://doi.org/10.1038/s41592-021-01336-8", 
    "headers": {
        "names": [
            "Rank", 
            "Macro F1 score", 
            "Accuracy", 
            "F1 score", 
            "Memory (GB)", 
            "Runtime (min)", 
            "CPU (%)", 
            "Name", 
            "Paper", 
            "Year", 
            "Library"
        ], 
        "fixed": [
            "Name", 
            "Paper", 
            "Library"
        ]
    }, 
    "results": [
        {
            "Name": "Seurat reference mapping (SCTransform)", 
            "Paper": "Integrated analysis of multimodal single-cell data", 
            "Paper URL": "https://doi.org/10.1016/j.cell.2021.04.048", 
            "Year": 2021, 
            "Library": "https://github.com/satijalab/seurat", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/seurat.py", 
            "Version": "4.1.1", 
            "Runtime (min)": 12.916666666666666, 
            "CPU (%)": 119.0, 
            "Memory (GB)": 411.8, 
            "Rank": 1, 
            "F1 score": 0.9740789623824561, 
            "Macro F1 score": 0.8662690198378253, 
            "Accuracy": 0.9749631811487482
        }, 
        {
            "Name": "Logistic regression (log CPM)", 
            "Paper": "Applied Logistic Regression", 
            "Paper URL": "https://books.google.com/books?id=64JYAwAAQBAJ", 
            "Year": 2013, 
            "Library": "https://scikit-learn.org/stable/modules/generated/sklearn.linear_model.LogisticRegression.html", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/logistic_regression.py", 
            "Version": "1.1.3", 
            "Runtime (min)": 1.3833333333333333, 
            "CPU (%)": 375.2, 
            "Memory (GB)": 2.3, 
            "Rank": 2, 
            "F1 score": 0.9698354519193545, 
            "Macro F1 score": 0.8699996841825939, 
            "Accuracy": 0.9716494845360825
        }, 
        {
            "Name": "XGBoost (log CPM)", 
            "Paper": "XGBoost: A Scalable Tree Boosting System", 
            "Paper URL": "https://doi.org/10.1145/2939672.2939785", 
            "Year": 2016, 
            "Library": "https://xgboost.readthedocs.io/en/stable/index.html", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/xgboost.py", 
            "Version": "1.6.2", 
            "Runtime (min)": 1.4833333333333334, 
            "CPU (%)": 3456.6, 
            "Memory (GB)": 2.6, 
            "Rank": 3, 
            "Macro F1 score": 0.850117456664504, 
            "Accuracy": 0.9609720176730486, 
            "F1 score": 0.9606860151877438
        }, 
        {
            "Name": "XGBoost (log scran)", 
            "Paper": "XGBoost: A Scalable Tree Boosting System", 
            "Paper URL": "https://doi.org/10.1145/2939672.2939785", 
            "Year": 2016, 
            "Library": "https://xgboost.readthedocs.io/en/stable/index.html", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/xgboost.py", 
            "Version": "1.6.2", 
            "Runtime (min)": 11.083333333333334, 
            "CPU (%)": 559.2, 
            "Memory (GB)": 9.0, 
            "Rank": 4, 
            "Macro F1 score": 0.815750143577609, 
            "F1 score": 0.9494113811449456, 
            "Accuracy": 0.9495581737849779
        }, 
        {
            "Name": "K-neighbors classifier (log scran)", 
            "Paper": "Nearest neighbor pattern classification", 
            "Paper URL": "https://doi.org/10.1109/TIT.1967.1053964", 
            "Year": 1967, 
            "Library": "https://scikit-learn.org/stable/modules/generated/sklearn.neighbors.KNeighborsClassifier.html", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/knn_classifier.py", 
            "Version": "1.1.3", 
            "Runtime (min)": 11.483333333333333, 
            "CPU (%)": 128.1, 
            "Memory (GB)": 9.8, 
            "Rank": 5, 
            "F1 score": 0.9333744141542291, 
            "Accuracy": 0.9355670103092784, 
            "Macro F1 score": 0.6695427757252993
        }, 
        {
            "Name": "K-neighbors classifier (log CPM)", 
            "Paper": "Nearest neighbor pattern classification", 
            "Paper URL": "https://doi.org/10.1109/TIT.1967.1053964", 
            "Year": 1967, 
            "Library": "https://scikit-learn.org/stable/modules/generated/sklearn.neighbors.KNeighborsClassifier.html", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/knn_classifier.py", 
            "Version": "1.1.3", 
            "Runtime (min)": 1.6166666666666667, 
            "CPU (%)": 313.2, 
            "Memory (GB)": 2.2, 
            "Rank": 6, 
            "F1 score": 0.8996895863810084, 
            "Macro F1 score": 0.6954406261186388, 
            "Accuracy": 0.9035346097201767
        }, 
        {
            "Name": "Multilayer perceptron (log scran)", 
            "Paper": "Connectionist learning procedures", 
            "Paper URL": "https://doi.org/10.1016/0004-3702(89)90049-0", 
            "Year": 1990, 
            "Library": "https://scikit-learn.org/stable/modules/generated/sklearn.neural_network.MLPClassifier.html", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/mlp.py", 
            "Version": "1.1.3", 
            "Runtime (min)": 19.583333333333332, 
            "CPU (%)": 1840.3, 
            "Memory (GB)": 9.8, 
            "Rank": 7, 
            "Accuracy": 0.9186303387334315, 
            "F1 score": 0.9248339914326986, 
            "Macro F1 score": 0.6430835670438964
        }, 
        {
            "Name": "scANVI (All genes)", 
            "Paper": "Probabilistic harmonization and annotation of single-cell transcriptomics data with deep generative models", 
            "Paper URL": "https://doi.org/10.15252/msb.20209620", 
            "Year": 2021, 
            "Library": "https://github.com/YosefLab/scvi-tools", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/scvi_tools.py", 
            "Version": "0.19.0", 
            "Runtime (min)": 39.516666666666666, 
            "CPU (%)": 2709.7, 
            "Memory (GB)": 4.6, 
            "Rank": 8, 
            "Accuracy": 0.9502945508100147, 
            "Macro F1 score": 0.5551553908815208, 
            "F1 score": 0.9375057330367584
        }, 
        {
            "Name": "scANVI (Seurat v3 2000 HVG)", 
            "Paper": "Probabilistic harmonization and annotation of single-cell transcriptomics data with deep generative models", 
            "Paper URL": "https://doi.org/10.15252/msb.20209620", 
            "Year": 2021, 
            "Library": "https://github.com/YosefLab/scvi-tools", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/scvi_tools.py", 
            "Version": "0.19.0", 
            "Runtime (min)": 35.36666666666667, 
            "CPU (%)": 2412.5, 
            "Memory (GB)": 5.7, 
            "Rank": 9, 
            "Macro F1 score": 0.5489265397981575, 
            "F1 score": 0.9387877703067449, 
            "Accuracy": 0.9506627393225332
        }, 
        {
            "Name": "scArches+scANVI (All genes)", 
            "Paper": "Query to reference single-cell integration with transfer learning", 
            "Paper URL": "https://doi.org/10.1101/2020.07.16.205997", 
            "Year": 2021, 
            "Library": "https://github.com/YosefLab/scvi-tools", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/scvi_tools.py", 
            "Version": "0.19.0", 
            "Runtime (min)": 33.65, 
            "CPU (%)": 2680.5, 
            "Memory (GB)": 5.8, 
            "Rank": 10, 
            "F1 score": 0.9290779443997006, 
            "Macro F1 score": 0.5430373514496784, 
            "Accuracy": 0.9414580265095729
        }, 
        {
            "Name": "scArches+scANVI (Seurat v3 2000 HVG)", 
            "Paper": "Query to reference single-cell integration with transfer learning", 
            "Paper URL": "https://doi.org/10.1101/2020.07.16.205997", 
            "Year": 2021, 
            "Library": "https://github.com/YosefLab/scvi-tools", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/scvi_tools.py", 
            "Version": "0.19.0", 
            "Runtime (min)": 41.233333333333334, 
            "CPU (%)": 2435.2, 
            "Memory (GB)": 5.2, 
            "Rank": 11, 
            "Macro F1 score": 0.5359468996753524, 
            "Accuracy": 0.9429307805596465, 
            "F1 score": 0.9313569798916665
        }, 
        {
            "Name": "Multilayer perceptron (log CPM)", 
            "Paper": "Connectionist learning procedures", 
            "Paper URL": "https://doi.org/10.1016/0004-3702(89)90049-0", 
            "Year": 1990, 
            "Library": "https://scikit-learn.org/stable/modules/generated/sklearn.neural_network.MLPClassifier.html", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/mlp.py", 
            "Version": "1.1.3", 
            "Runtime (min)": 2.216666666666667, 
            "CPU (%)": 2660.2, 
            "Memory (GB)": 2.2, 
            "Rank": 12, 
            "Accuracy": 0.8203240058910162, 
            "Macro F1 score": 0.537951645141708, 
            "F1 score": 0.8403437363111445
        }, 
        {
            "Name": "Logistic regression (log scran)", 
            "Paper": "Applied Logistic Regression", 
            "Paper URL": "https://books.google.com/books?id=64JYAwAAQBAJ", 
            "Year": 2013, 
            "Library": "https://scikit-learn.org/stable/modules/generated/sklearn.linear_model.LogisticRegression.html", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/logistic_regression.py", 
            "Version": "1.1.3", 
            "Runtime (min)": 10.633333333333333, 
            "CPU (%)": 142.5, 
            "Memory (GB)": 9.8, 
            "Rank": 13, 
            "Macro F1 score": 0.37706409385006984, 
            "F1 score": 0.7463424742623769, 
            "Accuracy": 0.7801914580265096
        }, 
        {
            "Name": "Majority Vote", 
            "Paper": "Majority Vote (baseline)", 
            "Paper URL": "https://openproblems.bio", 
            "Year": 2022, 
            "Library": "https://github.com/openproblems-bio/openproblems", 
            "Implementation": "https://github.com/openproblems-bio/openproblems/blob/main/openproblems/tasks/label_projection/methods/baseline.py", 
            "Version": "0.6.0", 
            "Runtime (min)": 0.16666666666666666, 
            "CPU (%)": 143.3, 
            "Memory (GB)": 1.5, 
            "Rank": 14, 
            "F1 score": -0.031693791257879037, 
            "Accuracy": 0.1914580265095729, 
            "Macro F1 score": -0.028527040464373328
        }
    ]
}