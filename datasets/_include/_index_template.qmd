![](/images/heros/anndata_schema.png){class="dataset_img"}

```{r load_data}
#| include: false
#| error: true

library(tidyverse)
library(jsonlite)
library(knitr)

dataset_schemas <- list.files(params$data_dir, full.names = TRUE, pattern = "*.json")

meta1 <- read_json(dataset_schemas[[1]])
meta1_uns <- meta1$uns
meta1_structure <- meta1$structure
multimodal <- FALSE
if (length(dataset_schemas)==2) {
  multimodal <- TRUE
  meta2 <- read_json(dataset_schemas[[2]])
  meta2_uns <- meta2$uns
  meta2_structure <- meta2$structure
}

dataset_description <- meta1_uns$dataset_description
dataset_url <- meta1_uns$dataset_url
data_url <- meta1_uns$data_url
date_created <- meta1_uns$date_created
filesize <- format(structure(meta1_uns$file_size, class="object_size"), units="auto", standard="IEC", digits=2)
if (multimodal) {
filesize <- c(filesize, format(structure(meta2$uns$file_size, class="object_size"), units="auto", standard="IEC", digits=2))
}
dim <- NULL

for (item in meta1_structure$layers) {
  if (item$name == "counts") {
    dim <- item$shape
    break
  }
}
```

---
dataset-size: "`r filesize`"
date: "`r date_created`"
dimension: "`r dim`"
---



```{r quick-links, results='asis'}
#| echo: false
#| column: margin

cat("#### Quick links\n")
cat(paste0('<div class="quarto-title-meta-heading"><i class="bi bi-file-earmark-text"></i> [Documentation](',dataset_url,')</div>\n'))
cat(paste0('<div class="quarto-title-meta-heading"><i class="bi bi-globe"></i> [Source](',data_url,')</div>\n'))

```

```{r related benchmarks, results='asis'}
#| echo: false
#| column: margin

cat("#### Related benchmarks\n")

dataset_info_files <- Sys.glob("../../../results/*/data/dataset_info.json")

rel_benchmarks <- NULL

for (file in dataset_info_files) {
  benchm_datasets <- read_json(file)
  benchmark_ok <- FALSE
  for (item in benchm_datasets) {
    if (item$dataset_id == rmarkdown::metadata$`dataset-id`[1]) {
      benchmark_ok <- TRUE
    }
  }

  if (benchmark_ok) {
    parent_dir <- dirname(dirname(file))
    md_link <- paste0('[',basename(parent_dir),'](',parent_dir,')')
    rel_benchmarks <- c(rel_benchmarks, md_link)
  }
}

if (length(rel_benchmarks) == 0) {
  cat("No related benchmarks found.\n")
}

table <- kable(rel_benchmarks,"markdown", col.names = NULL)
print(table)

```


## Explore the dataset

```{r mod1_title}
#| eval: !expr multimodal
#| echo: false
#| results: "asis"

cat("### Modality 1")


```

::: {.panel-tabset}


```{r x_struct, results='asis'}
#| echo: false

for (name in names(meta1_structure)) {
  table <- fromJSON(toJSON(meta1_structure[[name]]))
  if (length(table) != 0) {
    table <- table[c("name", "description", "type", "shape", "dtype")]  %>% filter(!grepl("^_",table$name)) 
    table$description <- gsub("\n", " ", table$description)
    cat(paste0("## ", name, "\n\n"))
    print(kable(table, format = "markdown"))
    cat("\n\n")
  }
}

```

:::

```{r mod2_title}
#| eval: !expr multimodal
#| echo: false
#| results: "asis"

cat("### Modality 2\n")
cat(":::{.panel-tabset }\n")

```


```{r x2_struct, results='asis'}
#| eval: !expr multimodal
#| echo: false

for (name in names(meta2_structure)) {
  table <- fromJSON(toJSON(meta2_structure[[name]]))
  if (length(table) != 0) {
    table <- table[c("name", "description", "type", "shape", "dtype")]  %>% filter(!grepl("^_",table$name)) 
    table$description <- gsub("\n", " ", table$description)
    cat(paste0("## ", name, "\n\n"))
    print(kable(table, format = "markdown"))
    cat("\n\n")
  }
}

cat(":::\n")

```



## Description

```{r description, results='asis'}
#| echo: false

cat(dataset_description)

```

