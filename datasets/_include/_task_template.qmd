```{r load_data}
#| include: false
#| error: true

library(tidyverse)
library(jsonlite)

meta <- read_json(params$data_file)

meta_uns <- meta$uns
meta_structure <- meta$structure

dataset_url <- meta_uns$dataset_url
data_url <- meta_uns$data_url
date_created <- meta_uns$date_created
filesize <- format(structure(meta_uns$file_size, class="object_size"), units="auto", standard="IEC", digits=2)
n_cells<- NULL

for (item in meta_structure$var) {
  if (item$name == "n_cells") {
    n_cells <- item$shape[[1]]
    break
  }
}
```

---
dataset-size: "`r filesize`"
date: "`r date_created`"
cells: "`r n_cells`"
---



```{r quick-links, results='asis'}
#| echo: false
#| column: margin

cat("#### Quick links\n")
cat(paste0('<div class="quarto-title-meta-heading"><i class="bi bi-file-earmark-text"></i> [Documentation](',dataset_url,')</div>\n'))
cat(paste0('<div class="quarto-title-meta-heading"><i class="bi bi-globe"></i> [Source](',data_url,')</div>\n'))

```

```{r related benchmarks, results='asis'}
#| echo: false
#| column: margin

cat("#### Related benchmarks\n")




```

 
## Explore the dataset

::: {.panel-tabset}


```{r x_struct, results='asis'}
#| echo: false
library(knitr)

for (name in names(meta_structure)) {
  table <- fromJSON(toJSON(meta_structure[[name]]))
  if (length(table) != 0) {
    table <- table[c("name", "type", "shape", "dtype")]
    cat(paste0("## ", name, "\n\n"))
    print(kable(table, format = "markdown"))
    cat("\n\n")
  }
}

```

:::

