

```{r setup}
#| include: false
#| error: true

library(tidyverse)
library(funkyheatmap)
library(kableExtra)

# read task info
task_info <- jsonlite::read_json(paste0(params$data_dir, "/task_info.json"))
task_info$task_description <- task_info$task_description %||% NA_character_

`%|%` <- function(x, y) {
  ifelse(is.na(x), y, x)
}

method_info <- jsonlite::read_json(paste0(params$data_dir, "/method_info.json"), simplifyVector = TRUE)
metric_info <- jsonlite::read_json(paste0(params$data_dir, "/metric_info.json"), simplifyVector = TRUE)
dataset_info <- jsonlite::read_json(paste0(params$data_dir, "/dataset_info.json"), simplifyVector = TRUE)
results <- jsonlite::read_json(paste0(params$data_dir, "/results.json"), simplifyVector = TRUE)
qc <- jsonlite::read_json(paste0(params$data_dir, "/quality_control.json"), simplifyVector = TRUE)

for (col in c("method_summary")) {
  method_info[[col]] <- method_info[[col]] %||% NA_character_
}
for (col in c("metric_summary")) {
  metric_info[[col]] <- metric_info[[col]] %||% NA_character_
}
for (col in c("dataset_summary")) {
  dataset_info[[col]] <- dataset_info[[col]] %||% NA_character_
}

num_methods <- sum(!method_info$is_baseline)
num_baselines <- sum(method_info$is_baseline)
num_datasets <- nrow(dataset_info)
num_metrics <- nrow(metric_info)


link_fun <- function(label, url, format = "markdown") {
  if (format == "markdown") {
    paste0("[", label, "](", url, ")")
  } else {
    paste0("<a href=\"", url, "\" target=\"_blank\">", label, "</a>")
  }
}
cite_map <- list()
cite_fun <- function(key, format = "markdown") {
  # if (is.null(options("citation_map"))) {
  #   options("citation_map" = list())
  # }
  # cm <- options("citation_map")
  if (!key %in% names(cite_map)) {
    cite_map[[key]] <<- length(cite_map) + 1
    # options("citation_map" = cm)
  }
  num <- cite_map[[key]]
  link_fun(num, paste0("/bibliography/#", key), format = format)
}

```


```{r overall_ranking}
#| echo: false
results_long <-
  inner_join(
    results %>%
      unnest(metric_values) %>%
      gather(metric_id, value, any_of(metric_info$metric_id)) %>%
      mutate(value = ifelse(is.na(value), NA_real_, value)) %>%
      select(method_id, dataset_id, metric_id, value),
    results %>%
      unnest(scaled_scores) %>%
      gather(metric_id, score, any_of(metric_info$metric_id)) %>%
      mutate(score = ifelse(is.na(score), NA_real_, score)) %>%
      select(method_id, dataset_id, metric_id, score),
    by = c("method_id", "dataset_id", "metric_id")
  ) %>%
  left_join(method_info %>% select(method_id, is_baseline), "method_id")

overall_ranking <- results_long %>%
  group_by(method_id) %>%
  summarise(mean_score = mean(score %|% 0)) %>%
  arrange(desc(mean_score))

# order by ranking
results_long$method_id <- factor(results_long$method_id, levels = rev(overall_ranking$method_id))
results$method_id <- factor(results$method_id, levels = rev(overall_ranking$method_id))
method_info$method_id <- factor(method_info$method_id, levels = rev(overall_ranking$method_id))
```