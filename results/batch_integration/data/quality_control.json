[
    {
        "task_id": "task_batch_integration", 
        "category": "Task info", 
        "name": "Pct 'task_id' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing([task_info], field)", 
        "message": "Task metadata field 'task_id' should be defined\n  Task id: task_batch_integration\n  Field: task_id\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Task info", 
        "name": "Pct 'task_name' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing([task_info], field)", 
        "message": "Task metadata field 'task_name' should be defined\n  Task id: task_batch_integration\n  Field: task_name\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Task info", 
        "name": "Pct 'task_summary' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing([task_info], field)", 
        "message": "Task metadata field 'task_summary' should be defined\n  Task id: task_batch_integration\n  Field: task_summary\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Task info", 
        "name": "Pct 'task_description' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing([task_info], field)", 
        "message": "Task metadata field 'task_description' should be defined\n  Task id: task_batch_integration\n  Field: task_description\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Method info", 
        "name": "Pct 'task_id' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(method_info, field)", 
        "message": "Method metadata field 'task_id' should be defined\n  Task id: task_batch_integration\n  Field: task_id\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Method info", 
        "name": "Pct 'commit_sha' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(method_info, field)", 
        "message": "Method metadata field 'commit_sha' should be defined\n  Task id: task_batch_integration\n  Field: commit_sha\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Method info", 
        "name": "Pct 'method_id' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(method_info, field)", 
        "message": "Method metadata field 'method_id' should be defined\n  Task id: task_batch_integration\n  Field: method_id\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Method info", 
        "name": "Pct 'method_name' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(method_info, field)", 
        "message": "Method metadata field 'method_name' should be defined\n  Task id: task_batch_integration\n  Field: method_name\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Method info", 
        "name": "Pct 'method_summary' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(method_info, field)", 
        "message": "Method metadata field 'method_summary' should be defined\n  Task id: task_batch_integration\n  Field: method_summary\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Method info", 
        "name": "Pct 'paper_reference' missing", 
        "value": 0.7083333333333334, 
        "severity": 2, 
        "severity_value": 3.0, 
        "code": "percent_missing(method_info, field)", 
        "message": "Method metadata field 'paper_reference' should be defined\n  Task id: task_batch_integration\n  Field: paper_reference\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Method info", 
        "name": "Pct 'is_baseline' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(method_info, field)", 
        "message": "Method metadata field 'is_baseline' should be defined\n  Task id: task_batch_integration\n  Field: is_baseline\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Metric info", 
        "name": "Pct 'task_id' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(metric_info, field)", 
        "message": "Metric metadata field 'task_id' should be defined\n  Task id: task_batch_integration\n  Field: task_id\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Metric info", 
        "name": "Pct 'commit_sha' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(metric_info, field)", 
        "message": "Metric metadata field 'commit_sha' should be defined\n  Task id: task_batch_integration\n  Field: commit_sha\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Metric info", 
        "name": "Pct 'metric_id' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(metric_info, field)", 
        "message": "Metric metadata field 'metric_id' should be defined\n  Task id: task_batch_integration\n  Field: metric_id\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Metric info", 
        "name": "Pct 'metric_name' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(metric_info, field)", 
        "message": "Metric metadata field 'metric_name' should be defined\n  Task id: task_batch_integration\n  Field: metric_name\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Metric info", 
        "name": "Pct 'metric_summary' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(metric_info, field)", 
        "message": "Metric metadata field 'metric_summary' should be defined\n  Task id: task_batch_integration\n  Field: metric_summary\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Metric info", 
        "name": "Pct 'paper_reference' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(metric_info, field)", 
        "message": "Metric metadata field 'paper_reference' should be defined\n  Task id: task_batch_integration\n  Field: paper_reference\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Metric info", 
        "name": "Pct 'maximize' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(metric_info, field)", 
        "message": "Metric metadata field 'maximize' should be defined\n  Task id: task_batch_integration\n  Field: maximize\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Dataset info", 
        "name": "Pct 'task_id' missing", 
        "value": 1.0, 
        "severity": 2, 
        "severity_value": 3.0, 
        "code": "percent_missing(dataset_info, field)", 
        "message": "Dataset metadata field 'task_id' should be defined\n  Task id: task_batch_integration\n  Field: task_id\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Dataset info", 
        "name": "Pct 'dataset_id' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(dataset_info, field)", 
        "message": "Dataset metadata field 'dataset_id' should be defined\n  Task id: task_batch_integration\n  Field: dataset_id\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Dataset info", 
        "name": "Pct 'dataset_name' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(dataset_info, field)", 
        "message": "Dataset metadata field 'dataset_name' should be defined\n  Task id: task_batch_integration\n  Field: dataset_name\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Dataset info", 
        "name": "Pct 'dataset_summary' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(dataset_info, field)", 
        "message": "Dataset metadata field 'dataset_summary' should be defined\n  Task id: task_batch_integration\n  Field: dataset_summary\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Dataset info", 
        "name": "Pct 'data_reference' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(dataset_info, field)", 
        "message": "Dataset metadata field 'data_reference' should be defined\n  Task id: task_batch_integration\n  Field: data_reference\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Dataset info", 
        "name": "Pct 'data_url' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(dataset_info, field)", 
        "message": "Dataset metadata field 'data_url' should be defined\n  Task id: task_batch_integration\n  Field: data_url\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw data", 
        "name": "Number of results", 
        "value": 240, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "len(results) == len(method_info) * len(metric_info) * len(dataset_info)", 
        "message": "Number of results should be equal to #methods × #metrics × #datasets.\n  Task id: task_batch_integration\n  Number of results: 240\n  Number of methods: 24\n  Number of metrics: 13\n  Number of datasets: 10\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Metric 'asw_batch' %missing", 
        "value": 0.20833333333333337, 
        "severity": 2, 
        "severity_value": 2.0833333333333335, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  Metric id: asw_batch\n  Percentage missing: 21%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Metric 'asw_label' %missing", 
        "value": 0.2583333333333333, 
        "severity": 2, 
        "severity_value": 2.583333333333333, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  Metric id: asw_label\n  Percentage missing: 26%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Metric 'cell_cycle_conservation' %missing", 
        "value": 0.5916666666666666, 
        "severity": 3, 
        "severity_value": 5.916666666666665, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  Metric id: cell_cycle_conservation\n  Percentage missing: 59%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Metric 'ari' %missing", 
        "value": 0.33333333333333337, 
        "severity": 3, 
        "severity_value": 3.3333333333333335, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  Metric id: ari\n  Percentage missing: 33%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Metric 'nmi' %missing", 
        "value": 0.33333333333333337, 
        "severity": 3, 
        "severity_value": 3.3333333333333335, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  Metric id: nmi\n  Percentage missing: 33%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Metric 'graph_connectivity' %missing", 
        "value": 0.16666666666666663, 
        "severity": 1, 
        "severity_value": 1.6666666666666663, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  Metric id: graph_connectivity\n  Percentage missing: 17%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Metric 'hvg_overlap' %missing", 
        "value": 0.7208333333333333, 
        "severity": 3, 
        "severity_value": 7.208333333333333, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  Metric id: hvg_overlap\n  Percentage missing: 72%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Metric 'isolated_label_asw' %missing", 
        "value": 0.23749999999999993, 
        "severity": 2, 
        "severity_value": 2.374999999999999, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  Metric id: isolated_label_asw\n  Percentage missing: 24%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Metric 'isolated_label_f1' %missing", 
        "value": 0.4291666666666667, 
        "severity": 3, 
        "severity_value": 4.291666666666667, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  Metric id: isolated_label_f1\n  Percentage missing: 43%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Metric 'kbet' %missing", 
        "value": 0.3583333333333333, 
        "severity": 3, 
        "severity_value": 3.5833333333333326, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  Metric id: kbet\n  Percentage missing: 36%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Metric 'ilisi' %missing", 
        "value": 0.1708333333333334, 
        "severity": 1, 
        "severity_value": 1.708333333333334, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  Metric id: ilisi\n  Percentage missing: 17%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Metric 'clisi' %missing", 
        "value": 0.1708333333333334, 
        "severity": 1, 
        "severity_value": 1.708333333333334, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  Metric id: clisi\n  Percentage missing: 17%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Metric 'pcr' %missing", 
        "value": 0.20833333333333337, 
        "severity": 2, 
        "severity_value": 2.0833333333333335, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  Metric id: pcr\n  Percentage missing: 21%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'embed_cell_types' %missing", 
        "value": 0.17692307692307696, 
        "severity": 1, 
        "severity_value": 1.7692307692307696, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: embed_cell_types\n  Percentage missing: 18%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'embed_cell_types_jittered' %missing", 
        "value": 0.17692307692307696, 
        "severity": 1, 
        "severity_value": 1.7692307692307696, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: embed_cell_types_jittered\n  Percentage missing: 18%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'no_integration' %missing", 
        "value": 0.23076923076923073, 
        "severity": 2, 
        "severity_value": 2.307692307692307, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: no_integration\n  Percentage missing: 23%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'no_integration_batch' %missing", 
        "value": 0.24615384615384606, 
        "severity": 2, 
        "severity_value": 2.4615384615384603, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: no_integration_batch\n  Percentage missing: 25%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'shuffle_integration' %missing", 
        "value": 0.13076923076923075, 
        "severity": 1, 
        "severity_value": 1.3076923076923075, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: shuffle_integration\n  Percentage missing: 13%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'shuffle_integration_by_batch' %missing", 
        "value": 0.12307692307692308, 
        "severity": 1, 
        "severity_value": 1.2307692307692308, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: shuffle_integration_by_batch\n  Percentage missing: 12%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'shuffle_integration_by_cell_type' %missing", 
        "value": 0.12307692307692308, 
        "severity": 1, 
        "severity_value": 1.2307692307692308, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: shuffle_integration_by_cell_type\n  Percentage missing: 12%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'batchelor_fastmnn' %missing", 
        "value": 0.18461538461538463, 
        "severity": 1, 
        "severity_value": 1.8461538461538463, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: batchelor_fastmnn\n  Percentage missing: 18%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'batchelor_mnn_correct' %missing", 
        "value": 0.7076923076923077, 
        "severity": 3, 
        "severity_value": 7.076923076923077, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: batchelor_mnn_correct\n  Percentage missing: 71%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'bbknn' %missing", 
        "value": 0.6384615384615384, 
        "severity": 3, 
        "severity_value": 6.384615384615384, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: bbknn\n  Percentage missing: 64%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'combat' %missing", 
        "value": 0.1461538461538462, 
        "severity": 1, 
        "severity_value": 1.461538461538462, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: combat\n  Percentage missing: 15%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'geneformer' %missing", 
        "value": 0.9153846153846154, 
        "severity": 3, 
        "severity_value": 9.153846153846153, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: geneformer\n  Percentage missing: 92%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'harmony' %missing", 
        "value": 0.16923076923076918, 
        "severity": 1, 
        "severity_value": 1.6923076923076918, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: harmony\n  Percentage missing: 17%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'harmonypy' %missing", 
        "value": 0.22307692307692306, 
        "severity": 2, 
        "severity_value": 2.2307692307692304, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: harmonypy\n  Percentage missing: 22%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'liger' %missing", 
        "value": 0.32307692307692304, 
        "severity": 3, 
        "severity_value": 3.2307692307692304, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: liger\n  Percentage missing: 32%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'mnnpy' %missing", 
        "value": 0.6153846153846154, 
        "severity": 3, 
        "severity_value": 6.153846153846154, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: mnnpy\n  Percentage missing: 62%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'pyliger' %missing", 
        "value": 0.1923076923076923, 
        "severity": 1, 
        "severity_value": 1.923076923076923, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: pyliger\n  Percentage missing: 19%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'scalex' %missing", 
        "value": 0.1461538461538462, 
        "severity": 1, 
        "severity_value": 1.461538461538462, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: scalex\n  Percentage missing: 15%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'scanorama' %missing", 
        "value": 0.06153846153846154, 
        "severity": 0, 
        "severity_value": 0.6153846153846154, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: scanorama\n  Percentage missing: 6%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'scanvi' %missing", 
        "value": 0.20769230769230762, 
        "severity": 2, 
        "severity_value": 2.076923076923076, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: scanvi\n  Percentage missing: 21%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'scgpt' %missing", 
        "value": 0.5076923076923077, 
        "severity": 3, 
        "severity_value": 5.076923076923077, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: scgpt\n  Percentage missing: 51%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'scimilarity' %missing", 
        "value": 0.523076923076923, 
        "severity": 3, 
        "severity_value": 5.23076923076923, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: scimilarity\n  Percentage missing: 52%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'scvi' %missing", 
        "value": 0.23076923076923073, 
        "severity": 2, 
        "severity_value": 2.307692307692307, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: scvi\n  Percentage missing: 23%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'uce' %missing", 
        "value": 0.7307692307692308, 
        "severity": 3, 
        "severity_value": 7.307692307692308, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: uce\n  Percentage missing: 73%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Dataset 'cellxgene_census/dkd' %missing", 
        "value": 0.20512820512820518, 
        "severity": 2, 
        "severity_value": 2.0512820512820515, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  dataset id: cellxgene_census/dkd\n  Percentage missing: 21%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Dataset 'openproblems_v1/zebrafish' %missing", 
        "value": 0.28525641025641024, 
        "severity": 2, 
        "severity_value": 2.852564102564102, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  dataset id: openproblems_v1/zebrafish\n  Percentage missing: 29%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Dataset 'cellxgene_census/tabula_sapiens' %missing", 
        "value": 0.4262820512820512, 
        "severity": 3, 
        "severity_value": 4.262820512820512, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  dataset id: cellxgene_census/tabula_sapiens\n  Percentage missing: 43%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Dataset 'cellxgene_census/hypomap' %missing", 
        "value": 0.5352564102564104, 
        "severity": 3, 
        "severity_value": 5.352564102564103, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  dataset id: cellxgene_census/hypomap\n  Percentage missing: 54%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Dataset 'cellxgene_census/mouse_pancreas_atlas' %missing", 
        "value": 0.4358974358974359, 
        "severity": 3, 
        "severity_value": 4.358974358974359, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  dataset id: cellxgene_census/mouse_pancreas_atlas\n  Percentage missing: 44%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Dataset 'cellxgene_census/gtex_v9' %missing", 
        "value": 0.3846153846153846, 
        "severity": 3, 
        "severity_value": 3.846153846153846, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  dataset id: cellxgene_census/gtex_v9\n  Percentage missing: 38%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Dataset 'cellxgene_census/immune_cell_atlas' %missing", 
        "value": 0.33333333333333337, 
        "severity": 3, 
        "severity_value": 3.3333333333333335, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  dataset id: cellxgene_census/immune_cell_atlas\n  Percentage missing: 33%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Dataset 'openproblems_v1/cengen' %missing", 
        "value": 0.39743589743589747, 
        "severity": 3, 
        "severity_value": 3.9743589743589745, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  dataset id: openproblems_v1/cengen\n  Percentage missing: 40%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Dataset 'openproblems_v1/immune_cells' %missing", 
        "value": 0.10897435897435903, 
        "severity": 1, 
        "severity_value": 1.0897435897435903, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  dataset id: openproblems_v1/immune_cells\n  Percentage missing: 11%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Dataset 'openproblems_v1/pancreas' %missing", 
        "value": 0.10897435897435903, 
        "severity": 1, 
        "severity_value": 1.0897435897435903, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  dataset id: openproblems_v1/pancreas\n  Percentage missing: 11%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types asw_batch", 
        "value": 0.7274, 
        "severity": 0, 
        "severity_value": -0.7274, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: asw_batch\n  Worst score: 0.7274%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types asw_batch", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: asw_batch\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types_jittered asw_batch", 
        "value": 0.7279, 
        "severity": 0, 
        "severity_value": -0.7279, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types_jittered performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: asw_batch\n  Worst score: 0.7279%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types_jittered asw_batch", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types_jittered performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: asw_batch\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration asw_batch", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: asw_batch\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration asw_batch", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method no_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: asw_batch\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration_batch asw_batch", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: asw_batch\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration_batch asw_batch", 
        "value": 0.4272, 
        "severity": 0, 
        "severity_value": 0.2136, 
        "code": "best_score <= 2", 
        "message": "Method no_integration_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: asw_batch\n  Best score: 0.4272%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration asw_batch", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: asw_batch\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration asw_batch", 
        "value": 0.9682, 
        "severity": 0, 
        "severity_value": 0.4841, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: asw_batch\n  Best score: 0.9682%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_batch asw_batch", 
        "value": 0.3522, 
        "severity": 0, 
        "severity_value": -0.3522, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: asw_batch\n  Worst score: 0.3522%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_batch asw_batch", 
        "value": 0.7639, 
        "severity": 0, 
        "severity_value": 0.38195, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: asw_batch\n  Best score: 0.7639%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_cell_type asw_batch", 
        "value": 0.257, 
        "severity": 0, 
        "severity_value": -0.257, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_cell_type performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: asw_batch\n  Worst score: 0.257%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_cell_type asw_batch", 
        "value": 0.9311, 
        "severity": 0, 
        "severity_value": 0.46555, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_cell_type performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: asw_batch\n  Best score: 0.9311%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_fastmnn asw_batch", 
        "value": 0.1331, 
        "severity": 0, 
        "severity_value": -0.1331, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_fastmnn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: asw_batch\n  Worst score: 0.1331%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_fastmnn asw_batch", 
        "value": 0.9304, 
        "severity": 0, 
        "severity_value": 0.4652, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_fastmnn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: asw_batch\n  Best score: 0.9304%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_mnn_correct asw_batch", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_mnn_correct performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: asw_batch\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_mnn_correct asw_batch", 
        "value": 0.5425, 
        "severity": 0, 
        "severity_value": 0.27125, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_mnn_correct performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: asw_batch\n  Best score: 0.5425%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score bbknn asw_batch", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method bbknn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: asw_batch\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score bbknn asw_batch", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method bbknn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: asw_batch\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score combat asw_batch", 
        "value": 0.0483, 
        "severity": 0, 
        "severity_value": -0.0483, 
        "code": "worst_score >= -1", 
        "message": "Method combat performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: asw_batch\n  Worst score: 0.0483%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score combat asw_batch", 
        "value": 1.1044, 
        "severity": 0, 
        "severity_value": 0.5522, 
        "code": "best_score <= 2", 
        "message": "Method combat performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: asw_batch\n  Best score: 1.1044%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score geneformer asw_batch", 
        "value": -0.9324, 
        "severity": 0, 
        "severity_value": 0.9324, 
        "code": "worst_score >= -1", 
        "message": "Method geneformer performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: asw_batch\n  Worst score: -0.9324%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score geneformer asw_batch", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method geneformer performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: asw_batch\n  Best score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmony asw_batch", 
        "value": 0.2235, 
        "severity": 0, 
        "severity_value": -0.2235, 
        "code": "worst_score >= -1", 
        "message": "Method harmony performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: asw_batch\n  Worst score: 0.2235%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmony asw_batch", 
        "value": 0.8188, 
        "severity": 0, 
        "severity_value": 0.4094, 
        "code": "best_score <= 2", 
        "message": "Method harmony performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: asw_batch\n  Best score: 0.8188%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmonypy asw_batch", 
        "value": 0.2081, 
        "severity": 0, 
        "severity_value": -0.2081, 
        "code": "worst_score >= -1", 
        "message": "Method harmonypy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: asw_batch\n  Worst score: 0.2081%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmonypy asw_batch", 
        "value": 0.821, 
        "severity": 0, 
        "severity_value": 0.4105, 
        "code": "best_score <= 2", 
        "message": "Method harmonypy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: asw_batch\n  Best score: 0.821%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score liger asw_batch", 
        "value": -0.6246, 
        "severity": 0, 
        "severity_value": 0.6246, 
        "code": "worst_score >= -1", 
        "message": "Method liger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: asw_batch\n  Worst score: -0.6246%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score liger asw_batch", 
        "value": 0.6573, 
        "severity": 0, 
        "severity_value": 0.32865, 
        "code": "best_score <= 2", 
        "message": "Method liger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: asw_batch\n  Best score: 0.6573%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score mnnpy asw_batch", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method mnnpy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: asw_batch\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score mnnpy asw_batch", 
        "value": 0.7807, 
        "severity": 0, 
        "severity_value": 0.39035, 
        "code": "best_score <= 2", 
        "message": "Method mnnpy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: asw_batch\n  Best score: 0.7807%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score pyliger asw_batch", 
        "value": -0.533, 
        "severity": 0, 
        "severity_value": 0.533, 
        "code": "worst_score >= -1", 
        "message": "Method pyliger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: asw_batch\n  Worst score: -0.533%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score pyliger asw_batch", 
        "value": 0.7103, 
        "severity": 0, 
        "severity_value": 0.35515, 
        "code": "best_score <= 2", 
        "message": "Method pyliger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: asw_batch\n  Best score: 0.7103%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scalex asw_batch", 
        "value": -0.2605, 
        "severity": 0, 
        "severity_value": 0.2605, 
        "code": "worst_score >= -1", 
        "message": "Method scalex performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: asw_batch\n  Worst score: -0.2605%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scalex asw_batch", 
        "value": 0.718, 
        "severity": 0, 
        "severity_value": 0.359, 
        "code": "best_score <= 2", 
        "message": "Method scalex performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: asw_batch\n  Best score: 0.718%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanorama asw_batch", 
        "value": 0.3511, 
        "severity": 0, 
        "severity_value": -0.3511, 
        "code": "worst_score >= -1", 
        "message": "Method scanorama performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: asw_batch\n  Worst score: 0.3511%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanorama asw_batch", 
        "value": 0.8188, 
        "severity": 0, 
        "severity_value": 0.4094, 
        "code": "best_score <= 2", 
        "message": "Method scanorama performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: asw_batch\n  Best score: 0.8188%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanvi asw_batch", 
        "value": 0.1452, 
        "severity": 0, 
        "severity_value": -0.1452, 
        "code": "worst_score >= -1", 
        "message": "Method scanvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: asw_batch\n  Worst score: 0.1452%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanvi asw_batch", 
        "value": 0.8206, 
        "severity": 0, 
        "severity_value": 0.4103, 
        "code": "best_score <= 2", 
        "message": "Method scanvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: asw_batch\n  Best score: 0.8206%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scgpt asw_batch", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scgpt performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt\n  Metric id: asw_batch\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scgpt asw_batch", 
        "value": 0.8107, 
        "severity": 0, 
        "severity_value": 0.40535, 
        "code": "best_score <= 2", 
        "message": "Method scgpt performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt\n  Metric id: asw_batch\n  Best score: 0.8107%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scimilarity asw_batch", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scimilarity performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: asw_batch\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scimilarity asw_batch", 
        "value": 0.6327, 
        "severity": 0, 
        "severity_value": 0.31635, 
        "code": "best_score <= 2", 
        "message": "Method scimilarity performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: asw_batch\n  Best score: 0.6327%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scvi asw_batch", 
        "value": 0.3572, 
        "severity": 0, 
        "severity_value": -0.3572, 
        "code": "worst_score >= -1", 
        "message": "Method scvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: asw_batch\n  Worst score: 0.3572%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scvi asw_batch", 
        "value": 0.9861, 
        "severity": 0, 
        "severity_value": 0.49305, 
        "code": "best_score <= 2", 
        "message": "Method scvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: asw_batch\n  Best score: 0.9861%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score uce asw_batch", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method uce performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: asw_batch\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score uce asw_batch", 
        "value": 1.0217, 
        "severity": 0, 
        "severity_value": 0.51085, 
        "code": "best_score <= 2", 
        "message": "Method uce performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: asw_batch\n  Best score: 1.0217%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types asw_label", 
        "value": 1, 
        "severity": 0, 
        "severity_value": -1.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: asw_label\n  Worst score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types asw_label", 
        "value": 1, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: asw_label\n  Best score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types_jittered asw_label", 
        "value": 1, 
        "severity": 0, 
        "severity_value": -1.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types_jittered performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: asw_label\n  Worst score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types_jittered asw_label", 
        "value": 1, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types_jittered performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: asw_label\n  Best score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration asw_label", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: asw_label\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration asw_label", 
        "value": 0.3007, 
        "severity": 0, 
        "severity_value": 0.15035, 
        "code": "best_score <= 2", 
        "message": "Method no_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: asw_label\n  Best score: 0.3007%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration_batch asw_label", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: asw_label\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration_batch asw_label", 
        "value": 0.209, 
        "severity": 0, 
        "severity_value": 0.1045, 
        "code": "best_score <= 2", 
        "message": "Method no_integration_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: asw_label\n  Best score: 0.209%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration asw_label", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: asw_label\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration asw_label", 
        "value": 0.0642, 
        "severity": 0, 
        "severity_value": 0.0321, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: asw_label\n  Best score: 0.0642%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_batch asw_label", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: asw_label\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_batch asw_label", 
        "value": 0.0412, 
        "severity": 0, 
        "severity_value": 0.0206, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: asw_label\n  Best score: 0.0412%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_cell_type asw_label", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_cell_type performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: asw_label\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_cell_type asw_label", 
        "value": 0.3007, 
        "severity": 0, 
        "severity_value": 0.15035, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_cell_type performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: asw_label\n  Best score: 0.3007%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_fastmnn asw_label", 
        "value": 0.022, 
        "severity": 0, 
        "severity_value": -0.022, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_fastmnn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: asw_label\n  Worst score: 0.022%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_fastmnn asw_label", 
        "value": 0.4015, 
        "severity": 0, 
        "severity_value": 0.20075, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_fastmnn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: asw_label\n  Best score: 0.4015%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_mnn_correct asw_label", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_mnn_correct performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: asw_label\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_mnn_correct asw_label", 
        "value": 0.4434, 
        "severity": 0, 
        "severity_value": 0.2217, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_mnn_correct performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: asw_label\n  Best score: 0.4434%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score bbknn asw_label", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method bbknn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: asw_label\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score bbknn asw_label", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method bbknn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: asw_label\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score combat asw_label", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method combat performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: asw_label\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score combat asw_label", 
        "value": 0.3295, 
        "severity": 0, 
        "severity_value": 0.16475, 
        "code": "best_score <= 2", 
        "message": "Method combat performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: asw_label\n  Best score: 0.3295%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score geneformer asw_label", 
        "value": -0.249, 
        "severity": 0, 
        "severity_value": 0.249, 
        "code": "worst_score >= -1", 
        "message": "Method geneformer performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: asw_label\n  Worst score: -0.249%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score geneformer asw_label", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method geneformer performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: asw_label\n  Best score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmony asw_label", 
        "value": 0.0044, 
        "severity": 0, 
        "severity_value": -0.0044, 
        "code": "worst_score >= -1", 
        "message": "Method harmony performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: asw_label\n  Worst score: 0.0044%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmony asw_label", 
        "value": 0.4089, 
        "severity": 0, 
        "severity_value": 0.20445, 
        "code": "best_score <= 2", 
        "message": "Method harmony performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: asw_label\n  Best score: 0.4089%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmonypy asw_label", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method harmonypy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: asw_label\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmonypy asw_label", 
        "value": 0.4088, 
        "severity": 0, 
        "severity_value": 0.2044, 
        "code": "best_score <= 2", 
        "message": "Method harmonypy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: asw_label\n  Best score: 0.4088%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score liger asw_label", 
        "value": -0.1071, 
        "severity": 0, 
        "severity_value": 0.1071, 
        "code": "worst_score >= -1", 
        "message": "Method liger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: asw_label\n  Worst score: -0.1071%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score liger asw_label", 
        "value": 0.4418, 
        "severity": 0, 
        "severity_value": 0.2209, 
        "code": "best_score <= 2", 
        "message": "Method liger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: asw_label\n  Best score: 0.4418%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score mnnpy asw_label", 
        "value": -0.0085, 
        "severity": 0, 
        "severity_value": 0.0085, 
        "code": "worst_score >= -1", 
        "message": "Method mnnpy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: asw_label\n  Worst score: -0.0085%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score mnnpy asw_label", 
        "value": 0.0616, 
        "severity": 0, 
        "severity_value": 0.0308, 
        "code": "best_score <= 2", 
        "message": "Method mnnpy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: asw_label\n  Best score: 0.0616%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score pyliger asw_label", 
        "value": -0.0625, 
        "severity": 0, 
        "severity_value": 0.0625, 
        "code": "worst_score >= -1", 
        "message": "Method pyliger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: asw_label\n  Worst score: -0.0625%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score pyliger asw_label", 
        "value": 0.4711, 
        "severity": 0, 
        "severity_value": 0.23555, 
        "code": "best_score <= 2", 
        "message": "Method pyliger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: asw_label\n  Best score: 0.4711%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scalex asw_label", 
        "value": -0.0886, 
        "severity": 0, 
        "severity_value": 0.0886, 
        "code": "worst_score >= -1", 
        "message": "Method scalex performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: asw_label\n  Worst score: -0.0886%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scalex asw_label", 
        "value": 0.2961, 
        "severity": 0, 
        "severity_value": 0.14805, 
        "code": "best_score <= 2", 
        "message": "Method scalex performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: asw_label\n  Best score: 0.2961%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanorama asw_label", 
        "value": -0.0878, 
        "severity": 0, 
        "severity_value": 0.0878, 
        "code": "worst_score >= -1", 
        "message": "Method scanorama performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: asw_label\n  Worst score: -0.0878%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanorama asw_label", 
        "value": 0.0525, 
        "severity": 0, 
        "severity_value": 0.02625, 
        "code": "best_score <= 2", 
        "message": "Method scanorama performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: asw_label\n  Best score: 0.0525%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanvi asw_label", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scanvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: asw_label\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanvi asw_label", 
        "value": 0.4575, 
        "severity": 0, 
        "severity_value": 0.22875, 
        "code": "best_score <= 2", 
        "message": "Method scanvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: asw_label\n  Best score: 0.4575%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scgpt asw_label", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scgpt performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt\n  Metric id: asw_label\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scgpt asw_label", 
        "value": 0.2852, 
        "severity": 0, 
        "severity_value": 0.1426, 
        "code": "best_score <= 2", 
        "message": "Method scgpt performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt\n  Metric id: asw_label\n  Best score: 0.2852%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scimilarity asw_label", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scimilarity performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: asw_label\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scimilarity asw_label", 
        "value": 0.444, 
        "severity": 0, 
        "severity_value": 0.222, 
        "code": "best_score <= 2", 
        "message": "Method scimilarity performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: asw_label\n  Best score: 0.444%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scvi asw_label", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: asw_label\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scvi asw_label", 
        "value": 0.3161, 
        "severity": 0, 
        "severity_value": 0.15805, 
        "code": "best_score <= 2", 
        "message": "Method scvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: asw_label\n  Best score: 0.3161%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score uce asw_label", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method uce performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: asw_label\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score uce asw_label", 
        "value": 0.1964, 
        "severity": 0, 
        "severity_value": 0.0982, 
        "code": "best_score <= 2", 
        "message": "Method uce performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: asw_label\n  Best score: 0.1964%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types cell_cycle_conservation", 
        "value": 0.7027, 
        "severity": 0, 
        "severity_value": 0.35135, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: cell_cycle_conservation\n  Best score: 0.7027%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types_jittered cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types_jittered performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types_jittered cell_cycle_conservation", 
        "value": 0.7025, 
        "severity": 0, 
        "severity_value": 0.35125, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types_jittered performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: cell_cycle_conservation\n  Best score: 0.7025%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration cell_cycle_conservation", 
        "value": 0.9274, 
        "severity": 0, 
        "severity_value": 0.4637, 
        "code": "best_score <= 2", 
        "message": "Method no_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: cell_cycle_conservation\n  Best score: 0.9274%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration_batch cell_cycle_conservation", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: cell_cycle_conservation\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration_batch cell_cycle_conservation", 
        "value": 1, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method no_integration_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: cell_cycle_conservation\n  Best score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration cell_cycle_conservation", 
        "value": 0.033, 
        "severity": 0, 
        "severity_value": 0.0165, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: cell_cycle_conservation\n  Best score: 0.033%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_batch cell_cycle_conservation", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: cell_cycle_conservation\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_batch cell_cycle_conservation", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: cell_cycle_conservation\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_cell_type cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_cell_type performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_cell_type cell_cycle_conservation", 
        "value": 0.8058, 
        "severity": 0, 
        "severity_value": 0.4029, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_cell_type performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: cell_cycle_conservation\n  Best score: 0.8058%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_fastmnn cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_fastmnn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_fastmnn cell_cycle_conservation", 
        "value": 0.9121, 
        "severity": 0, 
        "severity_value": 0.45605, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_fastmnn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: cell_cycle_conservation\n  Best score: 0.9121%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_mnn_correct cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_mnn_correct performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_mnn_correct cell_cycle_conservation", 
        "value": 0.942, 
        "severity": 0, 
        "severity_value": 0.471, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_mnn_correct performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: cell_cycle_conservation\n  Best score: 0.942%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score bbknn cell_cycle_conservation", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method bbknn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: cell_cycle_conservation\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score bbknn cell_cycle_conservation", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method bbknn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: cell_cycle_conservation\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score combat cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method combat performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score combat cell_cycle_conservation", 
        "value": 0.9062, 
        "severity": 0, 
        "severity_value": 0.4531, 
        "code": "best_score <= 2", 
        "message": "Method combat performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: cell_cycle_conservation\n  Best score: 0.9062%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score geneformer cell_cycle_conservation", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method geneformer performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: cell_cycle_conservation\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score geneformer cell_cycle_conservation", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method geneformer performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: cell_cycle_conservation\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmony cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method harmony performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmony cell_cycle_conservation", 
        "value": 0.908, 
        "severity": 0, 
        "severity_value": 0.454, 
        "code": "best_score <= 2", 
        "message": "Method harmony performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: cell_cycle_conservation\n  Best score: 0.908%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmonypy cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method harmonypy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmonypy cell_cycle_conservation", 
        "value": 0.9081, 
        "severity": 0, 
        "severity_value": 0.45405, 
        "code": "best_score <= 2", 
        "message": "Method harmonypy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: cell_cycle_conservation\n  Best score: 0.9081%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score liger cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method liger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score liger cell_cycle_conservation", 
        "value": 0.6482, 
        "severity": 0, 
        "severity_value": 0.3241, 
        "code": "best_score <= 2", 
        "message": "Method liger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: cell_cycle_conservation\n  Best score: 0.6482%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score mnnpy cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method mnnpy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score mnnpy cell_cycle_conservation", 
        "value": 0.4037, 
        "severity": 0, 
        "severity_value": 0.20185, 
        "code": "best_score <= 2", 
        "message": "Method mnnpy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: cell_cycle_conservation\n  Best score: 0.4037%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score pyliger cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method pyliger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score pyliger cell_cycle_conservation", 
        "value": 0.6881, 
        "severity": 0, 
        "severity_value": 0.34405, 
        "code": "best_score <= 2", 
        "message": "Method pyliger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: cell_cycle_conservation\n  Best score: 0.6881%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scalex cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scalex performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scalex cell_cycle_conservation", 
        "value": 0.8045, 
        "severity": 0, 
        "severity_value": 0.40225, 
        "code": "best_score <= 2", 
        "message": "Method scalex performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: cell_cycle_conservation\n  Best score: 0.8045%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanorama cell_cycle_conservation", 
        "value": -0.0041, 
        "severity": 0, 
        "severity_value": 0.0041, 
        "code": "worst_score >= -1", 
        "message": "Method scanorama performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: cell_cycle_conservation\n  Worst score: -0.0041%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanorama cell_cycle_conservation", 
        "value": 0.4296, 
        "severity": 0, 
        "severity_value": 0.2148, 
        "code": "best_score <= 2", 
        "message": "Method scanorama performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: cell_cycle_conservation\n  Best score: 0.4296%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanvi cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scanvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanvi cell_cycle_conservation", 
        "value": 0.8037, 
        "severity": 0, 
        "severity_value": 0.40185, 
        "code": "best_score <= 2", 
        "message": "Method scanvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: cell_cycle_conservation\n  Best score: 0.8037%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scgpt cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scgpt performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scgpt cell_cycle_conservation", 
        "value": 0.8548, 
        "severity": 0, 
        "severity_value": 0.4274, 
        "code": "best_score <= 2", 
        "message": "Method scgpt performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt\n  Metric id: cell_cycle_conservation\n  Best score: 0.8548%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scimilarity cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scimilarity performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scimilarity cell_cycle_conservation", 
        "value": 0.6704, 
        "severity": 0, 
        "severity_value": 0.3352, 
        "code": "best_score <= 2", 
        "message": "Method scimilarity performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: cell_cycle_conservation\n  Best score: 0.6704%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scvi cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scvi cell_cycle_conservation", 
        "value": 0.7181, 
        "severity": 0, 
        "severity_value": 0.35905, 
        "code": "best_score <= 2", 
        "message": "Method scvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: cell_cycle_conservation\n  Best score: 0.7181%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score uce cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method uce performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score uce cell_cycle_conservation", 
        "value": 0.8157, 
        "severity": 0, 
        "severity_value": 0.40785, 
        "code": "best_score <= 2", 
        "message": "Method uce performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: cell_cycle_conservation\n  Best score: 0.8157%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types ari", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: ari\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types ari", 
        "value": 1, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: ari\n  Best score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types_jittered ari", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types_jittered performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: ari\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types_jittered ari", 
        "value": 1, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types_jittered performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: ari\n  Best score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration ari", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method no_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: ari\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration_batch ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration_batch ari", 
        "value": 0.7983, 
        "severity": 0, 
        "severity_value": 0.39915, 
        "code": "best_score <= 2", 
        "message": "Method no_integration_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: ari\n  Best score: 0.7983%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration ari", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: ari\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration ari", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: ari\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_batch ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_batch ari", 
        "value": 0.3081, 
        "severity": 0, 
        "severity_value": 0.15405, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: ari\n  Best score: 0.3081%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_cell_type ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_cell_type performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_cell_type ari", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_cell_type performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: ari\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_fastmnn ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_fastmnn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_fastmnn ari", 
        "value": 2.2161, 
        "severity": 1, 
        "severity_value": 1.10805, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_fastmnn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: ari\n  Best score: 2.2161%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_mnn_correct ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_mnn_correct performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_mnn_correct ari", 
        "value": 0.9512, 
        "severity": 0, 
        "severity_value": 0.4756, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_mnn_correct performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: ari\n  Best score: 0.9512%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score bbknn ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method bbknn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score bbknn ari", 
        "value": 0.9517, 
        "severity": 0, 
        "severity_value": 0.47585, 
        "code": "best_score <= 2", 
        "message": "Method bbknn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: ari\n  Best score: 0.9517%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score combat ari", 
        "value": -0.074, 
        "severity": 0, 
        "severity_value": 0.074, 
        "code": "worst_score >= -1", 
        "message": "Method combat performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: ari\n  Worst score: -0.074%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score combat ari", 
        "value": 0.9483, 
        "severity": 0, 
        "severity_value": 0.47415, 
        "code": "best_score <= 2", 
        "message": "Method combat performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: ari\n  Best score: 0.9483%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score geneformer ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method geneformer performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score geneformer ari", 
        "value": 0.0016, 
        "severity": 0, 
        "severity_value": 0.0008, 
        "code": "best_score <= 2", 
        "message": "Method geneformer performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: ari\n  Best score: 0.0016%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmony ari", 
        "value": -0.0127, 
        "severity": 0, 
        "severity_value": 0.0127, 
        "code": "worst_score >= -1", 
        "message": "Method harmony performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: ari\n  Worst score: -0.0127%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmony ari", 
        "value": 1.9199, 
        "severity": 0, 
        "severity_value": 0.95995, 
        "code": "best_score <= 2", 
        "message": "Method harmony performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: ari\n  Best score: 1.9199%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmonypy ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method harmonypy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmonypy ari", 
        "value": 2.2226, 
        "severity": 1, 
        "severity_value": 1.1113, 
        "code": "best_score <= 2", 
        "message": "Method harmonypy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: ari\n  Best score: 2.2226%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score liger ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method liger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score liger ari", 
        "value": 1.7104, 
        "severity": 0, 
        "severity_value": 0.8552, 
        "code": "best_score <= 2", 
        "message": "Method liger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: ari\n  Best score: 1.7104%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score mnnpy ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method mnnpy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score mnnpy ari", 
        "value": 0.1669, 
        "severity": 0, 
        "severity_value": 0.08345, 
        "code": "best_score <= 2", 
        "message": "Method mnnpy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: ari\n  Best score: 0.1669%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score pyliger ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method pyliger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score pyliger ari", 
        "value": 1.7729, 
        "severity": 0, 
        "severity_value": 0.88645, 
        "code": "best_score <= 2", 
        "message": "Method pyliger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: ari\n  Best score: 1.7729%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scalex ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scalex performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scalex ari", 
        "value": 0.8618, 
        "severity": 0, 
        "severity_value": 0.4309, 
        "code": "best_score <= 2", 
        "message": "Method scalex performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: ari\n  Best score: 0.8618%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanorama ari", 
        "value": -0.6111, 
        "severity": 0, 
        "severity_value": 0.6111, 
        "code": "worst_score >= -1", 
        "message": "Method scanorama performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: ari\n  Worst score: -0.6111%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanorama ari", 
        "value": 0.2531, 
        "severity": 0, 
        "severity_value": 0.12655, 
        "code": "best_score <= 2", 
        "message": "Method scanorama performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: ari\n  Best score: 0.2531%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanvi ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scanvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanvi ari", 
        "value": 0.9612, 
        "severity": 0, 
        "severity_value": 0.4806, 
        "code": "best_score <= 2", 
        "message": "Method scanvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: ari\n  Best score: 0.9612%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scgpt ari", 
        "value": -0.0172, 
        "severity": 0, 
        "severity_value": 0.0172, 
        "code": "worst_score >= -1", 
        "message": "Method scgpt performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt\n  Metric id: ari\n  Worst score: -0.0172%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scgpt ari", 
        "value": 0.7464, 
        "severity": 0, 
        "severity_value": 0.3732, 
        "code": "best_score <= 2", 
        "message": "Method scgpt performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt\n  Metric id: ari\n  Best score: 0.7464%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scimilarity ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scimilarity performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scimilarity ari", 
        "value": 0.9331, 
        "severity": 0, 
        "severity_value": 0.46655, 
        "code": "best_score <= 2", 
        "message": "Method scimilarity performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: ari\n  Best score: 0.9331%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scvi ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scvi ari", 
        "value": 0.9517, 
        "severity": 0, 
        "severity_value": 0.47585, 
        "code": "best_score <= 2", 
        "message": "Method scvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: ari\n  Best score: 0.9517%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score uce ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method uce performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score uce ari", 
        "value": 0.7255, 
        "severity": 0, 
        "severity_value": 0.36275, 
        "code": "best_score <= 2", 
        "message": "Method uce performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: ari\n  Best score: 0.7255%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types nmi", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: nmi\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types nmi", 
        "value": 1, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: nmi\n  Best score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types_jittered nmi", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types_jittered performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: nmi\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types_jittered nmi", 
        "value": 1, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types_jittered performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: nmi\n  Best score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration nmi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: nmi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration nmi", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method no_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: nmi\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration_batch nmi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: nmi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration_batch nmi", 
        "value": 0.9471, 
        "severity": 0, 
        "severity_value": 0.47355, 
        "code": "best_score <= 2", 
        "message": "Method no_integration_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: nmi\n  Best score: 0.9471%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration nmi", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: nmi\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration nmi", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: nmi\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_batch nmi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: nmi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_batch nmi", 
        "value": 0.2925, 
        "severity": 0, 
        "severity_value": 0.14625, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: nmi\n  Best score: 0.2925%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_cell_type nmi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_cell_type performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: nmi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_cell_type nmi", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_cell_type performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: nmi\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_fastmnn nmi", 
        "value": -0.0401, 
        "severity": 0, 
        "severity_value": 0.0401, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_fastmnn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: nmi\n  Worst score: -0.0401%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_fastmnn nmi", 
        "value": 1.1981, 
        "severity": 0, 
        "severity_value": 0.59905, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_fastmnn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: nmi\n  Best score: 1.1981%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_mnn_correct nmi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_mnn_correct performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: nmi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_mnn_correct nmi", 
        "value": 0.9199, 
        "severity": 0, 
        "severity_value": 0.45995, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_mnn_correct performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: nmi\n  Best score: 0.9199%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score bbknn nmi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method bbknn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: nmi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score bbknn nmi", 
        "value": 0.913, 
        "severity": 0, 
        "severity_value": 0.4565, 
        "code": "best_score <= 2", 
        "message": "Method bbknn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: nmi\n  Best score: 0.913%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score combat nmi", 
        "value": -0.0728, 
        "severity": 0, 
        "severity_value": 0.0728, 
        "code": "worst_score >= -1", 
        "message": "Method combat performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: nmi\n  Worst score: -0.0728%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score combat nmi", 
        "value": 0.9144, 
        "severity": 0, 
        "severity_value": 0.4572, 
        "code": "best_score <= 2", 
        "message": "Method combat performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: nmi\n  Best score: 0.9144%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score geneformer nmi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method geneformer performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: nmi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score geneformer nmi", 
        "value": 0.0311, 
        "severity": 0, 
        "severity_value": 0.01555, 
        "code": "best_score <= 2", 
        "message": "Method geneformer performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: nmi\n  Best score: 0.0311%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmony nmi", 
        "value": -0.1748, 
        "severity": 0, 
        "severity_value": 0.1748, 
        "code": "worst_score >= -1", 
        "message": "Method harmony performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: nmi\n  Worst score: -0.1748%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmony nmi", 
        "value": 1.1478, 
        "severity": 0, 
        "severity_value": 0.5739, 
        "code": "best_score <= 2", 
        "message": "Method harmony performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: nmi\n  Best score: 1.1478%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmonypy nmi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method harmonypy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: nmi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmonypy nmi", 
        "value": 1.1874, 
        "severity": 0, 
        "severity_value": 0.5937, 
        "code": "best_score <= 2", 
        "message": "Method harmonypy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: nmi\n  Best score: 1.1874%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score liger nmi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method liger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: nmi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score liger nmi", 
        "value": 0.8753, 
        "severity": 0, 
        "severity_value": 0.43765, 
        "code": "best_score <= 2", 
        "message": "Method liger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: nmi\n  Best score: 0.8753%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score mnnpy nmi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method mnnpy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: nmi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score mnnpy nmi", 
        "value": 0.2273, 
        "severity": 0, 
        "severity_value": 0.11365, 
        "code": "best_score <= 2", 
        "message": "Method mnnpy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: nmi\n  Best score: 0.2273%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score pyliger nmi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method pyliger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: nmi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score pyliger nmi", 
        "value": 0.9404, 
        "severity": 0, 
        "severity_value": 0.4702, 
        "code": "best_score <= 2", 
        "message": "Method pyliger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: nmi\n  Best score: 0.9404%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scalex nmi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scalex performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: nmi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scalex nmi", 
        "value": 0.7648, 
        "severity": 0, 
        "severity_value": 0.3824, 
        "code": "best_score <= 2", 
        "message": "Method scalex performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: nmi\n  Best score: 0.7648%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanorama nmi", 
        "value": -2.0336, 
        "severity": 2, 
        "severity_value": 2.0336, 
        "code": "worst_score >= -1", 
        "message": "Method scanorama performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: nmi\n  Worst score: -2.0336%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanorama nmi", 
        "value": 0.2289, 
        "severity": 0, 
        "severity_value": 0.11445, 
        "code": "best_score <= 2", 
        "message": "Method scanorama performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: nmi\n  Best score: 0.2289%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanvi nmi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scanvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: nmi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanvi nmi", 
        "value": 0.9347, 
        "severity": 0, 
        "severity_value": 0.46735, 
        "code": "best_score <= 2", 
        "message": "Method scanvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: nmi\n  Best score: 0.9347%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scgpt nmi", 
        "value": -0.0224, 
        "severity": 0, 
        "severity_value": 0.0224, 
        "code": "worst_score >= -1", 
        "message": "Method scgpt performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt\n  Metric id: nmi\n  Worst score: -0.0224%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scgpt nmi", 
        "value": 0.7954, 
        "severity": 0, 
        "severity_value": 0.3977, 
        "code": "best_score <= 2", 
        "message": "Method scgpt performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt\n  Metric id: nmi\n  Best score: 0.7954%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scimilarity nmi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scimilarity performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: nmi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scimilarity nmi", 
        "value": 0.8826, 
        "severity": 0, 
        "severity_value": 0.4413, 
        "code": "best_score <= 2", 
        "message": "Method scimilarity performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: nmi\n  Best score: 0.8826%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scvi nmi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: nmi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scvi nmi", 
        "value": 0.9879, 
        "severity": 0, 
        "severity_value": 0.49395, 
        "code": "best_score <= 2", 
        "message": "Method scvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: nmi\n  Best score: 0.9879%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score uce nmi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method uce performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: nmi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score uce nmi", 
        "value": 0.7836, 
        "severity": 0, 
        "severity_value": 0.3918, 
        "code": "best_score <= 2", 
        "message": "Method uce performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: nmi\n  Best score: 0.7836%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types graph_connectivity", 
        "value": 0.9998, 
        "severity": 0, 
        "severity_value": -0.9998, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: graph_connectivity\n  Worst score: 0.9998%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types graph_connectivity", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: graph_connectivity\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types_jittered graph_connectivity", 
        "value": 1, 
        "severity": 0, 
        "severity_value": -1.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types_jittered performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: graph_connectivity\n  Worst score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types_jittered graph_connectivity", 
        "value": 1, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types_jittered performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: graph_connectivity\n  Best score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration graph_connectivity", 
        "value": 0.879, 
        "severity": 0, 
        "severity_value": -0.879, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: graph_connectivity\n  Worst score: 0.879%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration graph_connectivity", 
        "value": 0.9767, 
        "severity": 0, 
        "severity_value": 0.48835, 
        "code": "best_score <= 2", 
        "message": "Method no_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: graph_connectivity\n  Best score: 0.9767%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration_batch graph_connectivity", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: graph_connectivity\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration_batch graph_connectivity", 
        "value": 0.8483, 
        "severity": 0, 
        "severity_value": 0.42415, 
        "code": "best_score <= 2", 
        "message": "Method no_integration_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: graph_connectivity\n  Best score: 0.8483%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration graph_connectivity", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: graph_connectivity\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration graph_connectivity", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: graph_connectivity\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_batch graph_connectivity", 
        "value": 0.0032, 
        "severity": 0, 
        "severity_value": -0.0032, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: graph_connectivity\n  Worst score: 0.0032%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_batch graph_connectivity", 
        "value": 0.2508, 
        "severity": 0, 
        "severity_value": 0.1254, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: graph_connectivity\n  Best score: 0.2508%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_cell_type graph_connectivity", 
        "value": 0.8791, 
        "severity": 0, 
        "severity_value": -0.8791, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_cell_type performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: graph_connectivity\n  Worst score: 0.8791%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_cell_type graph_connectivity", 
        "value": 0.975, 
        "severity": 0, 
        "severity_value": 0.4875, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_cell_type performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: graph_connectivity\n  Best score: 0.975%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_fastmnn graph_connectivity", 
        "value": 0.8114, 
        "severity": 0, 
        "severity_value": -0.8114, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_fastmnn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: graph_connectivity\n  Worst score: 0.8114%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_fastmnn graph_connectivity", 
        "value": 0.9725, 
        "severity": 0, 
        "severity_value": 0.48625, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_fastmnn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: graph_connectivity\n  Best score: 0.9725%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_mnn_correct graph_connectivity", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_mnn_correct performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: graph_connectivity\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_mnn_correct graph_connectivity", 
        "value": 0.9536, 
        "severity": 0, 
        "severity_value": 0.4768, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_mnn_correct performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: graph_connectivity\n  Best score: 0.9536%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score bbknn graph_connectivity", 
        "value": 0.6321, 
        "severity": 0, 
        "severity_value": -0.6321, 
        "code": "worst_score >= -1", 
        "message": "Method bbknn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: graph_connectivity\n  Worst score: 0.6321%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score bbknn graph_connectivity", 
        "value": 0.9975, 
        "severity": 0, 
        "severity_value": 0.49875, 
        "code": "best_score <= 2", 
        "message": "Method bbknn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: graph_connectivity\n  Best score: 0.9975%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score combat graph_connectivity", 
        "value": 0.8593, 
        "severity": 0, 
        "severity_value": -0.8593, 
        "code": "worst_score >= -1", 
        "message": "Method combat performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: graph_connectivity\n  Worst score: 0.8593%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score combat graph_connectivity", 
        "value": 0.9742, 
        "severity": 0, 
        "severity_value": 0.4871, 
        "code": "best_score <= 2", 
        "message": "Method combat performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: graph_connectivity\n  Best score: 0.9742%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score geneformer graph_connectivity", 
        "value": -0.3221, 
        "severity": 0, 
        "severity_value": 0.3221, 
        "code": "worst_score >= -1", 
        "message": "Method geneformer performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: graph_connectivity\n  Worst score: -0.3221%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score geneformer graph_connectivity", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method geneformer performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: graph_connectivity\n  Best score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmony graph_connectivity", 
        "value": 0.8169, 
        "severity": 0, 
        "severity_value": -0.8169, 
        "code": "worst_score >= -1", 
        "message": "Method harmony performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: graph_connectivity\n  Worst score: 0.8169%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmony graph_connectivity", 
        "value": 0.9735, 
        "severity": 0, 
        "severity_value": 0.48675, 
        "code": "best_score <= 2", 
        "message": "Method harmony performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: graph_connectivity\n  Best score: 0.9735%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmonypy graph_connectivity", 
        "value": 0.7973, 
        "severity": 0, 
        "severity_value": -0.7973, 
        "code": "worst_score >= -1", 
        "message": "Method harmonypy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: graph_connectivity\n  Worst score: 0.7973%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmonypy graph_connectivity", 
        "value": 0.9784, 
        "severity": 0, 
        "severity_value": 0.4892, 
        "code": "best_score <= 2", 
        "message": "Method harmonypy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: graph_connectivity\n  Best score: 0.9784%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score liger graph_connectivity", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method liger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: graph_connectivity\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score liger graph_connectivity", 
        "value": 0.9503, 
        "severity": 0, 
        "severity_value": 0.47515, 
        "code": "best_score <= 2", 
        "message": "Method liger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: graph_connectivity\n  Best score: 0.9503%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score mnnpy graph_connectivity", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method mnnpy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: graph_connectivity\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score mnnpy graph_connectivity", 
        "value": 0.3914, 
        "severity": 0, 
        "severity_value": 0.1957, 
        "code": "best_score <= 2", 
        "message": "Method mnnpy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: graph_connectivity\n  Best score: 0.3914%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score pyliger graph_connectivity", 
        "value": 0.409, 
        "severity": 0, 
        "severity_value": -0.409, 
        "code": "worst_score >= -1", 
        "message": "Method pyliger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: graph_connectivity\n  Worst score: 0.409%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score pyliger graph_connectivity", 
        "value": 0.9573, 
        "severity": 0, 
        "severity_value": 0.47865, 
        "code": "best_score <= 2", 
        "message": "Method pyliger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: graph_connectivity\n  Best score: 0.9573%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scalex graph_connectivity", 
        "value": 0.5818, 
        "severity": 0, 
        "severity_value": -0.5818, 
        "code": "worst_score >= -1", 
        "message": "Method scalex performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: graph_connectivity\n  Worst score: 0.5818%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scalex graph_connectivity", 
        "value": 0.9004, 
        "severity": 0, 
        "severity_value": 0.4502, 
        "code": "best_score <= 2", 
        "message": "Method scalex performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: graph_connectivity\n  Best score: 0.9004%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanorama graph_connectivity", 
        "value": -0.0061, 
        "severity": 0, 
        "severity_value": 0.0061, 
        "code": "worst_score >= -1", 
        "message": "Method scanorama performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: graph_connectivity\n  Worst score: -0.0061%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanorama graph_connectivity", 
        "value": 0.3936, 
        "severity": 0, 
        "severity_value": 0.1968, 
        "code": "best_score <= 2", 
        "message": "Method scanorama performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: graph_connectivity\n  Best score: 0.3936%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanvi graph_connectivity", 
        "value": 0.8941, 
        "severity": 0, 
        "severity_value": -0.8941, 
        "code": "worst_score >= -1", 
        "message": "Method scanvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: graph_connectivity\n  Worst score: 0.8941%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanvi graph_connectivity", 
        "value": 0.9944, 
        "severity": 0, 
        "severity_value": 0.4972, 
        "code": "best_score <= 2", 
        "message": "Method scanvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: graph_connectivity\n  Best score: 0.9944%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scgpt graph_connectivity", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scgpt performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt\n  Metric id: graph_connectivity\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scgpt graph_connectivity", 
        "value": 0.97, 
        "severity": 0, 
        "severity_value": 0.485, 
        "code": "best_score <= 2", 
        "message": "Method scgpt performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt\n  Metric id: graph_connectivity\n  Best score: 0.97%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scimilarity graph_connectivity", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scimilarity performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: graph_connectivity\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scimilarity graph_connectivity", 
        "value": 0.9701, 
        "severity": 0, 
        "severity_value": 0.48505, 
        "code": "best_score <= 2", 
        "message": "Method scimilarity performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: graph_connectivity\n  Best score: 0.9701%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scvi graph_connectivity", 
        "value": 0.8555, 
        "severity": 0, 
        "severity_value": -0.8555, 
        "code": "worst_score >= -1", 
        "message": "Method scvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: graph_connectivity\n  Worst score: 0.8555%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scvi graph_connectivity", 
        "value": 0.9842, 
        "severity": 0, 
        "severity_value": 0.4921, 
        "code": "best_score <= 2", 
        "message": "Method scvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: graph_connectivity\n  Best score: 0.9842%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score uce graph_connectivity", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method uce performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: graph_connectivity\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score uce graph_connectivity", 
        "value": 0.9741, 
        "severity": 0, 
        "severity_value": 0.48705, 
        "code": "best_score <= 2", 
        "message": "Method uce performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: graph_connectivity\n  Best score: 0.9741%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types_jittered hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types_jittered performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types_jittered hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types_jittered performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method no_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration_batch hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration_batch hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method no_integration_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_batch hvg_overlap", 
        "value": 1, 
        "severity": 0, 
        "severity_value": -1.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: hvg_overlap\n  Worst score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_batch hvg_overlap", 
        "value": 1, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: hvg_overlap\n  Best score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_cell_type hvg_overlap", 
        "value": 0.0722, 
        "severity": 0, 
        "severity_value": -0.0722, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_cell_type performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: hvg_overlap\n  Worst score: 0.0722%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_cell_type hvg_overlap", 
        "value": 0.2821, 
        "severity": 0, 
        "severity_value": 0.14105, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_cell_type performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: hvg_overlap\n  Best score: 0.2821%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_fastmnn hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_fastmnn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_fastmnn hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_fastmnn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_mnn_correct hvg_overlap", 
        "value": -0.4274, 
        "severity": 0, 
        "severity_value": 0.4274, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_mnn_correct performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: hvg_overlap\n  Worst score: -0.4274%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_mnn_correct hvg_overlap", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_mnn_correct performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: hvg_overlap\n  Best score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score bbknn hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method bbknn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score bbknn hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method bbknn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score combat hvg_overlap", 
        "value": 0.0247, 
        "severity": 0, 
        "severity_value": -0.0247, 
        "code": "worst_score >= -1", 
        "message": "Method combat performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: hvg_overlap\n  Worst score: 0.0247%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score combat hvg_overlap", 
        "value": 0.1292, 
        "severity": 0, 
        "severity_value": 0.0646, 
        "code": "best_score <= 2", 
        "message": "Method combat performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: hvg_overlap\n  Best score: 0.1292%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score geneformer hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method geneformer performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score geneformer hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method geneformer performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmony hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method harmony performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmony hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method harmony performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmonypy hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method harmonypy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmonypy hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method harmonypy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score liger hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method liger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score liger hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method liger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score mnnpy hvg_overlap", 
        "value": -1.0321, 
        "severity": 1, 
        "severity_value": 1.0321, 
        "code": "worst_score >= -1", 
        "message": "Method mnnpy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: hvg_overlap\n  Worst score: -1.0321%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score mnnpy hvg_overlap", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method mnnpy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: hvg_overlap\n  Best score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score pyliger hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method pyliger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score pyliger hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method pyliger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scalex hvg_overlap", 
        "value": -1.5964, 
        "severity": 1, 
        "severity_value": 1.5964, 
        "code": "worst_score >= -1", 
        "message": "Method scalex performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: hvg_overlap\n  Worst score: -1.5964%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scalex hvg_overlap", 
        "value": -0.4263, 
        "severity": 0, 
        "severity_value": -0.21315, 
        "code": "best_score <= 2", 
        "message": "Method scalex performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: hvg_overlap\n  Best score: -0.4263%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanorama hvg_overlap", 
        "value": -1.5477, 
        "severity": 1, 
        "severity_value": 1.5477, 
        "code": "worst_score >= -1", 
        "message": "Method scanorama performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: hvg_overlap\n  Worst score: -1.5477%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanorama hvg_overlap", 
        "value": -0.4681, 
        "severity": 0, 
        "severity_value": -0.23405, 
        "code": "best_score <= 2", 
        "message": "Method scanorama performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: hvg_overlap\n  Best score: -0.4681%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanvi hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scanvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanvi hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method scanvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scgpt hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scgpt performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scgpt hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method scgpt performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scimilarity hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scimilarity performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scimilarity hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method scimilarity performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scvi hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scvi hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method scvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score uce hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method uce performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score uce hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method uce performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types isolated_label_asw", 
        "value": 0.9984, 
        "severity": 0, 
        "severity_value": -0.9984, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: isolated_label_asw\n  Worst score: 0.9984%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types isolated_label_asw", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: isolated_label_asw\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types_jittered isolated_label_asw", 
        "value": 0.9995, 
        "severity": 0, 
        "severity_value": -0.9995, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types_jittered performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: isolated_label_asw\n  Worst score: 0.9995%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types_jittered isolated_label_asw", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types_jittered performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: isolated_label_asw\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration isolated_label_asw", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: isolated_label_asw\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration isolated_label_asw", 
        "value": 0.6436, 
        "severity": 0, 
        "severity_value": 0.3218, 
        "code": "best_score <= 2", 
        "message": "Method no_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: isolated_label_asw\n  Best score: 0.6436%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration_batch isolated_label_asw", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: isolated_label_asw\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration_batch isolated_label_asw", 
        "value": 0.3929, 
        "severity": 0, 
        "severity_value": 0.19645, 
        "code": "best_score <= 2", 
        "message": "Method no_integration_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: isolated_label_asw\n  Best score: 0.3929%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration isolated_label_asw", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: isolated_label_asw\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration isolated_label_asw", 
        "value": 0.2389, 
        "severity": 0, 
        "severity_value": 0.11945, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: isolated_label_asw\n  Best score: 0.2389%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_batch isolated_label_asw", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: isolated_label_asw\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_batch isolated_label_asw", 
        "value": 0.2426, 
        "severity": 0, 
        "severity_value": 0.1213, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: isolated_label_asw\n  Best score: 0.2426%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_cell_type isolated_label_asw", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_cell_type performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: isolated_label_asw\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_cell_type isolated_label_asw", 
        "value": 0.6436, 
        "severity": 0, 
        "severity_value": 0.3218, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_cell_type performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: isolated_label_asw\n  Best score: 0.6436%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_fastmnn isolated_label_asw", 
        "value": -0.0999, 
        "severity": 0, 
        "severity_value": 0.0999, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_fastmnn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: isolated_label_asw\n  Worst score: -0.0999%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_fastmnn isolated_label_asw", 
        "value": 0.6382, 
        "severity": 0, 
        "severity_value": 0.3191, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_fastmnn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: isolated_label_asw\n  Best score: 0.6382%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_mnn_correct isolated_label_asw", 
        "value": -0.2936, 
        "severity": 0, 
        "severity_value": 0.2936, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_mnn_correct performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: isolated_label_asw\n  Worst score: -0.2936%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_mnn_correct isolated_label_asw", 
        "value": 0.2712, 
        "severity": 0, 
        "severity_value": 0.1356, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_mnn_correct performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: isolated_label_asw\n  Best score: 0.2712%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score bbknn isolated_label_asw", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method bbknn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: isolated_label_asw\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score bbknn isolated_label_asw", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method bbknn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: isolated_label_asw\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score combat isolated_label_asw", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method combat performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: isolated_label_asw\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score combat isolated_label_asw", 
        "value": 0.4628, 
        "severity": 0, 
        "severity_value": 0.2314, 
        "code": "best_score <= 2", 
        "message": "Method combat performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: isolated_label_asw\n  Best score: 0.4628%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score geneformer isolated_label_asw", 
        "value": -0.1903, 
        "severity": 0, 
        "severity_value": 0.1903, 
        "code": "worst_score >= -1", 
        "message": "Method geneformer performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: isolated_label_asw\n  Worst score: -0.1903%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score geneformer isolated_label_asw", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method geneformer performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: isolated_label_asw\n  Best score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmony isolated_label_asw", 
        "value": -0.0089, 
        "severity": 0, 
        "severity_value": 0.0089, 
        "code": "worst_score >= -1", 
        "message": "Method harmony performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: isolated_label_asw\n  Worst score: -0.0089%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmony isolated_label_asw", 
        "value": 0.5476, 
        "severity": 0, 
        "severity_value": 0.2738, 
        "code": "best_score <= 2", 
        "message": "Method harmony performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: isolated_label_asw\n  Best score: 0.5476%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmonypy isolated_label_asw", 
        "value": -0.0042, 
        "severity": 0, 
        "severity_value": 0.0042, 
        "code": "worst_score >= -1", 
        "message": "Method harmonypy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: isolated_label_asw\n  Worst score: -0.0042%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmonypy isolated_label_asw", 
        "value": 0.5386, 
        "severity": 0, 
        "severity_value": 0.2693, 
        "code": "best_score <= 2", 
        "message": "Method harmonypy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: isolated_label_asw\n  Best score: 0.5386%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score liger isolated_label_asw", 
        "value": -0.3162, 
        "severity": 0, 
        "severity_value": 0.3162, 
        "code": "worst_score >= -1", 
        "message": "Method liger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: isolated_label_asw\n  Worst score: -0.3162%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score liger isolated_label_asw", 
        "value": 0.3888, 
        "severity": 0, 
        "severity_value": 0.1944, 
        "code": "best_score <= 2", 
        "message": "Method liger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: isolated_label_asw\n  Best score: 0.3888%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score mnnpy isolated_label_asw", 
        "value": -0.1725, 
        "severity": 0, 
        "severity_value": 0.1725, 
        "code": "worst_score >= -1", 
        "message": "Method mnnpy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: isolated_label_asw\n  Worst score: -0.1725%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score mnnpy isolated_label_asw", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method mnnpy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: isolated_label_asw\n  Best score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score pyliger isolated_label_asw", 
        "value": -0.3318, 
        "severity": 0, 
        "severity_value": 0.3318, 
        "code": "worst_score >= -1", 
        "message": "Method pyliger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: isolated_label_asw\n  Worst score: -0.3318%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score pyliger isolated_label_asw", 
        "value": 0.392, 
        "severity": 0, 
        "severity_value": 0.196, 
        "code": "best_score <= 2", 
        "message": "Method pyliger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: isolated_label_asw\n  Best score: 0.392%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scalex isolated_label_asw", 
        "value": -0.1189, 
        "severity": 0, 
        "severity_value": 0.1189, 
        "code": "worst_score >= -1", 
        "message": "Method scalex performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: isolated_label_asw\n  Worst score: -0.1189%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scalex isolated_label_asw", 
        "value": 0.4458, 
        "severity": 0, 
        "severity_value": 0.2229, 
        "code": "best_score <= 2", 
        "message": "Method scalex performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: isolated_label_asw\n  Best score: 0.4458%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanorama isolated_label_asw", 
        "value": -0.1811, 
        "severity": 0, 
        "severity_value": 0.1811, 
        "code": "worst_score >= -1", 
        "message": "Method scanorama performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: isolated_label_asw\n  Worst score: -0.1811%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanorama isolated_label_asw", 
        "value": 0.4364, 
        "severity": 0, 
        "severity_value": 0.2182, 
        "code": "best_score <= 2", 
        "message": "Method scanorama performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: isolated_label_asw\n  Best score: 0.4364%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanvi isolated_label_asw", 
        "value": -0.0108, 
        "severity": 0, 
        "severity_value": 0.0108, 
        "code": "worst_score >= -1", 
        "message": "Method scanvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: isolated_label_asw\n  Worst score: -0.0108%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanvi isolated_label_asw", 
        "value": 0.5809, 
        "severity": 0, 
        "severity_value": 0.29045, 
        "code": "best_score <= 2", 
        "message": "Method scanvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: isolated_label_asw\n  Best score: 0.5809%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scgpt isolated_label_asw", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scgpt performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt\n  Metric id: isolated_label_asw\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scgpt isolated_label_asw", 
        "value": 0.2969, 
        "severity": 0, 
        "severity_value": 0.14845, 
        "code": "best_score <= 2", 
        "message": "Method scgpt performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt\n  Metric id: isolated_label_asw\n  Best score: 0.2969%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scimilarity isolated_label_asw", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scimilarity performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: isolated_label_asw\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scimilarity isolated_label_asw", 
        "value": 0.5522, 
        "severity": 0, 
        "severity_value": 0.2761, 
        "code": "best_score <= 2", 
        "message": "Method scimilarity performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: isolated_label_asw\n  Best score: 0.5522%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scvi isolated_label_asw", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: isolated_label_asw\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scvi isolated_label_asw", 
        "value": 0.5224, 
        "severity": 0, 
        "severity_value": 0.2612, 
        "code": "best_score <= 2", 
        "message": "Method scvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: isolated_label_asw\n  Best score: 0.5224%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score uce isolated_label_asw", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method uce performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: isolated_label_asw\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score uce isolated_label_asw", 
        "value": 0.1542, 
        "severity": 0, 
        "severity_value": 0.0771, 
        "code": "best_score <= 2", 
        "message": "Method uce performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: isolated_label_asw\n  Best score: 0.1542%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types isolated_label_f1", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: isolated_label_f1\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types isolated_label_f1", 
        "value": 1, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: isolated_label_f1\n  Best score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types_jittered isolated_label_f1", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types_jittered performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: isolated_label_f1\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types_jittered isolated_label_f1", 
        "value": 1, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types_jittered performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: isolated_label_f1\n  Best score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration isolated_label_f1", 
        "value": 0.7886, 
        "severity": 0, 
        "severity_value": 0.3943, 
        "code": "best_score <= 2", 
        "message": "Method no_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: isolated_label_f1\n  Best score: 0.7886%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration_batch isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration_batch isolated_label_f1", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method no_integration_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: isolated_label_f1\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration isolated_label_f1", 
        "value": 0.0057, 
        "severity": 0, 
        "severity_value": 0.00285, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: isolated_label_f1\n  Best score: 0.0057%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_batch isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_batch isolated_label_f1", 
        "value": 0.0907, 
        "severity": 0, 
        "severity_value": 0.04535, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: isolated_label_f1\n  Best score: 0.0907%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_cell_type isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_cell_type performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_cell_type isolated_label_f1", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_cell_type performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: isolated_label_f1\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_fastmnn isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_fastmnn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_fastmnn isolated_label_f1", 
        "value": 0.9504, 
        "severity": 0, 
        "severity_value": 0.4752, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_fastmnn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: isolated_label_f1\n  Best score: 0.9504%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_mnn_correct isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_mnn_correct performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_mnn_correct isolated_label_f1", 
        "value": 0.8385, 
        "severity": 0, 
        "severity_value": 0.41925, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_mnn_correct performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: isolated_label_f1\n  Best score: 0.8385%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score bbknn isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method bbknn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score bbknn isolated_label_f1", 
        "value": 0.8138, 
        "severity": 0, 
        "severity_value": 0.4069, 
        "code": "best_score <= 2", 
        "message": "Method bbknn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: isolated_label_f1\n  Best score: 0.8138%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score combat isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method combat performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score combat isolated_label_f1", 
        "value": 0.8379, 
        "severity": 0, 
        "severity_value": 0.41895, 
        "code": "best_score <= 2", 
        "message": "Method combat performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: isolated_label_f1\n  Best score: 0.8379%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score geneformer isolated_label_f1", 
        "value": -0.5447, 
        "severity": 0, 
        "severity_value": 0.5447, 
        "code": "worst_score >= -1", 
        "message": "Method geneformer performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: isolated_label_f1\n  Worst score: -0.5447%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score geneformer isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method geneformer performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: isolated_label_f1\n  Best score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmony isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method harmony performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmony isolated_label_f1", 
        "value": 0.7688, 
        "severity": 0, 
        "severity_value": 0.3844, 
        "code": "best_score <= 2", 
        "message": "Method harmony performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: isolated_label_f1\n  Best score: 0.7688%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmonypy isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method harmonypy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmonypy isolated_label_f1", 
        "value": 0.7683, 
        "severity": 0, 
        "severity_value": 0.38415, 
        "code": "best_score <= 2", 
        "message": "Method harmonypy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: isolated_label_f1\n  Best score: 0.7683%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score liger isolated_label_f1", 
        "value": -2.3034, 
        "severity": 2, 
        "severity_value": 2.3034, 
        "code": "worst_score >= -1", 
        "message": "Method liger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: isolated_label_f1\n  Worst score: -2.3034%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score liger isolated_label_f1", 
        "value": 0.7566, 
        "severity": 0, 
        "severity_value": 0.3783, 
        "code": "best_score <= 2", 
        "message": "Method liger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: isolated_label_f1\n  Best score: 0.7566%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score mnnpy isolated_label_f1", 
        "value": -0.0063, 
        "severity": 0, 
        "severity_value": 0.0063, 
        "code": "worst_score >= -1", 
        "message": "Method mnnpy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: isolated_label_f1\n  Worst score: -0.0063%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score mnnpy isolated_label_f1", 
        "value": 0.0536, 
        "severity": 0, 
        "severity_value": 0.0268, 
        "code": "best_score <= 2", 
        "message": "Method mnnpy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: isolated_label_f1\n  Best score: 0.0536%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score pyliger isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method pyliger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score pyliger isolated_label_f1", 
        "value": 5.0727, 
        "severity": 2, 
        "severity_value": 2.53635, 
        "code": "best_score <= 2", 
        "message": "Method pyliger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: isolated_label_f1\n  Best score: 5.0727%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scalex isolated_label_f1", 
        "value": -0.0004, 
        "severity": 0, 
        "severity_value": 0.0004, 
        "code": "worst_score >= -1", 
        "message": "Method scalex performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: isolated_label_f1\n  Worst score: -0.0004%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scalex isolated_label_f1", 
        "value": 0.8296, 
        "severity": 0, 
        "severity_value": 0.4148, 
        "code": "best_score <= 2", 
        "message": "Method scalex performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: isolated_label_f1\n  Best score: 0.8296%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanorama isolated_label_f1", 
        "value": -0.01, 
        "severity": 0, 
        "severity_value": 0.01, 
        "code": "worst_score >= -1", 
        "message": "Method scanorama performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: isolated_label_f1\n  Worst score: -0.01%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanorama isolated_label_f1", 
        "value": 21.5804, 
        "severity": 3, 
        "severity_value": 10.7902, 
        "code": "best_score <= 2", 
        "message": "Method scanorama performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: isolated_label_f1\n  Best score: 21.5804%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanvi isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scanvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanvi isolated_label_f1", 
        "value": 0.905, 
        "severity": 0, 
        "severity_value": 0.4525, 
        "code": "best_score <= 2", 
        "message": "Method scanvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: isolated_label_f1\n  Best score: 0.905%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scgpt isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scgpt performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scgpt isolated_label_f1", 
        "value": 0.8061, 
        "severity": 0, 
        "severity_value": 0.40305, 
        "code": "best_score <= 2", 
        "message": "Method scgpt performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt\n  Metric id: isolated_label_f1\n  Best score: 0.8061%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scimilarity isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scimilarity performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scimilarity isolated_label_f1", 
        "value": 0.7484, 
        "severity": 0, 
        "severity_value": 0.3742, 
        "code": "best_score <= 2", 
        "message": "Method scimilarity performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: isolated_label_f1\n  Best score: 0.7484%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scvi isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scvi isolated_label_f1", 
        "value": 0.8261, 
        "severity": 0, 
        "severity_value": 0.41305, 
        "code": "best_score <= 2", 
        "message": "Method scvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: isolated_label_f1\n  Best score: 0.8261%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score uce isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method uce performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score uce isolated_label_f1", 
        "value": 0.7221, 
        "severity": 0, 
        "severity_value": 0.36105, 
        "code": "best_score <= 2", 
        "message": "Method uce performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: isolated_label_f1\n  Best score: 0.7221%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types kbet", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: kbet\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types_jittered kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types_jittered performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types_jittered kbet", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types_jittered performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: kbet\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration kbet", 
        "value": 0.7181, 
        "severity": 0, 
        "severity_value": 0.35905, 
        "code": "best_score <= 2", 
        "message": "Method no_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: kbet\n  Best score: 0.7181%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration_batch kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration_batch kbet", 
        "value": 0.3963, 
        "severity": 0, 
        "severity_value": 0.19815, 
        "code": "best_score <= 2", 
        "message": "Method no_integration_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: kbet\n  Best score: 0.3963%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration kbet", 
        "value": 0.3985, 
        "severity": 0, 
        "severity_value": 0.19925, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: kbet\n  Best score: 0.3985%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_batch kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_batch kbet", 
        "value": 0.1072, 
        "severity": 0, 
        "severity_value": 0.0536, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: kbet\n  Best score: 0.1072%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_cell_type kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_cell_type performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_cell_type kbet", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_cell_type performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: kbet\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_fastmnn kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_fastmnn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_fastmnn kbet", 
        "value": 0.841, 
        "severity": 0, 
        "severity_value": 0.4205, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_fastmnn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: kbet\n  Best score: 0.841%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_mnn_correct kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_mnn_correct performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_mnn_correct kbet", 
        "value": 0.3024, 
        "severity": 0, 
        "severity_value": 0.1512, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_mnn_correct performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: kbet\n  Best score: 0.3024%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score bbknn kbet", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method bbknn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: kbet\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score bbknn kbet", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method bbknn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: kbet\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score combat kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method combat performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score combat kbet", 
        "value": 0.6605, 
        "severity": 0, 
        "severity_value": 0.33025, 
        "code": "best_score <= 2", 
        "message": "Method combat performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: kbet\n  Best score: 0.6605%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score geneformer kbet", 
        "value": -0.0077, 
        "severity": 0, 
        "severity_value": 0.0077, 
        "code": "worst_score >= -1", 
        "message": "Method geneformer performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: kbet\n  Worst score: -0.0077%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score geneformer kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method geneformer performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: kbet\n  Best score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmony kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method harmony performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmony kbet", 
        "value": 0.7565, 
        "severity": 0, 
        "severity_value": 0.37825, 
        "code": "best_score <= 2", 
        "message": "Method harmony performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: kbet\n  Best score: 0.7565%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmonypy kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method harmonypy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmonypy kbet", 
        "value": 0.791, 
        "severity": 0, 
        "severity_value": 0.3955, 
        "code": "best_score <= 2", 
        "message": "Method harmonypy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: kbet\n  Best score: 0.791%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score liger kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method liger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score liger kbet", 
        "value": 0.7846, 
        "severity": 0, 
        "severity_value": 0.3923, 
        "code": "best_score <= 2", 
        "message": "Method liger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: kbet\n  Best score: 0.7846%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score mnnpy kbet", 
        "value": -0.0076, 
        "severity": 0, 
        "severity_value": 0.0076, 
        "code": "worst_score >= -1", 
        "message": "Method mnnpy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: kbet\n  Worst score: -0.0076%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score mnnpy kbet", 
        "value": 0.0903, 
        "severity": 0, 
        "severity_value": 0.04515, 
        "code": "best_score <= 2", 
        "message": "Method mnnpy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: kbet\n  Best score: 0.0903%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score pyliger kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method pyliger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score pyliger kbet", 
        "value": 0.8028, 
        "severity": 0, 
        "severity_value": 0.4014, 
        "code": "best_score <= 2", 
        "message": "Method pyliger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: kbet\n  Best score: 0.8028%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scalex kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scalex performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scalex kbet", 
        "value": 0.6283, 
        "severity": 0, 
        "severity_value": 0.31415, 
        "code": "best_score <= 2", 
        "message": "Method scalex performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: kbet\n  Best score: 0.6283%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanorama kbet", 
        "value": -166.4788, 
        "severity": 3, 
        "severity_value": 166.4788, 
        "code": "worst_score >= -1", 
        "message": "Method scanorama performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: kbet\n  Worst score: -166.4788%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanorama kbet", 
        "value": 0.1159, 
        "severity": 0, 
        "severity_value": 0.05795, 
        "code": "best_score <= 2", 
        "message": "Method scanorama performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: kbet\n  Best score: 0.1159%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanvi kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scanvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanvi kbet", 
        "value": 0.8012, 
        "severity": 0, 
        "severity_value": 0.4006, 
        "code": "best_score <= 2", 
        "message": "Method scanvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: kbet\n  Best score: 0.8012%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scgpt kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scgpt performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scgpt kbet", 
        "value": 0.3579, 
        "severity": 0, 
        "severity_value": 0.17895, 
        "code": "best_score <= 2", 
        "message": "Method scgpt performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt\n  Metric id: kbet\n  Best score: 0.3579%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scimilarity kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scimilarity performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scimilarity kbet", 
        "value": 0.3696, 
        "severity": 0, 
        "severity_value": 0.1848, 
        "code": "best_score <= 2", 
        "message": "Method scimilarity performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: kbet\n  Best score: 0.3696%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scvi kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scvi kbet", 
        "value": 0.8033, 
        "severity": 0, 
        "severity_value": 0.40165, 
        "code": "best_score <= 2", 
        "message": "Method scvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: kbet\n  Best score: 0.8033%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score uce kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method uce performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score uce kbet", 
        "value": 0.2809, 
        "severity": 0, 
        "severity_value": 0.14045, 
        "code": "best_score <= 2", 
        "message": "Method uce performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: kbet\n  Best score: 0.2809%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types ilisi", 
        "value": 0.148, 
        "severity": 0, 
        "severity_value": -0.148, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: ilisi\n  Worst score: 0.148%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types ilisi", 
        "value": 0.9498, 
        "severity": 0, 
        "severity_value": 0.4749, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: ilisi\n  Best score: 0.9498%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types_jittered ilisi", 
        "value": 0.1474, 
        "severity": 0, 
        "severity_value": -0.1474, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types_jittered performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: ilisi\n  Worst score: 0.1474%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types_jittered ilisi", 
        "value": 0.9395, 
        "severity": 0, 
        "severity_value": 0.46975, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types_jittered performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: ilisi\n  Best score: 0.9395%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration ilisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: ilisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration ilisi", 
        "value": 0.1489, 
        "severity": 0, 
        "severity_value": 0.07445, 
        "code": "best_score <= 2", 
        "message": "Method no_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: ilisi\n  Best score: 0.1489%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration_batch ilisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: ilisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration_batch ilisi", 
        "value": 0.0097, 
        "severity": 0, 
        "severity_value": 0.00485, 
        "code": "best_score <= 2", 
        "message": "Method no_integration_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: ilisi\n  Best score: 0.0097%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration ilisi", 
        "value": 1, 
        "severity": 0, 
        "severity_value": -1.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: ilisi\n  Worst score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration ilisi", 
        "value": 1, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: ilisi\n  Best score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_batch ilisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: ilisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_batch ilisi", 
        "value": 0.1491, 
        "severity": 0, 
        "severity_value": 0.07455, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: ilisi\n  Best score: 0.1491%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_cell_type ilisi", 
        "value": 0.2922, 
        "severity": 0, 
        "severity_value": -0.2922, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_cell_type performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: ilisi\n  Worst score: 0.2922%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_cell_type ilisi", 
        "value": 0.9645, 
        "severity": 0, 
        "severity_value": 0.48225, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_cell_type performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: ilisi\n  Best score: 0.9645%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_fastmnn ilisi", 
        "value": 0.1019, 
        "severity": 0, 
        "severity_value": -0.1019, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_fastmnn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: ilisi\n  Worst score: 0.1019%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_fastmnn ilisi", 
        "value": 0.5602, 
        "severity": 0, 
        "severity_value": 0.2801, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_fastmnn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: ilisi\n  Best score: 0.5602%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_mnn_correct ilisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_mnn_correct performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: ilisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_mnn_correct ilisi", 
        "value": 0.655, 
        "severity": 0, 
        "severity_value": 0.3275, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_mnn_correct performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: ilisi\n  Best score: 0.655%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score bbknn ilisi", 
        "value": 0.6965, 
        "severity": 0, 
        "severity_value": -0.6965, 
        "code": "worst_score >= -1", 
        "message": "Method bbknn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: ilisi\n  Worst score: 0.6965%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score bbknn ilisi", 
        "value": 35.2297, 
        "severity": 3, 
        "severity_value": 17.61485, 
        "code": "best_score <= 2", 
        "message": "Method bbknn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: ilisi\n  Best score: 35.2297%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score combat ilisi", 
        "value": -0.0689, 
        "severity": 0, 
        "severity_value": 0.0689, 
        "code": "worst_score >= -1", 
        "message": "Method combat performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: ilisi\n  Worst score: -0.0689%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score combat ilisi", 
        "value": 0.333, 
        "severity": 0, 
        "severity_value": 0.1665, 
        "code": "best_score <= 2", 
        "message": "Method combat performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: ilisi\n  Best score: 0.333%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score geneformer ilisi", 
        "value": -0.017, 
        "severity": 0, 
        "severity_value": 0.017, 
        "code": "worst_score >= -1", 
        "message": "Method geneformer performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: ilisi\n  Worst score: -0.017%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score geneformer ilisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method geneformer performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: ilisi\n  Best score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmony ilisi", 
        "value": 0.1184, 
        "severity": 0, 
        "severity_value": -0.1184, 
        "code": "worst_score >= -1", 
        "message": "Method harmony performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: ilisi\n  Worst score: 0.1184%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmony ilisi", 
        "value": 0.6927, 
        "severity": 0, 
        "severity_value": 0.34635, 
        "code": "best_score <= 2", 
        "message": "Method harmony performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: ilisi\n  Best score: 0.6927%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmonypy ilisi", 
        "value": 0.149, 
        "severity": 0, 
        "severity_value": -0.149, 
        "code": "worst_score >= -1", 
        "message": "Method harmonypy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: ilisi\n  Worst score: 0.149%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmonypy ilisi", 
        "value": 0.6935, 
        "severity": 0, 
        "severity_value": 0.34675, 
        "code": "best_score <= 2", 
        "message": "Method harmonypy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: ilisi\n  Best score: 0.6935%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score liger ilisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method liger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: ilisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score liger ilisi", 
        "value": 0.8821, 
        "severity": 0, 
        "severity_value": 0.44105, 
        "code": "best_score <= 2", 
        "message": "Method liger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: ilisi\n  Best score: 0.8821%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score mnnpy ilisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method mnnpy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: ilisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score mnnpy ilisi", 
        "value": 0.6087, 
        "severity": 0, 
        "severity_value": 0.30435, 
        "code": "best_score <= 2", 
        "message": "Method mnnpy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: ilisi\n  Best score: 0.6087%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score pyliger ilisi", 
        "value": 0.4637, 
        "severity": 0, 
        "severity_value": -0.4637, 
        "code": "worst_score >= -1", 
        "message": "Method pyliger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: ilisi\n  Worst score: 0.4637%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score pyliger ilisi", 
        "value": 0.8847, 
        "severity": 0, 
        "severity_value": 0.44235, 
        "code": "best_score <= 2", 
        "message": "Method pyliger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: ilisi\n  Best score: 0.8847%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scalex ilisi", 
        "value": 3.8012e-15, 
        "severity": 0, 
        "severity_value": -3.8012e-15, 
        "code": "worst_score >= -1", 
        "message": "Method scalex performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: ilisi\n  Worst score: 3.8012e-15%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scalex ilisi", 
        "value": 0.6429, 
        "severity": 0, 
        "severity_value": 0.32145, 
        "code": "best_score <= 2", 
        "message": "Method scalex performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: ilisi\n  Best score: 0.6429%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanorama ilisi", 
        "value": 1.9006e-15, 
        "severity": 0, 
        "severity_value": -1.9006e-15, 
        "code": "worst_score >= -1", 
        "message": "Method scanorama performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: ilisi\n  Worst score: 1.9006e-15%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanorama ilisi", 
        "value": 0.9749, 
        "severity": 0, 
        "severity_value": 0.48745, 
        "code": "best_score <= 2", 
        "message": "Method scanorama performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: ilisi\n  Best score: 0.9749%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanvi ilisi", 
        "value": 1.9006e-15, 
        "severity": 0, 
        "severity_value": -1.9006e-15, 
        "code": "worst_score >= -1", 
        "message": "Method scanvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: ilisi\n  Worst score: 1.9006e-15%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanvi ilisi", 
        "value": 0.6498, 
        "severity": 0, 
        "severity_value": 0.3249, 
        "code": "best_score <= 2", 
        "message": "Method scanvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: ilisi\n  Best score: 0.6498%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scgpt ilisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scgpt performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt\n  Metric id: ilisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scgpt ilisi", 
        "value": 0.479, 
        "severity": 0, 
        "severity_value": 0.2395, 
        "code": "best_score <= 2", 
        "message": "Method scgpt performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt\n  Metric id: ilisi\n  Best score: 0.479%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scimilarity ilisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scimilarity performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: ilisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scimilarity ilisi", 
        "value": 0.472, 
        "severity": 0, 
        "severity_value": 0.236, 
        "code": "best_score <= 2", 
        "message": "Method scimilarity performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: ilisi\n  Best score: 0.472%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scvi ilisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: ilisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scvi ilisi", 
        "value": 0.6484, 
        "severity": 0, 
        "severity_value": 0.3242, 
        "code": "best_score <= 2", 
        "message": "Method scvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: ilisi\n  Best score: 0.6484%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score uce ilisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method uce performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: ilisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score uce ilisi", 
        "value": 0.4651, 
        "severity": 0, 
        "severity_value": 0.23255, 
        "code": "best_score <= 2", 
        "message": "Method uce performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: ilisi\n  Best score: 0.4651%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types clisi", 
        "value": 1, 
        "severity": 0, 
        "severity_value": -1.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: clisi\n  Worst score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types clisi", 
        "value": 1, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: clisi\n  Best score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types_jittered clisi", 
        "value": 1, 
        "severity": 0, 
        "severity_value": -1.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types_jittered performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: clisi\n  Worst score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types_jittered clisi", 
        "value": 1, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types_jittered performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: clisi\n  Best score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration clisi", 
        "value": 0.9618, 
        "severity": 0, 
        "severity_value": -0.9618, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: clisi\n  Worst score: 0.9618%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration clisi", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method no_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: clisi\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration_batch clisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: clisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration_batch clisi", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method no_integration_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: clisi\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration clisi", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: clisi\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration clisi", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: clisi\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_batch clisi", 
        "value": 0.0165, 
        "severity": 0, 
        "severity_value": -0.0165, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: clisi\n  Worst score: 0.0165%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_batch clisi", 
        "value": 0.423, 
        "severity": 0, 
        "severity_value": 0.2115, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: clisi\n  Best score: 0.423%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_cell_type clisi", 
        "value": 0.9619, 
        "severity": 0, 
        "severity_value": -0.9619, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_cell_type performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: clisi\n  Worst score: 0.9619%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_cell_type clisi", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_cell_type performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: clisi\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_fastmnn clisi", 
        "value": 0.904, 
        "severity": 0, 
        "severity_value": -0.904, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_fastmnn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: clisi\n  Worst score: 0.904%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_fastmnn clisi", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_fastmnn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: clisi\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_mnn_correct clisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_mnn_correct performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: clisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_mnn_correct clisi", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_mnn_correct performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: clisi\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score bbknn clisi", 
        "value": 0.3857, 
        "severity": 0, 
        "severity_value": -0.3857, 
        "code": "worst_score >= -1", 
        "message": "Method bbknn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: clisi\n  Worst score: 0.3857%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score bbknn clisi", 
        "value": 0.9856, 
        "severity": 0, 
        "severity_value": 0.4928, 
        "code": "best_score <= 2", 
        "message": "Method bbknn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: clisi\n  Best score: 0.9856%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score combat clisi", 
        "value": 0.9444, 
        "severity": 0, 
        "severity_value": -0.9444, 
        "code": "worst_score >= -1", 
        "message": "Method combat performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: clisi\n  Worst score: 0.9444%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score combat clisi", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method combat performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: clisi\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score geneformer clisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method geneformer performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: clisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score geneformer clisi", 
        "value": 0.0647, 
        "severity": 0, 
        "severity_value": 0.03235, 
        "code": "best_score <= 2", 
        "message": "Method geneformer performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: clisi\n  Best score: 0.0647%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmony clisi", 
        "value": 0.9051, 
        "severity": 0, 
        "severity_value": -0.9051, 
        "code": "worst_score >= -1", 
        "message": "Method harmony performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: clisi\n  Worst score: 0.9051%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmony clisi", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method harmony performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: clisi\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmonypy clisi", 
        "value": 0.9012, 
        "severity": 0, 
        "severity_value": -0.9012, 
        "code": "worst_score >= -1", 
        "message": "Method harmonypy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: clisi\n  Worst score: 0.9012%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmonypy clisi", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method harmonypy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: clisi\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score liger clisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method liger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: clisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score liger clisi", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method liger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: clisi\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score mnnpy clisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method mnnpy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: clisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score mnnpy clisi", 
        "value": 0.5957, 
        "severity": 0, 
        "severity_value": 0.29785, 
        "code": "best_score <= 2", 
        "message": "Method mnnpy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: clisi\n  Best score: 0.5957%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score pyliger clisi", 
        "value": 0.5892, 
        "severity": 0, 
        "severity_value": -0.5892, 
        "code": "worst_score >= -1", 
        "message": "Method pyliger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: clisi\n  Worst score: 0.5892%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score pyliger clisi", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method pyliger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: clisi\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scalex clisi", 
        "value": 0.6497, 
        "severity": 0, 
        "severity_value": -0.6497, 
        "code": "worst_score >= -1", 
        "message": "Method scalex performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: clisi\n  Worst score: 0.6497%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scalex clisi", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method scalex performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: clisi\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanorama clisi", 
        "value": 0.0142, 
        "severity": 0, 
        "severity_value": -0.0142, 
        "code": "worst_score >= -1", 
        "message": "Method scanorama performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: clisi\n  Worst score: 0.0142%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanorama clisi", 
        "value": 0.5835, 
        "severity": 0, 
        "severity_value": 0.29175, 
        "code": "best_score <= 2", 
        "message": "Method scanorama performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: clisi\n  Best score: 0.5835%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanvi clisi", 
        "value": 0.9852, 
        "severity": 0, 
        "severity_value": -0.9852, 
        "code": "worst_score >= -1", 
        "message": "Method scanvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: clisi\n  Worst score: 0.9852%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanvi clisi", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method scanvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: clisi\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scgpt clisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scgpt performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt\n  Metric id: clisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scgpt clisi", 
        "value": 0.9974, 
        "severity": 0, 
        "severity_value": 0.4987, 
        "code": "best_score <= 2", 
        "message": "Method scgpt performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt\n  Metric id: clisi\n  Best score: 0.9974%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scimilarity clisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scimilarity performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: clisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scimilarity clisi", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method scimilarity performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: clisi\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scvi clisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: clisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scvi clisi", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method scvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: clisi\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score uce clisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method uce performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: clisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score uce clisi", 
        "value": 0.9957, 
        "severity": 0, 
        "severity_value": 0.49785, 
        "code": "best_score <= 2", 
        "message": "Method uce performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: clisi\n  Best score: 0.9957%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types pcr", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: pcr\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types pcr", 
        "value": 0.7116, 
        "severity": 0, 
        "severity_value": 0.3558, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: pcr\n  Best score: 0.7116%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types_jittered pcr", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types_jittered performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: pcr\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types_jittered pcr", 
        "value": 0.7115, 
        "severity": 0, 
        "severity_value": 0.35575, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types_jittered performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: pcr\n  Best score: 0.7115%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration pcr", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: pcr\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration pcr", 
        "value": 3.9609e-07, 
        "severity": 0, 
        "severity_value": 1.98045e-07, 
        "code": "best_score <= 2", 
        "message": "Method no_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: pcr\n  Best score: 3.9609e-07%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration_batch pcr", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: pcr\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration_batch pcr", 
        "value": 1, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method no_integration_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: pcr\n  Best score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration pcr", 
        "value": 0.9965, 
        "severity": 0, 
        "severity_value": -0.9965, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: pcr\n  Worst score: 0.9965%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration pcr", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: pcr\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_batch pcr", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: pcr\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_batch pcr", 
        "value": 0.0001, 
        "severity": 0, 
        "severity_value": 5e-05, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: pcr\n  Best score: 0.0001%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_cell_type pcr", 
        "value": 0.2351, 
        "severity": 0, 
        "severity_value": -0.2351, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_cell_type performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: pcr\n  Worst score: 0.2351%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_cell_type pcr", 
        "value": 0.7787, 
        "severity": 0, 
        "severity_value": 0.38935, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_cell_type performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: pcr\n  Best score: 0.7787%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_fastmnn pcr", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_fastmnn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: pcr\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_fastmnn pcr", 
        "value": 0.5603, 
        "severity": 0, 
        "severity_value": 0.28015, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_fastmnn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: pcr\n  Best score: 0.5603%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_mnn_correct pcr", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_mnn_correct performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: pcr\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_mnn_correct pcr", 
        "value": 0.5975, 
        "severity": 0, 
        "severity_value": 0.29875, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_mnn_correct performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: pcr\n  Best score: 0.5975%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score bbknn pcr", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method bbknn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: pcr\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score bbknn pcr", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method bbknn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: pcr\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score combat pcr", 
        "value": 0.9996, 
        "severity": 0, 
        "severity_value": -0.9996, 
        "code": "worst_score >= -1", 
        "message": "Method combat performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: pcr\n  Worst score: 0.9996%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score combat pcr", 
        "value": 1.0006, 
        "severity": 0, 
        "severity_value": 0.5003, 
        "code": "best_score <= 2", 
        "message": "Method combat performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: pcr\n  Best score: 1.0006%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score geneformer pcr", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method geneformer performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: pcr\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score geneformer pcr", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method geneformer performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: pcr\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmony pcr", 
        "value": 0.4631, 
        "severity": 0, 
        "severity_value": -0.4631, 
        "code": "worst_score >= -1", 
        "message": "Method harmony performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: pcr\n  Worst score: 0.4631%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmony pcr", 
        "value": 0.6953, 
        "severity": 0, 
        "severity_value": 0.34765, 
        "code": "best_score <= 2", 
        "message": "Method harmony performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: pcr\n  Best score: 0.6953%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmonypy pcr", 
        "value": 0.4442, 
        "severity": 0, 
        "severity_value": -0.4442, 
        "code": "worst_score >= -1", 
        "message": "Method harmonypy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: pcr\n  Worst score: 0.4442%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmonypy pcr", 
        "value": 0.7146, 
        "severity": 0, 
        "severity_value": 0.3573, 
        "code": "best_score <= 2", 
        "message": "Method harmonypy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: pcr\n  Best score: 0.7146%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score liger pcr", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method liger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: pcr\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score liger pcr", 
        "value": 0.8951, 
        "severity": 0, 
        "severity_value": 0.44755, 
        "code": "best_score <= 2", 
        "message": "Method liger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: pcr\n  Best score: 0.8951%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score mnnpy pcr", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method mnnpy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: pcr\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score mnnpy pcr", 
        "value": 0.7488, 
        "severity": 0, 
        "severity_value": 0.3744, 
        "code": "best_score <= 2", 
        "message": "Method mnnpy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: pcr\n  Best score: 0.7488%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score pyliger pcr", 
        "value": 0.5255, 
        "severity": 0, 
        "severity_value": -0.5255, 
        "code": "worst_score >= -1", 
        "message": "Method pyliger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: pcr\n  Worst score: 0.5255%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score pyliger pcr", 
        "value": 0.9193, 
        "severity": 0, 
        "severity_value": 0.45965, 
        "code": "best_score <= 2", 
        "message": "Method pyliger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: pcr\n  Best score: 0.9193%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scalex pcr", 
        "value": 0.9784, 
        "severity": 0, 
        "severity_value": -0.9784, 
        "code": "worst_score >= -1", 
        "message": "Method scalex performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: pcr\n  Worst score: 0.9784%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scalex pcr", 
        "value": 0.9999, 
        "severity": 0, 
        "severity_value": 0.49995, 
        "code": "best_score <= 2", 
        "message": "Method scalex performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: pcr\n  Best score: 0.9999%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanorama pcr", 
        "value": -9.4281e-07, 
        "severity": 0, 
        "severity_value": 9.4281e-07, 
        "code": "worst_score >= -1", 
        "message": "Method scanorama performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: pcr\n  Worst score: -9.4281e-07%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanorama pcr", 
        "value": 0.9994, 
        "severity": 0, 
        "severity_value": 0.4997, 
        "code": "best_score <= 2", 
        "message": "Method scanorama performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: pcr\n  Best score: 0.9994%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanvi pcr", 
        "value": 0.0342, 
        "severity": 0, 
        "severity_value": -0.0342, 
        "code": "worst_score >= -1", 
        "message": "Method scanvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: pcr\n  Worst score: 0.0342%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanvi pcr", 
        "value": 0.7928, 
        "severity": 0, 
        "severity_value": 0.3964, 
        "code": "best_score <= 2", 
        "message": "Method scanvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: pcr\n  Best score: 0.7928%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scgpt pcr", 
        "value": -2.6415e-07, 
        "severity": 0, 
        "severity_value": 2.6415e-07, 
        "code": "worst_score >= -1", 
        "message": "Method scgpt performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt\n  Metric id: pcr\n  Worst score: -2.6415e-07%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scgpt pcr", 
        "value": 0.1905, 
        "severity": 0, 
        "severity_value": 0.09525, 
        "code": "best_score <= 2", 
        "message": "Method scgpt performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt\n  Metric id: pcr\n  Best score: 0.1905%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scimilarity pcr", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scimilarity performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: pcr\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scimilarity pcr", 
        "value": 0.4924, 
        "severity": 0, 
        "severity_value": 0.2462, 
        "code": "best_score <= 2", 
        "message": "Method scimilarity performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: pcr\n  Best score: 0.4924%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scvi pcr", 
        "value": 0.2106, 
        "severity": 0, 
        "severity_value": -0.2106, 
        "code": "worst_score >= -1", 
        "message": "Method scvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: pcr\n  Worst score: 0.2106%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scvi pcr", 
        "value": 0.9368, 
        "severity": 0, 
        "severity_value": 0.4684, 
        "code": "best_score <= 2", 
        "message": "Method scvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: pcr\n  Best score: 0.9368%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score uce pcr", 
        "value": -2.6415e-07, 
        "severity": 0, 
        "severity_value": 2.6415e-07, 
        "code": "worst_score >= -1", 
        "message": "Method uce performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: pcr\n  Worst score: -2.6415e-07%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score uce pcr", 
        "value": 0.2141, 
        "severity": 0, 
        "severity_value": 0.10705, 
        "code": "best_score <= 2", 
        "message": "Method uce performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: pcr\n  Best score: 0.2141%\n"
    }
]