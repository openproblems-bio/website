[
    {
        "task_id": "task_batch_integration", 
        "category": "Task info", 
        "name": "Pct 'task_id' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing([task_info], field)", 
        "message": "Task metadata field 'task_id' should be defined\n  Task id: task_batch_integration\n  Field: task_id\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Task info", 
        "name": "Pct 'task_name' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing([task_info], field)", 
        "message": "Task metadata field 'task_name' should be defined\n  Task id: task_batch_integration\n  Field: task_name\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Task info", 
        "name": "Pct 'task_summary' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing([task_info], field)", 
        "message": "Task metadata field 'task_summary' should be defined\n  Task id: task_batch_integration\n  Field: task_summary\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Task info", 
        "name": "Pct 'task_description' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing([task_info], field)", 
        "message": "Task metadata field 'task_description' should be defined\n  Task id: task_batch_integration\n  Field: task_description\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Method info", 
        "name": "Pct 'task_id' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(method_info, field)", 
        "message": "Method metadata field 'task_id' should be defined\n  Task id: task_batch_integration\n  Field: task_id\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Method info", 
        "name": "Pct 'commit_sha' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(method_info, field)", 
        "message": "Method metadata field 'commit_sha' should be defined\n  Task id: task_batch_integration\n  Field: commit_sha\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Method info", 
        "name": "Pct 'method_id' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(method_info, field)", 
        "message": "Method metadata field 'method_id' should be defined\n  Task id: task_batch_integration\n  Field: method_id\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Method info", 
        "name": "Pct 'method_name' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(method_info, field)", 
        "message": "Method metadata field 'method_name' should be defined\n  Task id: task_batch_integration\n  Field: method_name\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Method info", 
        "name": "Pct 'method_summary' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(method_info, field)", 
        "message": "Method metadata field 'method_summary' should be defined\n  Task id: task_batch_integration\n  Field: method_summary\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Method info", 
        "name": "Pct 'paper_reference' missing", 
        "value": 0.7083333333333334, 
        "severity": 2, 
        "severity_value": 3.0, 
        "code": "percent_missing(method_info, field)", 
        "message": "Method metadata field 'paper_reference' should be defined\n  Task id: task_batch_integration\n  Field: paper_reference\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Method info", 
        "name": "Pct 'is_baseline' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(method_info, field)", 
        "message": "Method metadata field 'is_baseline' should be defined\n  Task id: task_batch_integration\n  Field: is_baseline\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Metric info", 
        "name": "Pct 'task_id' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(metric_info, field)", 
        "message": "Metric metadata field 'task_id' should be defined\n  Task id: task_batch_integration\n  Field: task_id\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Metric info", 
        "name": "Pct 'commit_sha' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(metric_info, field)", 
        "message": "Metric metadata field 'commit_sha' should be defined\n  Task id: task_batch_integration\n  Field: commit_sha\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Metric info", 
        "name": "Pct 'metric_id' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(metric_info, field)", 
        "message": "Metric metadata field 'metric_id' should be defined\n  Task id: task_batch_integration\n  Field: metric_id\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Metric info", 
        "name": "Pct 'metric_name' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(metric_info, field)", 
        "message": "Metric metadata field 'metric_name' should be defined\n  Task id: task_batch_integration\n  Field: metric_name\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Metric info", 
        "name": "Pct 'metric_summary' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(metric_info, field)", 
        "message": "Metric metadata field 'metric_summary' should be defined\n  Task id: task_batch_integration\n  Field: metric_summary\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Metric info", 
        "name": "Pct 'paper_reference' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(metric_info, field)", 
        "message": "Metric metadata field 'paper_reference' should be defined\n  Task id: task_batch_integration\n  Field: paper_reference\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Metric info", 
        "name": "Pct 'maximize' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(metric_info, field)", 
        "message": "Metric metadata field 'maximize' should be defined\n  Task id: task_batch_integration\n  Field: maximize\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Dataset info", 
        "name": "Pct 'task_id' missing", 
        "value": 1.0, 
        "severity": 2, 
        "severity_value": 3.0, 
        "code": "percent_missing(dataset_info, field)", 
        "message": "Dataset metadata field 'task_id' should be defined\n  Task id: task_batch_integration\n  Field: task_id\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Dataset info", 
        "name": "Pct 'dataset_id' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(dataset_info, field)", 
        "message": "Dataset metadata field 'dataset_id' should be defined\n  Task id: task_batch_integration\n  Field: dataset_id\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Dataset info", 
        "name": "Pct 'dataset_name' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(dataset_info, field)", 
        "message": "Dataset metadata field 'dataset_name' should be defined\n  Task id: task_batch_integration\n  Field: dataset_name\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Dataset info", 
        "name": "Pct 'dataset_summary' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(dataset_info, field)", 
        "message": "Dataset metadata field 'dataset_summary' should be defined\n  Task id: task_batch_integration\n  Field: dataset_summary\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Dataset info", 
        "name": "Pct 'data_reference' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(dataset_info, field)", 
        "message": "Dataset metadata field 'data_reference' should be defined\n  Task id: task_batch_integration\n  Field: data_reference\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Dataset info", 
        "name": "Pct 'data_url' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(dataset_info, field)", 
        "message": "Dataset metadata field 'data_url' should be defined\n  Task id: task_batch_integration\n  Field: data_url\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw data", 
        "name": "Number of results", 
        "value": 480, 
        "severity": 0, 
        "severity_value": -10.0, 
        "code": "len(results) == len(method_info) * len(metric_info) * len(dataset_info)", 
        "message": "Number of results should be equal to #methods × #metrics × #datasets.\n  Task id: task_batch_integration\n  Number of results: 480\n  Number of methods: 24\n  Number of metrics: 13\n  Number of datasets: 10\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Metric 'asw_batch' %missing", 
        "value": 0.6375, 
        "severity": 3, 
        "severity_value": 6.374999999999999, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  Metric id: asw_batch\n  Percentage missing: 64%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Metric 'asw_label' %missing", 
        "value": 0.6375, 
        "severity": 3, 
        "severity_value": 6.374999999999999, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  Metric id: asw_label\n  Percentage missing: 64%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Metric 'cell_cycle_conservation' %missing", 
        "value": 0.6000000000000001, 
        "severity": 3, 
        "severity_value": 6.000000000000001, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  Metric id: cell_cycle_conservation\n  Percentage missing: 60%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Metric 'ari' %missing", 
        "value": 0.22499999999999998, 
        "severity": 2, 
        "severity_value": 2.2499999999999996, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  Metric id: ari\n  Percentage missing: 22%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Metric 'nmi' %missing", 
        "value": 0.22499999999999998, 
        "severity": 2, 
        "severity_value": 2.2499999999999996, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  Metric id: nmi\n  Percentage missing: 22%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Metric 'graph_connectivity' %missing", 
        "value": 0.1708333333333334, 
        "severity": 1, 
        "severity_value": 1.708333333333334, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  Metric id: graph_connectivity\n  Percentage missing: 17%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Metric 'hvg_overlap' %missing", 
        "value": 0.7208333333333333, 
        "severity": 3, 
        "severity_value": 7.208333333333333, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  Metric id: hvg_overlap\n  Percentage missing: 72%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Metric 'isolated_label_asw' %missing", 
        "value": 0.6375, 
        "severity": 3, 
        "severity_value": 6.374999999999999, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  Metric id: isolated_label_asw\n  Percentage missing: 64%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Metric 'isolated_label_f1' %missing", 
        "value": 0.2833333333333333, 
        "severity": 2, 
        "severity_value": 2.833333333333333, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  Metric id: isolated_label_f1\n  Percentage missing: 28%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Metric 'kbet' %missing", 
        "value": 0.32500000000000007, 
        "severity": 3, 
        "severity_value": 3.2500000000000004, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  Metric id: kbet\n  Percentage missing: 33%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Metric 'ilisi' %missing", 
        "value": 0.1708333333333334, 
        "severity": 1, 
        "severity_value": 1.708333333333334, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  Metric id: ilisi\n  Percentage missing: 17%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Metric 'clisi' %missing", 
        "value": 0.1708333333333334, 
        "severity": 1, 
        "severity_value": 1.708333333333334, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  Metric id: clisi\n  Percentage missing: 17%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Metric 'pcr' %missing", 
        "value": 0.2958333333333334, 
        "severity": 2, 
        "severity_value": 2.958333333333334, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  Metric id: pcr\n  Percentage missing: 30%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'embed_cell_types' %missing", 
        "value": 0.16153846153846152, 
        "severity": 1, 
        "severity_value": 1.6153846153846152, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: embed_cell_types\n  Percentage missing: 16%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'embed_cell_types_jittered' %missing", 
        "value": 0.16153846153846152, 
        "severity": 1, 
        "severity_value": 1.6153846153846152, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: embed_cell_types_jittered\n  Percentage missing: 16%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'no_integration' %missing", 
        "value": 0.4076923076923077, 
        "severity": 3, 
        "severity_value": 4.076923076923077, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: no_integration\n  Percentage missing: 41%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'no_integration_batch' %missing", 
        "value": 0.2153846153846154, 
        "severity": 2, 
        "severity_value": 2.1538461538461537, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: no_integration_batch\n  Percentage missing: 22%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'shuffle_integration' %missing", 
        "value": 0.2846153846153846, 
        "severity": 2, 
        "severity_value": 2.846153846153846, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: shuffle_integration\n  Percentage missing: 28%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'shuffle_integration_by_batch' %missing", 
        "value": 0.32307692307692304, 
        "severity": 3, 
        "severity_value": 3.2307692307692304, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: shuffle_integration_by_batch\n  Percentage missing: 32%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'shuffle_integration_by_cell_type' %missing", 
        "value": 0.2846153846153846, 
        "severity": 2, 
        "severity_value": 2.846153846153846, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: shuffle_integration_by_cell_type\n  Percentage missing: 28%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'batchelor_fastmnn' %missing", 
        "value": 0.16153846153846152, 
        "severity": 1, 
        "severity_value": 1.6153846153846152, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: batchelor_fastmnn\n  Percentage missing: 16%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'batchelor_mnn_correct' %missing", 
        "value": 0.7076923076923077, 
        "severity": 3, 
        "severity_value": 7.076923076923077, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: batchelor_mnn_correct\n  Percentage missing: 71%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'bbknn' %missing", 
        "value": 0.6384615384615384, 
        "severity": 3, 
        "severity_value": 6.384615384615384, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: bbknn\n  Percentage missing: 64%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'combat' %missing", 
        "value": 0.2923076923076924, 
        "severity": 2, 
        "severity_value": 2.923076923076924, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: combat\n  Percentage missing: 29%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'geneformer' %missing", 
        "value": 0.9230769230769231, 
        "severity": 3, 
        "severity_value": 9.23076923076923, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: geneformer\n  Percentage missing: 92%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'harmony' %missing", 
        "value": 0.13846153846153852, 
        "severity": 1, 
        "severity_value": 1.3846153846153852, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: harmony\n  Percentage missing: 14%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'harmonypy' %missing", 
        "value": 0.36923076923076925, 
        "severity": 3, 
        "severity_value": 3.6923076923076925, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: harmonypy\n  Percentage missing: 37%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'liger' %missing", 
        "value": 0.3076923076923077, 
        "severity": 3, 
        "severity_value": 3.076923076923077, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: liger\n  Percentage missing: 31%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'mnnpy' %missing", 
        "value": 0.7076923076923077, 
        "severity": 3, 
        "severity_value": 7.076923076923077, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: mnnpy\n  Percentage missing: 71%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'pyliger' %missing", 
        "value": 0.16153846153846152, 
        "severity": 1, 
        "severity_value": 1.6153846153846152, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: pyliger\n  Percentage missing: 16%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'scalex' %missing", 
        "value": 0.13846153846153852, 
        "severity": 1, 
        "severity_value": 1.3846153846153852, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: scalex\n  Percentage missing: 14%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'scanorama' %missing", 
        "value": 0.16153846153846152, 
        "severity": 1, 
        "severity_value": 1.6153846153846152, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: scanorama\n  Percentage missing: 16%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'scanvi' %missing", 
        "value": 0.36923076923076925, 
        "severity": 3, 
        "severity_value": 3.6923076923076925, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: scanvi\n  Percentage missing: 37%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'scgpt' %missing", 
        "value": 0.6153846153846154, 
        "severity": 3, 
        "severity_value": 6.153846153846154, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: scgpt\n  Percentage missing: 62%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'scimilarity' %missing", 
        "value": 0.6384615384615384, 
        "severity": 3, 
        "severity_value": 6.384615384615384, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: scimilarity\n  Percentage missing: 64%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'scvi' %missing", 
        "value": 0.36923076923076925, 
        "severity": 3, 
        "severity_value": 3.6923076923076925, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: scvi\n  Percentage missing: 37%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'uce' %missing", 
        "value": 0.8769230769230769, 
        "severity": 3, 
        "severity_value": 8.769230769230768, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: uce\n  Percentage missing: 88%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Dataset 'openproblems_v1/pancreas' %missing", 
        "value": 0.27243589743589747, 
        "severity": 2, 
        "severity_value": 2.7243589743589745, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  dataset id: openproblems_v1/pancreas\n  Percentage missing: 27%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Dataset 'cellxgene_census/dkd' %missing", 
        "value": 0.27884615384615385, 
        "severity": 2, 
        "severity_value": 2.7884615384615383, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  dataset id: cellxgene_census/dkd\n  Percentage missing: 28%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Dataset 'openproblems_v1/zebrafish' %missing", 
        "value": 0.3846153846153846, 
        "severity": 3, 
        "severity_value": 3.846153846153846, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  dataset id: openproblems_v1/zebrafish\n  Percentage missing: 38%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Dataset 'cellxgene_census/tabula_sapiens' %missing", 
        "value": 0.5, 
        "severity": 3, 
        "severity_value": 5.0, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  dataset id: cellxgene_census/tabula_sapiens\n  Percentage missing: 50%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Dataset 'cellxgene_census/hypomap' %missing", 
        "value": 0.5416666666666667, 
        "severity": 3, 
        "severity_value": 5.416666666666667, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  dataset id: cellxgene_census/hypomap\n  Percentage missing: 54%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Dataset 'cellxgene_census/mouse_pancreas_atlas' %missing", 
        "value": 0.4358974358974359, 
        "severity": 3, 
        "severity_value": 4.358974358974359, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  dataset id: cellxgene_census/mouse_pancreas_atlas\n  Percentage missing: 44%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Dataset 'cellxgene_census/gtex_v9' %missing", 
        "value": 0.4455128205128205, 
        "severity": 3, 
        "severity_value": 4.455128205128204, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  dataset id: cellxgene_census/gtex_v9\n  Percentage missing: 45%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Dataset 'cellxgene_census/immune_cell_atlas' %missing", 
        "value": 0.34615384615384615, 
        "severity": 3, 
        "severity_value": 3.4615384615384612, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  dataset id: cellxgene_census/immune_cell_atlas\n  Percentage missing: 35%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Dataset 'openproblems_v1/cengen' %missing", 
        "value": 0.47756410256410253, 
        "severity": 3, 
        "severity_value": 4.775641025641025, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  dataset id: openproblems_v1/cengen\n  Percentage missing: 48%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Dataset 'openproblems_v1/immune_cells' %missing", 
        "value": 0.24038461538461542, 
        "severity": 2, 
        "severity_value": 2.403846153846154, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  dataset id: openproblems_v1/immune_cells\n  Percentage missing: 24%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types asw_batch", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: asw_batch\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types asw_batch", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: asw_batch\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types_jittered asw_batch", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types_jittered performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: asw_batch\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types_jittered asw_batch", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types_jittered performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: asw_batch\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration asw_batch", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: asw_batch\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration asw_batch", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method no_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: asw_batch\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration_batch asw_batch", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: asw_batch\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration_batch asw_batch", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method no_integration_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: asw_batch\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration asw_batch", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: asw_batch\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration asw_batch", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: asw_batch\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_batch asw_batch", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: asw_batch\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_batch asw_batch", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: asw_batch\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_cell_type asw_batch", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_cell_type performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: asw_batch\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_cell_type asw_batch", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_cell_type performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: asw_batch\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_fastmnn asw_batch", 
        "value": -346.3234, 
        "severity": 3, 
        "severity_value": 346.3234, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_fastmnn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: asw_batch\n  Worst score: -346.3234%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_fastmnn asw_batch", 
        "value": 1.6105, 
        "severity": 0, 
        "severity_value": 0.80525, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_fastmnn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: asw_batch\n  Best score: 1.6105%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_mnn_correct asw_batch", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_mnn_correct performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: asw_batch\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_mnn_correct asw_batch", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_mnn_correct performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: asw_batch\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score bbknn asw_batch", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method bbknn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: asw_batch\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score bbknn asw_batch", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method bbknn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: asw_batch\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score combat asw_batch", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method combat performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: asw_batch\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score combat asw_batch", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method combat performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: asw_batch\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score geneformer asw_batch", 
        "value": -0.9346, 
        "severity": 0, 
        "severity_value": 0.9346, 
        "code": "worst_score >= -1", 
        "message": "Method geneformer performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: asw_batch\n  Worst score: -0.9346%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score geneformer asw_batch", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method geneformer performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: asw_batch\n  Best score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmony asw_batch", 
        "value": -309.7447, 
        "severity": 3, 
        "severity_value": 309.7447, 
        "code": "worst_score >= -1", 
        "message": "Method harmony performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: asw_batch\n  Worst score: -309.7447%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmony asw_batch", 
        "value": 0.8257, 
        "severity": 0, 
        "severity_value": 0.41285, 
        "code": "best_score <= 2", 
        "message": "Method harmony performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: asw_batch\n  Best score: 0.8257%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmonypy asw_batch", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method harmonypy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: asw_batch\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmonypy asw_batch", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method harmonypy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: asw_batch\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score liger asw_batch", 
        "value": -649.2211, 
        "severity": 3, 
        "severity_value": 649.2211, 
        "code": "worst_score >= -1", 
        "message": "Method liger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: asw_batch\n  Worst score: -649.2211%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score liger asw_batch", 
        "value": 0.6589, 
        "severity": 0, 
        "severity_value": 0.32945, 
        "code": "best_score <= 2", 
        "message": "Method liger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: asw_batch\n  Best score: 0.6589%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score mnnpy asw_batch", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method mnnpy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: asw_batch\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score mnnpy asw_batch", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method mnnpy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: asw_batch\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score pyliger asw_batch", 
        "value": -612.6087, 
        "severity": 3, 
        "severity_value": 612.6087, 
        "code": "worst_score >= -1", 
        "message": "Method pyliger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: asw_batch\n  Worst score: -612.6087%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score pyliger asw_batch", 
        "value": 0.712, 
        "severity": 0, 
        "severity_value": 0.356, 
        "code": "best_score <= 2", 
        "message": "Method pyliger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: asw_batch\n  Best score: 0.712%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scalex asw_batch", 
        "value": -488.9163, 
        "severity": 3, 
        "severity_value": 488.9163, 
        "code": "worst_score >= -1", 
        "message": "Method scalex performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: asw_batch\n  Worst score: -488.9163%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scalex asw_batch", 
        "value": 0.6898, 
        "severity": 0, 
        "severity_value": 0.3449, 
        "code": "best_score <= 2", 
        "message": "Method scalex performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: asw_batch\n  Best score: 0.6898%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanorama asw_batch", 
        "value": -228.4168, 
        "severity": 3, 
        "severity_value": 228.4168, 
        "code": "worst_score >= -1", 
        "message": "Method scanorama performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: asw_batch\n  Worst score: -228.4168%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanorama asw_batch", 
        "value": 0.8226, 
        "severity": 0, 
        "severity_value": 0.4113, 
        "code": "best_score <= 2", 
        "message": "Method scanorama performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: asw_batch\n  Best score: 0.8226%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanvi asw_batch", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scanvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: asw_batch\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanvi asw_batch", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method scanvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: asw_batch\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scgpt asw_batch", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scgpt performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt\n  Metric id: asw_batch\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scgpt asw_batch", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method scgpt performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt\n  Metric id: asw_batch\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scimilarity asw_batch", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scimilarity performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: asw_batch\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scimilarity asw_batch", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method scimilarity performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: asw_batch\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scvi asw_batch", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: asw_batch\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scvi asw_batch", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method scvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: asw_batch\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score uce asw_batch", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method uce performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: asw_batch\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score uce asw_batch", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method uce performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: asw_batch\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types asw_label", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: asw_label\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types asw_label", 
        "value": 1, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: asw_label\n  Best score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types_jittered asw_label", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types_jittered performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: asw_label\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types_jittered asw_label", 
        "value": 1, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types_jittered performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: asw_label\n  Best score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration asw_label", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: asw_label\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration asw_label", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method no_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: asw_label\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration_batch asw_label", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: asw_label\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration_batch asw_label", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method no_integration_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: asw_label\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration asw_label", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: asw_label\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration asw_label", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: asw_label\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_batch asw_label", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: asw_label\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_batch asw_label", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: asw_label\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_cell_type asw_label", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_cell_type performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: asw_label\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_cell_type asw_label", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_cell_type performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: asw_label\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_fastmnn asw_label", 
        "value": -72351.8294, 
        "severity": 3, 
        "severity_value": 72351.8294, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_fastmnn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: asw_label\n  Worst score: -72351.8294%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_fastmnn asw_label", 
        "value": 0.327, 
        "severity": 0, 
        "severity_value": 0.1635, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_fastmnn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: asw_label\n  Best score: 0.327%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_mnn_correct asw_label", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_mnn_correct performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: asw_label\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_mnn_correct asw_label", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_mnn_correct performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: asw_label\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score bbknn asw_label", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method bbknn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: asw_label\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score bbknn asw_label", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method bbknn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: asw_label\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score combat asw_label", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method combat performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: asw_label\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score combat asw_label", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method combat performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: asw_label\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score geneformer asw_label", 
        "value": -0.3088, 
        "severity": 0, 
        "severity_value": 0.3088, 
        "code": "worst_score >= -1", 
        "message": "Method geneformer performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: asw_label\n  Worst score: -0.3088%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score geneformer asw_label", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method geneformer performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: asw_label\n  Best score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmony asw_label", 
        "value": -73955.3846, 
        "severity": 3, 
        "severity_value": 73955.3846, 
        "code": "worst_score >= -1", 
        "message": "Method harmony performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: asw_label\n  Worst score: -73955.3846%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmony asw_label", 
        "value": 0.3303, 
        "severity": 0, 
        "severity_value": 0.16515, 
        "code": "best_score <= 2", 
        "message": "Method harmony performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: asw_label\n  Best score: 0.3303%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmonypy asw_label", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method harmonypy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: asw_label\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmonypy asw_label", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method harmonypy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: asw_label\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score liger asw_label", 
        "value": -82631.7546, 
        "severity": 3, 
        "severity_value": 82631.7546, 
        "code": "worst_score >= -1", 
        "message": "Method liger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: asw_label\n  Worst score: -82631.7546%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score liger asw_label", 
        "value": 0.3724, 
        "severity": 0, 
        "severity_value": 0.1862, 
        "code": "best_score <= 2", 
        "message": "Method liger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: asw_label\n  Best score: 0.3724%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score mnnpy asw_label", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method mnnpy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: asw_label\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score mnnpy asw_label", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method mnnpy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: asw_label\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score pyliger asw_label", 
        "value": -78706.6467, 
        "severity": 3, 
        "severity_value": 78706.6467, 
        "code": "worst_score >= -1", 
        "message": "Method pyliger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: asw_label\n  Worst score: -78706.6467%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score pyliger asw_label", 
        "value": 0.4053, 
        "severity": 0, 
        "severity_value": 0.20265, 
        "code": "best_score <= 2", 
        "message": "Method pyliger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: asw_label\n  Best score: 0.4053%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scalex asw_label", 
        "value": -78132.5967, 
        "severity": 3, 
        "severity_value": 78132.5967, 
        "code": "worst_score >= -1", 
        "message": "Method scalex performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: asw_label\n  Worst score: -78132.5967%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scalex asw_label", 
        "value": 0.1676, 
        "severity": 0, 
        "severity_value": 0.0838, 
        "code": "best_score <= 2", 
        "message": "Method scalex performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: asw_label\n  Best score: 0.1676%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanorama asw_label", 
        "value": -81275.7442, 
        "severity": 3, 
        "severity_value": 81275.7442, 
        "code": "worst_score >= -1", 
        "message": "Method scanorama performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: asw_label\n  Worst score: -81275.7442%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanorama asw_label", 
        "value": 0.0326, 
        "severity": 0, 
        "severity_value": 0.0163, 
        "code": "best_score <= 2", 
        "message": "Method scanorama performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: asw_label\n  Best score: 0.0326%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanvi asw_label", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scanvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: asw_label\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanvi asw_label", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method scanvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: asw_label\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scgpt asw_label", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scgpt performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt\n  Metric id: asw_label\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scgpt asw_label", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method scgpt performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt\n  Metric id: asw_label\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scimilarity asw_label", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scimilarity performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: asw_label\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scimilarity asw_label", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method scimilarity performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: asw_label\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scvi asw_label", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: asw_label\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scvi asw_label", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method scvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: asw_label\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score uce asw_label", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method uce performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: asw_label\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score uce asw_label", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method uce performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: asw_label\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types cell_cycle_conservation", 
        "value": 0.705, 
        "severity": 0, 
        "severity_value": 0.3525, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: cell_cycle_conservation\n  Best score: 0.705%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types_jittered cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types_jittered performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types_jittered cell_cycle_conservation", 
        "value": 0.7065, 
        "severity": 0, 
        "severity_value": 0.35325, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types_jittered performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: cell_cycle_conservation\n  Best score: 0.7065%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration cell_cycle_conservation", 
        "value": 0.9274, 
        "severity": 0, 
        "severity_value": 0.4637, 
        "code": "best_score <= 2", 
        "message": "Method no_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: cell_cycle_conservation\n  Best score: 0.9274%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration_batch cell_cycle_conservation", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: cell_cycle_conservation\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration_batch cell_cycle_conservation", 
        "value": 1, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method no_integration_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: cell_cycle_conservation\n  Best score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration cell_cycle_conservation", 
        "value": 0.0054, 
        "severity": 0, 
        "severity_value": 0.0027, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: cell_cycle_conservation\n  Best score: 0.0054%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_batch cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_batch cell_cycle_conservation", 
        "value": 0.0273, 
        "severity": 0, 
        "severity_value": 0.01365, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: cell_cycle_conservation\n  Best score: 0.0273%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_cell_type cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_cell_type performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_cell_type cell_cycle_conservation", 
        "value": 0.7858, 
        "severity": 0, 
        "severity_value": 0.3929, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_cell_type performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: cell_cycle_conservation\n  Best score: 0.7858%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_fastmnn cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_fastmnn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_fastmnn cell_cycle_conservation", 
        "value": 0.9131, 
        "severity": 0, 
        "severity_value": 0.45655, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_fastmnn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: cell_cycle_conservation\n  Best score: 0.9131%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_mnn_correct cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_mnn_correct performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_mnn_correct cell_cycle_conservation", 
        "value": 0.9426, 
        "severity": 0, 
        "severity_value": 0.4713, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_mnn_correct performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: cell_cycle_conservation\n  Best score: 0.9426%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score bbknn cell_cycle_conservation", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method bbknn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: cell_cycle_conservation\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score bbknn cell_cycle_conservation", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method bbknn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: cell_cycle_conservation\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score combat cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method combat performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score combat cell_cycle_conservation", 
        "value": 0.9072, 
        "severity": 0, 
        "severity_value": 0.4536, 
        "code": "best_score <= 2", 
        "message": "Method combat performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: cell_cycle_conservation\n  Best score: 0.9072%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score geneformer cell_cycle_conservation", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method geneformer performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: cell_cycle_conservation\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score geneformer cell_cycle_conservation", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method geneformer performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: cell_cycle_conservation\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmony cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method harmony performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmony cell_cycle_conservation", 
        "value": 0.9076, 
        "severity": 0, 
        "severity_value": 0.4538, 
        "code": "best_score <= 2", 
        "message": "Method harmony performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: cell_cycle_conservation\n  Best score: 0.9076%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmonypy cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method harmonypy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmonypy cell_cycle_conservation", 
        "value": 0.909, 
        "severity": 0, 
        "severity_value": 0.4545, 
        "code": "best_score <= 2", 
        "message": "Method harmonypy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: cell_cycle_conservation\n  Best score: 0.909%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score liger cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method liger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score liger cell_cycle_conservation", 
        "value": 0.6478, 
        "severity": 0, 
        "severity_value": 0.3239, 
        "code": "best_score <= 2", 
        "message": "Method liger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: cell_cycle_conservation\n  Best score: 0.6478%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score mnnpy cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method mnnpy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score mnnpy cell_cycle_conservation", 
        "value": 0.403, 
        "severity": 0, 
        "severity_value": 0.2015, 
        "code": "best_score <= 2", 
        "message": "Method mnnpy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: cell_cycle_conservation\n  Best score: 0.403%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score pyliger cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method pyliger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score pyliger cell_cycle_conservation", 
        "value": 0.6817, 
        "severity": 0, 
        "severity_value": 0.34085, 
        "code": "best_score <= 2", 
        "message": "Method pyliger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: cell_cycle_conservation\n  Best score: 0.6817%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scalex cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scalex performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scalex cell_cycle_conservation", 
        "value": 0.8075, 
        "severity": 0, 
        "severity_value": 0.40375, 
        "code": "best_score <= 2", 
        "message": "Method scalex performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: cell_cycle_conservation\n  Best score: 0.8075%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanorama cell_cycle_conservation", 
        "value": -0.0029, 
        "severity": 0, 
        "severity_value": 0.0029, 
        "code": "worst_score >= -1", 
        "message": "Method scanorama performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: cell_cycle_conservation\n  Worst score: -0.0029%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanorama cell_cycle_conservation", 
        "value": 0.4261, 
        "severity": 0, 
        "severity_value": 0.21305, 
        "code": "best_score <= 2", 
        "message": "Method scanorama performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: cell_cycle_conservation\n  Best score: 0.4261%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanvi cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scanvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanvi cell_cycle_conservation", 
        "value": 0.8056, 
        "severity": 0, 
        "severity_value": 0.4028, 
        "code": "best_score <= 2", 
        "message": "Method scanvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: cell_cycle_conservation\n  Best score: 0.8056%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scgpt cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scgpt performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scgpt cell_cycle_conservation", 
        "value": 0.8567, 
        "severity": 0, 
        "severity_value": 0.42835, 
        "code": "best_score <= 2", 
        "message": "Method scgpt performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt\n  Metric id: cell_cycle_conservation\n  Best score: 0.8567%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scimilarity cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scimilarity performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scimilarity cell_cycle_conservation", 
        "value": 0.6703, 
        "severity": 0, 
        "severity_value": 0.33515, 
        "code": "best_score <= 2", 
        "message": "Method scimilarity performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: cell_cycle_conservation\n  Best score: 0.6703%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scvi cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scvi cell_cycle_conservation", 
        "value": 0.7196, 
        "severity": 0, 
        "severity_value": 0.3598, 
        "code": "best_score <= 2", 
        "message": "Method scvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: cell_cycle_conservation\n  Best score: 0.7196%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score uce cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method uce performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score uce cell_cycle_conservation", 
        "value": 0.6902, 
        "severity": 0, 
        "severity_value": 0.3451, 
        "code": "best_score <= 2", 
        "message": "Method uce performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: cell_cycle_conservation\n  Best score: 0.6902%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types ari", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: ari\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types ari", 
        "value": 1, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: ari\n  Best score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types_jittered ari", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types_jittered performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: ari\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types_jittered ari", 
        "value": 1, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types_jittered performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: ari\n  Best score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration ari", 
        "value": 0.9999, 
        "severity": 0, 
        "severity_value": 0.49995, 
        "code": "best_score <= 2", 
        "message": "Method no_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: ari\n  Best score: 0.9999%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration_batch ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration_batch ari", 
        "value": 0.8262, 
        "severity": 0, 
        "severity_value": 0.4131, 
        "code": "best_score <= 2", 
        "message": "Method no_integration_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: ari\n  Best score: 0.8262%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration ari", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: ari\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration ari", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: ari\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_batch ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_batch ari", 
        "value": 0.1211, 
        "severity": 0, 
        "severity_value": 0.06055, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: ari\n  Best score: 0.1211%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_cell_type ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_cell_type performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_cell_type ari", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_cell_type performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: ari\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_fastmnn ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_fastmnn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_fastmnn ari", 
        "value": 1.9656, 
        "severity": 0, 
        "severity_value": 0.9828, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_fastmnn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: ari\n  Best score: 1.9656%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_mnn_correct ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_mnn_correct performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_mnn_correct ari", 
        "value": 0.9506, 
        "severity": 0, 
        "severity_value": 0.4753, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_mnn_correct performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: ari\n  Best score: 0.9506%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score bbknn ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method bbknn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score bbknn ari", 
        "value": 0.9514, 
        "severity": 0, 
        "severity_value": 0.4757, 
        "code": "best_score <= 2", 
        "message": "Method bbknn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: ari\n  Best score: 0.9514%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score combat ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method combat performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score combat ari", 
        "value": 1.0013, 
        "severity": 0, 
        "severity_value": 0.50065, 
        "code": "best_score <= 2", 
        "message": "Method combat performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: ari\n  Best score: 1.0013%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score geneformer ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method geneformer performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score geneformer ari", 
        "value": 0.0018, 
        "severity": 0, 
        "severity_value": 0.0009, 
        "code": "best_score <= 2", 
        "message": "Method geneformer performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: ari\n  Best score: 0.0018%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmony ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method harmony performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmony ari", 
        "value": 2.3707, 
        "severity": 1, 
        "severity_value": 1.18535, 
        "code": "best_score <= 2", 
        "message": "Method harmony performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: ari\n  Best score: 2.3707%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmonypy ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method harmonypy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmonypy ari", 
        "value": 2.2833, 
        "severity": 1, 
        "severity_value": 1.14165, 
        "code": "best_score <= 2", 
        "message": "Method harmonypy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: ari\n  Best score: 2.2833%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score liger ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method liger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score liger ari", 
        "value": 1.0952, 
        "severity": 0, 
        "severity_value": 0.5476, 
        "code": "best_score <= 2", 
        "message": "Method liger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: ari\n  Best score: 1.0952%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score mnnpy ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method mnnpy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score mnnpy ari", 
        "value": 0.1621, 
        "severity": 0, 
        "severity_value": 0.08105, 
        "code": "best_score <= 2", 
        "message": "Method mnnpy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: ari\n  Best score: 0.1621%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score pyliger ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method pyliger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score pyliger ari", 
        "value": 0.9181, 
        "severity": 0, 
        "severity_value": 0.45905, 
        "code": "best_score <= 2", 
        "message": "Method pyliger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: ari\n  Best score: 0.9181%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scalex ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scalex performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scalex ari", 
        "value": 0.6024, 
        "severity": 0, 
        "severity_value": 0.3012, 
        "code": "best_score <= 2", 
        "message": "Method scalex performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: ari\n  Best score: 0.6024%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanorama ari", 
        "value": -0.0001, 
        "severity": 0, 
        "severity_value": 0.0001, 
        "code": "worst_score >= -1", 
        "message": "Method scanorama performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: ari\n  Worst score: -0.0001%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanorama ari", 
        "value": 0.2529, 
        "severity": 0, 
        "severity_value": 0.12645, 
        "code": "best_score <= 2", 
        "message": "Method scanorama performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: ari\n  Best score: 0.2529%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanvi ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scanvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanvi ari", 
        "value": 0.96, 
        "severity": 0, 
        "severity_value": 0.48, 
        "code": "best_score <= 2", 
        "message": "Method scanvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: ari\n  Best score: 0.96%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scgpt ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scgpt performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scgpt ari", 
        "value": 0.7568, 
        "severity": 0, 
        "severity_value": 0.3784, 
        "code": "best_score <= 2", 
        "message": "Method scgpt performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt\n  Metric id: ari\n  Best score: 0.7568%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scimilarity ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scimilarity performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scimilarity ari", 
        "value": 0.9342, 
        "severity": 0, 
        "severity_value": 0.4671, 
        "code": "best_score <= 2", 
        "message": "Method scimilarity performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: ari\n  Best score: 0.9342%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scvi ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scvi ari", 
        "value": 0.996, 
        "severity": 0, 
        "severity_value": 0.498, 
        "code": "best_score <= 2", 
        "message": "Method scvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: ari\n  Best score: 0.996%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score uce ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method uce performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score uce ari", 
        "value": 0.807, 
        "severity": 0, 
        "severity_value": 0.4035, 
        "code": "best_score <= 2", 
        "message": "Method uce performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: ari\n  Best score: 0.807%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types nmi", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: nmi\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types nmi", 
        "value": 1, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: nmi\n  Best score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types_jittered nmi", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types_jittered performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: nmi\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types_jittered nmi", 
        "value": 1, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types_jittered performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: nmi\n  Best score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration nmi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: nmi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration nmi", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method no_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: nmi\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration_batch nmi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: nmi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration_batch nmi", 
        "value": 0.9455, 
        "severity": 0, 
        "severity_value": 0.47275, 
        "code": "best_score <= 2", 
        "message": "Method no_integration_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: nmi\n  Best score: 0.9455%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration nmi", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: nmi\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration nmi", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: nmi\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_batch nmi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: nmi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_batch nmi", 
        "value": 0.209, 
        "severity": 0, 
        "severity_value": 0.1045, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: nmi\n  Best score: 0.209%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_cell_type nmi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_cell_type performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: nmi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_cell_type nmi", 
        "value": 0.9998, 
        "severity": 0, 
        "severity_value": 0.4999, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_cell_type performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: nmi\n  Best score: 0.9998%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_fastmnn nmi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_fastmnn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: nmi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_fastmnn nmi", 
        "value": 1.1913, 
        "severity": 0, 
        "severity_value": 0.59565, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_fastmnn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: nmi\n  Best score: 1.1913%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_mnn_correct nmi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_mnn_correct performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: nmi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_mnn_correct nmi", 
        "value": 0.919, 
        "severity": 0, 
        "severity_value": 0.4595, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_mnn_correct performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: nmi\n  Best score: 0.919%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score bbknn nmi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method bbknn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: nmi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score bbknn nmi", 
        "value": 0.9138, 
        "severity": 0, 
        "severity_value": 0.4569, 
        "code": "best_score <= 2", 
        "message": "Method bbknn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: nmi\n  Best score: 0.9138%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score combat nmi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method combat performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: nmi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score combat nmi", 
        "value": 0.9898, 
        "severity": 0, 
        "severity_value": 0.4949, 
        "code": "best_score <= 2", 
        "message": "Method combat performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: nmi\n  Best score: 0.9898%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score geneformer nmi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method geneformer performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: nmi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score geneformer nmi", 
        "value": 0.031, 
        "severity": 0, 
        "severity_value": 0.0155, 
        "code": "best_score <= 2", 
        "message": "Method geneformer performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: nmi\n  Best score: 0.031%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmony nmi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method harmony performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: nmi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmony nmi", 
        "value": 1.2182, 
        "severity": 0, 
        "severity_value": 0.6091, 
        "code": "best_score <= 2", 
        "message": "Method harmony performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: nmi\n  Best score: 1.2182%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmonypy nmi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method harmonypy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: nmi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmonypy nmi", 
        "value": 1.1846, 
        "severity": 0, 
        "severity_value": 0.5923, 
        "code": "best_score <= 2", 
        "message": "Method harmonypy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: nmi\n  Best score: 1.1846%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score liger nmi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method liger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: nmi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score liger nmi", 
        "value": 1.0349, 
        "severity": 0, 
        "severity_value": 0.51745, 
        "code": "best_score <= 2", 
        "message": "Method liger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: nmi\n  Best score: 1.0349%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score mnnpy nmi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method mnnpy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: nmi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score mnnpy nmi", 
        "value": 0.229, 
        "severity": 0, 
        "severity_value": 0.1145, 
        "code": "best_score <= 2", 
        "message": "Method mnnpy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: nmi\n  Best score: 0.229%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score pyliger nmi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method pyliger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: nmi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score pyliger nmi", 
        "value": 0.8814, 
        "severity": 0, 
        "severity_value": 0.4407, 
        "code": "best_score <= 2", 
        "message": "Method pyliger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: nmi\n  Best score: 0.8814%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scalex nmi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scalex performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: nmi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scalex nmi", 
        "value": 0.7008, 
        "severity": 0, 
        "severity_value": 0.3504, 
        "code": "best_score <= 2", 
        "message": "Method scalex performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: nmi\n  Best score: 0.7008%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanorama nmi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scanorama performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: nmi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanorama nmi", 
        "value": 0.2283, 
        "severity": 0, 
        "severity_value": 0.11415, 
        "code": "best_score <= 2", 
        "message": "Method scanorama performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: nmi\n  Best score: 0.2283%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanvi nmi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scanvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: nmi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanvi nmi", 
        "value": 0.9834, 
        "severity": 0, 
        "severity_value": 0.4917, 
        "code": "best_score <= 2", 
        "message": "Method scanvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: nmi\n  Best score: 0.9834%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scgpt nmi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scgpt performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt\n  Metric id: nmi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scgpt nmi", 
        "value": 0.7998, 
        "severity": 0, 
        "severity_value": 0.3999, 
        "code": "best_score <= 2", 
        "message": "Method scgpt performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt\n  Metric id: nmi\n  Best score: 0.7998%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scimilarity nmi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scimilarity performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: nmi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scimilarity nmi", 
        "value": 0.8836, 
        "severity": 0, 
        "severity_value": 0.4418, 
        "code": "best_score <= 2", 
        "message": "Method scimilarity performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: nmi\n  Best score: 0.8836%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scvi nmi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: nmi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scvi nmi", 
        "value": 1.0005, 
        "severity": 0, 
        "severity_value": 0.50025, 
        "code": "best_score <= 2", 
        "message": "Method scvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: nmi\n  Best score: 1.0005%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score uce nmi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method uce performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: nmi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score uce nmi", 
        "value": 0.8118, 
        "severity": 0, 
        "severity_value": 0.4059, 
        "code": "best_score <= 2", 
        "message": "Method uce performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: nmi\n  Best score: 0.8118%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types graph_connectivity", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: graph_connectivity\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types graph_connectivity", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: graph_connectivity\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types_jittered graph_connectivity", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types_jittered performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: graph_connectivity\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types_jittered graph_connectivity", 
        "value": 1, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types_jittered performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: graph_connectivity\n  Best score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration graph_connectivity", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: graph_connectivity\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration graph_connectivity", 
        "value": 0.9769, 
        "severity": 0, 
        "severity_value": 0.48845, 
        "code": "best_score <= 2", 
        "message": "Method no_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: graph_connectivity\n  Best score: 0.9769%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration_batch graph_connectivity", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: graph_connectivity\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration_batch graph_connectivity", 
        "value": 0.8516, 
        "severity": 0, 
        "severity_value": 0.4258, 
        "code": "best_score <= 2", 
        "message": "Method no_integration_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: graph_connectivity\n  Best score: 0.8516%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration graph_connectivity", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: graph_connectivity\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration graph_connectivity", 
        "value": 0.0267, 
        "severity": 0, 
        "severity_value": 0.01335, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: graph_connectivity\n  Best score: 0.0267%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_batch graph_connectivity", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: graph_connectivity\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_batch graph_connectivity", 
        "value": 0.2642, 
        "severity": 0, 
        "severity_value": 0.1321, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: graph_connectivity\n  Best score: 0.2642%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_cell_type graph_connectivity", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_cell_type performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: graph_connectivity\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_cell_type graph_connectivity", 
        "value": 0.9762, 
        "severity": 0, 
        "severity_value": 0.4881, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_cell_type performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: graph_connectivity\n  Best score: 0.9762%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_fastmnn graph_connectivity", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_fastmnn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: graph_connectivity\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_fastmnn graph_connectivity", 
        "value": 0.9716, 
        "severity": 0, 
        "severity_value": 0.4858, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_fastmnn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: graph_connectivity\n  Best score: 0.9716%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_mnn_correct graph_connectivity", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_mnn_correct performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: graph_connectivity\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_mnn_correct graph_connectivity", 
        "value": 0.9597, 
        "severity": 0, 
        "severity_value": 0.47985, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_mnn_correct performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: graph_connectivity\n  Best score: 0.9597%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score bbknn graph_connectivity", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method bbknn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: graph_connectivity\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score bbknn graph_connectivity", 
        "value": 0.9975, 
        "severity": 0, 
        "severity_value": 0.49875, 
        "code": "best_score <= 2", 
        "message": "Method bbknn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: graph_connectivity\n  Best score: 0.9975%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score combat graph_connectivity", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method combat performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: graph_connectivity\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score combat graph_connectivity", 
        "value": 0.9741, 
        "severity": 0, 
        "severity_value": 0.48705, 
        "code": "best_score <= 2", 
        "message": "Method combat performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: graph_connectivity\n  Best score: 0.9741%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score geneformer graph_connectivity", 
        "value": -0.3136, 
        "severity": 0, 
        "severity_value": 0.3136, 
        "code": "worst_score >= -1", 
        "message": "Method geneformer performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: graph_connectivity\n  Worst score: -0.3136%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score geneformer graph_connectivity", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method geneformer performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: graph_connectivity\n  Best score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmony graph_connectivity", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method harmony performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: graph_connectivity\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmony graph_connectivity", 
        "value": 0.9739, 
        "severity": 0, 
        "severity_value": 0.48695, 
        "code": "best_score <= 2", 
        "message": "Method harmony performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: graph_connectivity\n  Best score: 0.9739%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmonypy graph_connectivity", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method harmonypy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: graph_connectivity\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmonypy graph_connectivity", 
        "value": 0.9795, 
        "severity": 0, 
        "severity_value": 0.48975, 
        "code": "best_score <= 2", 
        "message": "Method harmonypy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: graph_connectivity\n  Best score: 0.9795%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score liger graph_connectivity", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method liger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: graph_connectivity\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score liger graph_connectivity", 
        "value": 0.9506, 
        "severity": 0, 
        "severity_value": 0.4753, 
        "code": "best_score <= 2", 
        "message": "Method liger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: graph_connectivity\n  Best score: 0.9506%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score mnnpy graph_connectivity", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method mnnpy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: graph_connectivity\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score mnnpy graph_connectivity", 
        "value": 0.3985, 
        "severity": 0, 
        "severity_value": 0.19925, 
        "code": "best_score <= 2", 
        "message": "Method mnnpy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: graph_connectivity\n  Best score: 0.3985%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score pyliger graph_connectivity", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method pyliger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: graph_connectivity\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score pyliger graph_connectivity", 
        "value": 0.9575, 
        "severity": 0, 
        "severity_value": 0.47875, 
        "code": "best_score <= 2", 
        "message": "Method pyliger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: graph_connectivity\n  Best score: 0.9575%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scalex graph_connectivity", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scalex performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: graph_connectivity\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scalex graph_connectivity", 
        "value": 0.9041, 
        "severity": 0, 
        "severity_value": 0.45205, 
        "code": "best_score <= 2", 
        "message": "Method scalex performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: graph_connectivity\n  Best score: 0.9041%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanorama graph_connectivity", 
        "value": -0.0047, 
        "severity": 0, 
        "severity_value": 0.0047, 
        "code": "worst_score >= -1", 
        "message": "Method scanorama performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: graph_connectivity\n  Worst score: -0.0047%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanorama graph_connectivity", 
        "value": 0.3957, 
        "severity": 0, 
        "severity_value": 0.19785, 
        "code": "best_score <= 2", 
        "message": "Method scanorama performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: graph_connectivity\n  Best score: 0.3957%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanvi graph_connectivity", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scanvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: graph_connectivity\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanvi graph_connectivity", 
        "value": 0.9953, 
        "severity": 0, 
        "severity_value": 0.49765, 
        "code": "best_score <= 2", 
        "message": "Method scanvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: graph_connectivity\n  Best score: 0.9953%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scgpt graph_connectivity", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scgpt performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt\n  Metric id: graph_connectivity\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scgpt graph_connectivity", 
        "value": 0.9695, 
        "severity": 0, 
        "severity_value": 0.48475, 
        "code": "best_score <= 2", 
        "message": "Method scgpt performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt\n  Metric id: graph_connectivity\n  Best score: 0.9695%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scimilarity graph_connectivity", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scimilarity performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: graph_connectivity\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scimilarity graph_connectivity", 
        "value": 0.9704, 
        "severity": 0, 
        "severity_value": 0.4852, 
        "code": "best_score <= 2", 
        "message": "Method scimilarity performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: graph_connectivity\n  Best score: 0.9704%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scvi graph_connectivity", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: graph_connectivity\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scvi graph_connectivity", 
        "value": 0.991, 
        "severity": 0, 
        "severity_value": 0.4955, 
        "code": "best_score <= 2", 
        "message": "Method scvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: graph_connectivity\n  Best score: 0.991%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score uce graph_connectivity", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method uce performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: graph_connectivity\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score uce graph_connectivity", 
        "value": 0.9712, 
        "severity": 0, 
        "severity_value": 0.4856, 
        "code": "best_score <= 2", 
        "message": "Method uce performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: graph_connectivity\n  Best score: 0.9712%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types_jittered hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types_jittered performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types_jittered hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types_jittered performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method no_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration_batch hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration_batch hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method no_integration_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_batch hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_batch hvg_overlap", 
        "value": 1, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: hvg_overlap\n  Best score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_cell_type hvg_overlap", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_cell_type performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: hvg_overlap\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_cell_type hvg_overlap", 
        "value": 0.2679, 
        "severity": 0, 
        "severity_value": 0.13395, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_cell_type performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: hvg_overlap\n  Best score: 0.2679%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_fastmnn hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_fastmnn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_fastmnn hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_fastmnn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_mnn_correct hvg_overlap", 
        "value": -0.6392, 
        "severity": 0, 
        "severity_value": 0.6392, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_mnn_correct performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: hvg_overlap\n  Worst score: -0.6392%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_mnn_correct hvg_overlap", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_mnn_correct performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: hvg_overlap\n  Best score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score bbknn hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method bbknn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score bbknn hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method bbknn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score combat hvg_overlap", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method combat performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: hvg_overlap\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score combat hvg_overlap", 
        "value": 0.1185, 
        "severity": 0, 
        "severity_value": 0.05925, 
        "code": "best_score <= 2", 
        "message": "Method combat performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: hvg_overlap\n  Best score: 0.1185%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score geneformer hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method geneformer performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score geneformer hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method geneformer performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmony hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method harmony performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmony hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method harmony performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmonypy hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method harmonypy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmonypy hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method harmonypy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score liger hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method liger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score liger hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method liger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score mnnpy hvg_overlap", 
        "value": -1.0321, 
        "severity": 1, 
        "severity_value": 1.0321, 
        "code": "worst_score >= -1", 
        "message": "Method mnnpy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: hvg_overlap\n  Worst score: -1.0321%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score mnnpy hvg_overlap", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method mnnpy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: hvg_overlap\n  Best score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score pyliger hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method pyliger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score pyliger hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method pyliger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scalex hvg_overlap", 
        "value": -1.6, 
        "severity": 1, 
        "severity_value": 1.6, 
        "code": "worst_score >= -1", 
        "message": "Method scalex performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: hvg_overlap\n  Worst score: -1.6%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scalex hvg_overlap", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method scalex performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: hvg_overlap\n  Best score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanorama hvg_overlap", 
        "value": -1.5298, 
        "severity": 1, 
        "severity_value": 1.5298, 
        "code": "worst_score >= -1", 
        "message": "Method scanorama performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: hvg_overlap\n  Worst score: -1.5298%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanorama hvg_overlap", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method scanorama performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: hvg_overlap\n  Best score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanvi hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scanvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanvi hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method scanvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scgpt hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scgpt performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scgpt hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method scgpt performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scimilarity hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scimilarity performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scimilarity hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method scimilarity performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scvi hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scvi hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method scvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score uce hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method uce performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score uce hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method uce performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types isolated_label_asw", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: isolated_label_asw\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types isolated_label_asw", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: isolated_label_asw\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types_jittered isolated_label_asw", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types_jittered performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: isolated_label_asw\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types_jittered isolated_label_asw", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types_jittered performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: isolated_label_asw\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration isolated_label_asw", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: isolated_label_asw\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration isolated_label_asw", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method no_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: isolated_label_asw\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration_batch isolated_label_asw", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: isolated_label_asw\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration_batch isolated_label_asw", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method no_integration_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: isolated_label_asw\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration isolated_label_asw", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: isolated_label_asw\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration isolated_label_asw", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: isolated_label_asw\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_batch isolated_label_asw", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: isolated_label_asw\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_batch isolated_label_asw", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: isolated_label_asw\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_cell_type isolated_label_asw", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_cell_type performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: isolated_label_asw\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_cell_type isolated_label_asw", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_cell_type performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: isolated_label_asw\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_fastmnn isolated_label_asw", 
        "value": -5489.9112, 
        "severity": 3, 
        "severity_value": 5489.9112, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_fastmnn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: isolated_label_asw\n  Worst score: -5489.9112%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_fastmnn isolated_label_asw", 
        "value": 0.6311, 
        "severity": 0, 
        "severity_value": 0.31555, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_fastmnn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: isolated_label_asw\n  Best score: 0.6311%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_mnn_correct isolated_label_asw", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_mnn_correct performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: isolated_label_asw\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_mnn_correct isolated_label_asw", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_mnn_correct performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: isolated_label_asw\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score bbknn isolated_label_asw", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method bbknn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: isolated_label_asw\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score bbknn isolated_label_asw", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method bbknn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: isolated_label_asw\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score combat isolated_label_asw", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method combat performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: isolated_label_asw\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score combat isolated_label_asw", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method combat performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: isolated_label_asw\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score geneformer isolated_label_asw", 
        "value": -0.1903, 
        "severity": 0, 
        "severity_value": 0.1903, 
        "code": "worst_score >= -1", 
        "message": "Method geneformer performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: isolated_label_asw\n  Worst score: -0.1903%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score geneformer isolated_label_asw", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method geneformer performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: isolated_label_asw\n  Best score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmony isolated_label_asw", 
        "value": -4901.6573, 
        "severity": 3, 
        "severity_value": 4901.6573, 
        "code": "worst_score >= -1", 
        "message": "Method harmony performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: isolated_label_asw\n  Worst score: -4901.6573%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmony isolated_label_asw", 
        "value": 0.5952, 
        "severity": 0, 
        "severity_value": 0.2976, 
        "code": "best_score <= 2", 
        "message": "Method harmony performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: isolated_label_asw\n  Best score: 0.5952%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmonypy isolated_label_asw", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method harmonypy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: isolated_label_asw\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmonypy isolated_label_asw", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method harmonypy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: isolated_label_asw\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score liger isolated_label_asw", 
        "value": -4345.8895, 
        "severity": 3, 
        "severity_value": 4345.8895, 
        "code": "worst_score >= -1", 
        "message": "Method liger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: isolated_label_asw\n  Worst score: -4345.8895%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score liger isolated_label_asw", 
        "value": 0.3764, 
        "severity": 0, 
        "severity_value": 0.1882, 
        "code": "best_score <= 2", 
        "message": "Method liger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: isolated_label_asw\n  Best score: 0.3764%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score mnnpy isolated_label_asw", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method mnnpy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: isolated_label_asw\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score mnnpy isolated_label_asw", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method mnnpy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: isolated_label_asw\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score pyliger isolated_label_asw", 
        "value": -4539.531, 
        "severity": 3, 
        "severity_value": 4539.531, 
        "code": "worst_score >= -1", 
        "message": "Method pyliger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: isolated_label_asw\n  Worst score: -4539.531%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score pyliger isolated_label_asw", 
        "value": 0.3798, 
        "severity": 0, 
        "severity_value": 0.1899, 
        "code": "best_score <= 2", 
        "message": "Method pyliger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: isolated_label_asw\n  Best score: 0.3798%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scalex isolated_label_asw", 
        "value": -5028.2724, 
        "severity": 3, 
        "severity_value": 5028.2724, 
        "code": "worst_score >= -1", 
        "message": "Method scalex performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: isolated_label_asw\n  Worst score: -5028.2724%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scalex isolated_label_asw", 
        "value": 0.4425, 
        "severity": 0, 
        "severity_value": 0.22125, 
        "code": "best_score <= 2", 
        "message": "Method scalex performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: isolated_label_asw\n  Best score: 0.4425%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanorama isolated_label_asw", 
        "value": -6299.0185, 
        "severity": 3, 
        "severity_value": 6299.0185, 
        "code": "worst_score >= -1", 
        "message": "Method scanorama performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: isolated_label_asw\n  Worst score: -6299.0185%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanorama isolated_label_asw", 
        "value": 0.2607, 
        "severity": 0, 
        "severity_value": 0.13035, 
        "code": "best_score <= 2", 
        "message": "Method scanorama performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: isolated_label_asw\n  Best score: 0.2607%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanvi isolated_label_asw", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scanvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: isolated_label_asw\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanvi isolated_label_asw", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method scanvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: isolated_label_asw\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scgpt isolated_label_asw", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scgpt performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt\n  Metric id: isolated_label_asw\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scgpt isolated_label_asw", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method scgpt performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt\n  Metric id: isolated_label_asw\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scimilarity isolated_label_asw", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scimilarity performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: isolated_label_asw\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scimilarity isolated_label_asw", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method scimilarity performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: isolated_label_asw\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scvi isolated_label_asw", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: isolated_label_asw\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scvi isolated_label_asw", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method scvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: isolated_label_asw\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score uce isolated_label_asw", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method uce performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: isolated_label_asw\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score uce isolated_label_asw", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method uce performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: isolated_label_asw\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types isolated_label_f1", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: isolated_label_f1\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types_jittered isolated_label_f1", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types_jittered performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: isolated_label_f1\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types_jittered isolated_label_f1", 
        "value": 1, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types_jittered performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: isolated_label_f1\n  Best score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration isolated_label_f1", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method no_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: isolated_label_f1\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration_batch isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration_batch isolated_label_f1", 
        "value": 0.9951, 
        "severity": 0, 
        "severity_value": 0.49755, 
        "code": "best_score <= 2", 
        "message": "Method no_integration_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: isolated_label_f1\n  Best score: 0.9951%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration isolated_label_f1", 
        "value": 0.0465, 
        "severity": 0, 
        "severity_value": 0.02325, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: isolated_label_f1\n  Best score: 0.0465%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_batch isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_batch isolated_label_f1", 
        "value": 0.0958, 
        "severity": 0, 
        "severity_value": 0.0479, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: isolated_label_f1\n  Best score: 0.0958%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_cell_type isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_cell_type performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_cell_type isolated_label_f1", 
        "value": 0.999, 
        "severity": 0, 
        "severity_value": 0.4995, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_cell_type performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: isolated_label_f1\n  Best score: 0.999%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_fastmnn isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_fastmnn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_fastmnn isolated_label_f1", 
        "value": 0.881, 
        "severity": 0, 
        "severity_value": 0.4405, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_fastmnn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: isolated_label_f1\n  Best score: 0.881%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_mnn_correct isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_mnn_correct performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_mnn_correct isolated_label_f1", 
        "value": 0.8442, 
        "severity": 0, 
        "severity_value": 0.4221, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_mnn_correct performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: isolated_label_f1\n  Best score: 0.8442%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score bbknn isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method bbknn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score bbknn isolated_label_f1", 
        "value": 0.8877, 
        "severity": 0, 
        "severity_value": 0.44385, 
        "code": "best_score <= 2", 
        "message": "Method bbknn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: isolated_label_f1\n  Best score: 0.8877%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score combat isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method combat performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score combat isolated_label_f1", 
        "value": 0.9665, 
        "severity": 0, 
        "severity_value": 0.48325, 
        "code": "best_score <= 2", 
        "message": "Method combat performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: isolated_label_f1\n  Best score: 0.9665%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score geneformer isolated_label_f1", 
        "value": -0.029, 
        "severity": 0, 
        "severity_value": 0.029, 
        "code": "worst_score >= -1", 
        "message": "Method geneformer performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: isolated_label_f1\n  Worst score: -0.029%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score geneformer isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method geneformer performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: isolated_label_f1\n  Best score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmony isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method harmony performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmony isolated_label_f1", 
        "value": 0.9912, 
        "severity": 0, 
        "severity_value": 0.4956, 
        "code": "best_score <= 2", 
        "message": "Method harmony performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: isolated_label_f1\n  Best score: 0.9912%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmonypy isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method harmonypy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmonypy isolated_label_f1", 
        "value": 0.9831, 
        "severity": 0, 
        "severity_value": 0.49155, 
        "code": "best_score <= 2", 
        "message": "Method harmonypy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: isolated_label_f1\n  Best score: 0.9831%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score liger isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method liger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score liger isolated_label_f1", 
        "value": 0.8382, 
        "severity": 0, 
        "severity_value": 0.4191, 
        "code": "best_score <= 2", 
        "message": "Method liger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: isolated_label_f1\n  Best score: 0.8382%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score mnnpy isolated_label_f1", 
        "value": -0.0046, 
        "severity": 0, 
        "severity_value": 0.0046, 
        "code": "worst_score >= -1", 
        "message": "Method mnnpy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: isolated_label_f1\n  Worst score: -0.0046%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score mnnpy isolated_label_f1", 
        "value": 0.3558, 
        "severity": 0, 
        "severity_value": 0.1779, 
        "code": "best_score <= 2", 
        "message": "Method mnnpy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: isolated_label_f1\n  Best score: 0.3558%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score pyliger isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method pyliger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score pyliger isolated_label_f1", 
        "value": 0.8609, 
        "severity": 0, 
        "severity_value": 0.43045, 
        "code": "best_score <= 2", 
        "message": "Method pyliger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: isolated_label_f1\n  Best score: 0.8609%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scalex isolated_label_f1", 
        "value": -0.0002, 
        "severity": 0, 
        "severity_value": 0.0002, 
        "code": "worst_score >= -1", 
        "message": "Method scalex performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: isolated_label_f1\n  Worst score: -0.0002%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scalex isolated_label_f1", 
        "value": 0.6113, 
        "severity": 0, 
        "severity_value": 0.30565, 
        "code": "best_score <= 2", 
        "message": "Method scalex performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: isolated_label_f1\n  Best score: 0.6113%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanorama isolated_label_f1", 
        "value": -0.0088, 
        "severity": 0, 
        "severity_value": 0.0088, 
        "code": "worst_score >= -1", 
        "message": "Method scanorama performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: isolated_label_f1\n  Worst score: -0.0088%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanorama isolated_label_f1", 
        "value": 1.4555, 
        "severity": 0, 
        "severity_value": 0.72775, 
        "code": "best_score <= 2", 
        "message": "Method scanorama performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: isolated_label_f1\n  Best score: 1.4555%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanvi isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scanvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanvi isolated_label_f1", 
        "value": 0.9624, 
        "severity": 0, 
        "severity_value": 0.4812, 
        "code": "best_score <= 2", 
        "message": "Method scanvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: isolated_label_f1\n  Best score: 0.9624%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scgpt isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scgpt performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scgpt isolated_label_f1", 
        "value": 0.8035, 
        "severity": 0, 
        "severity_value": 0.40175, 
        "code": "best_score <= 2", 
        "message": "Method scgpt performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt\n  Metric id: isolated_label_f1\n  Best score: 0.8035%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scimilarity isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scimilarity performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scimilarity isolated_label_f1", 
        "value": 0.8597, 
        "severity": 0, 
        "severity_value": 0.42985, 
        "code": "best_score <= 2", 
        "message": "Method scimilarity performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: isolated_label_f1\n  Best score: 0.8597%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scvi isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scvi isolated_label_f1", 
        "value": 1.0005, 
        "severity": 0, 
        "severity_value": 0.50025, 
        "code": "best_score <= 2", 
        "message": "Method scvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: isolated_label_f1\n  Best score: 1.0005%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score uce isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method uce performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score uce isolated_label_f1", 
        "value": 0.8108, 
        "severity": 0, 
        "severity_value": 0.4054, 
        "code": "best_score <= 2", 
        "message": "Method uce performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: isolated_label_f1\n  Best score: 0.8108%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types kbet", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: kbet\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types_jittered kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types_jittered performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types_jittered kbet", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types_jittered performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: kbet\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration kbet", 
        "value": 0.72, 
        "severity": 0, 
        "severity_value": 0.36, 
        "code": "best_score <= 2", 
        "message": "Method no_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: kbet\n  Best score: 0.72%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration_batch kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration_batch kbet", 
        "value": 0.5837, 
        "severity": 0, 
        "severity_value": 0.29185, 
        "code": "best_score <= 2", 
        "message": "Method no_integration_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: kbet\n  Best score: 0.5837%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration kbet", 
        "value": 0.4099, 
        "severity": 0, 
        "severity_value": 0.20495, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: kbet\n  Best score: 0.4099%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_batch kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_batch kbet", 
        "value": 0.1095, 
        "severity": 0, 
        "severity_value": 0.05475, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: kbet\n  Best score: 0.1095%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_cell_type kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_cell_type performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_cell_type kbet", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_cell_type performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: kbet\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_fastmnn kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_fastmnn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_fastmnn kbet", 
        "value": 0.844, 
        "severity": 0, 
        "severity_value": 0.422, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_fastmnn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: kbet\n  Best score: 0.844%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_mnn_correct kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_mnn_correct performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_mnn_correct kbet", 
        "value": 0.3026, 
        "severity": 0, 
        "severity_value": 0.1513, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_mnn_correct performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: kbet\n  Best score: 0.3026%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score bbknn kbet", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method bbknn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: kbet\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score bbknn kbet", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method bbknn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: kbet\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score combat kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method combat performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score combat kbet", 
        "value": 0.6613, 
        "severity": 0, 
        "severity_value": 0.33065, 
        "code": "best_score <= 2", 
        "message": "Method combat performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: kbet\n  Best score: 0.6613%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score geneformer kbet", 
        "value": -0.0131, 
        "severity": 0, 
        "severity_value": 0.0131, 
        "code": "worst_score >= -1", 
        "message": "Method geneformer performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: kbet\n  Worst score: -0.0131%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score geneformer kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method geneformer performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: kbet\n  Best score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmony kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method harmony performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmony kbet", 
        "value": 0.7653, 
        "severity": 0, 
        "severity_value": 0.38265, 
        "code": "best_score <= 2", 
        "message": "Method harmony performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: kbet\n  Best score: 0.7653%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmonypy kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method harmonypy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmonypy kbet", 
        "value": 0.7919, 
        "severity": 0, 
        "severity_value": 0.39595, 
        "code": "best_score <= 2", 
        "message": "Method harmonypy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: kbet\n  Best score: 0.7919%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score liger kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method liger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score liger kbet", 
        "value": 0.7914, 
        "severity": 0, 
        "severity_value": 0.3957, 
        "code": "best_score <= 2", 
        "message": "Method liger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: kbet\n  Best score: 0.7914%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score mnnpy kbet", 
        "value": -0.013, 
        "severity": 0, 
        "severity_value": 0.013, 
        "code": "worst_score >= -1", 
        "message": "Method mnnpy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: kbet\n  Worst score: -0.013%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score mnnpy kbet", 
        "value": 0.0889, 
        "severity": 0, 
        "severity_value": 0.04445, 
        "code": "best_score <= 2", 
        "message": "Method mnnpy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: kbet\n  Best score: 0.0889%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score pyliger kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method pyliger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score pyliger kbet", 
        "value": 0.8074, 
        "severity": 0, 
        "severity_value": 0.4037, 
        "code": "best_score <= 2", 
        "message": "Method pyliger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: kbet\n  Best score: 0.8074%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scalex kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scalex performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scalex kbet", 
        "value": 0.6152, 
        "severity": 0, 
        "severity_value": 0.3076, 
        "code": "best_score <= 2", 
        "message": "Method scalex performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: kbet\n  Best score: 0.6152%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanorama kbet", 
        "value": -0.013, 
        "severity": 0, 
        "severity_value": 0.013, 
        "code": "worst_score >= -1", 
        "message": "Method scanorama performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: kbet\n  Worst score: -0.013%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanorama kbet", 
        "value": 0.1144, 
        "severity": 0, 
        "severity_value": 0.0572, 
        "code": "best_score <= 2", 
        "message": "Method scanorama performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: kbet\n  Best score: 0.1144%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanvi kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scanvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanvi kbet", 
        "value": 0.8049, 
        "severity": 0, 
        "severity_value": 0.40245, 
        "code": "best_score <= 2", 
        "message": "Method scanvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: kbet\n  Best score: 0.8049%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scgpt kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scgpt performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scgpt kbet", 
        "value": 0.3639, 
        "severity": 0, 
        "severity_value": 0.18195, 
        "code": "best_score <= 2", 
        "message": "Method scgpt performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt\n  Metric id: kbet\n  Best score: 0.3639%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scimilarity kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scimilarity performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scimilarity kbet", 
        "value": 0.3709, 
        "severity": 0, 
        "severity_value": 0.18545, 
        "code": "best_score <= 2", 
        "message": "Method scimilarity performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: kbet\n  Best score: 0.3709%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scvi kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scvi kbet", 
        "value": 0.7798, 
        "severity": 0, 
        "severity_value": 0.3899, 
        "code": "best_score <= 2", 
        "message": "Method scvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: kbet\n  Best score: 0.7798%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score uce kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method uce performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score uce kbet", 
        "value": 0.2182, 
        "severity": 0, 
        "severity_value": 0.1091, 
        "code": "best_score <= 2", 
        "message": "Method uce performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: kbet\n  Best score: 0.2182%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types ilisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: ilisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types ilisi", 
        "value": 0.9562, 
        "severity": 0, 
        "severity_value": 0.4781, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: ilisi\n  Best score: 0.9562%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types_jittered ilisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types_jittered performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: ilisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types_jittered ilisi", 
        "value": 0.9453, 
        "severity": 0, 
        "severity_value": 0.47265, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types_jittered performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: ilisi\n  Best score: 0.9453%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration ilisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: ilisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration ilisi", 
        "value": 0.1493, 
        "severity": 0, 
        "severity_value": 0.07465, 
        "code": "best_score <= 2", 
        "message": "Method no_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: ilisi\n  Best score: 0.1493%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration_batch ilisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: ilisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration_batch ilisi", 
        "value": 0.0097, 
        "severity": 0, 
        "severity_value": 0.00485, 
        "code": "best_score <= 2", 
        "message": "Method no_integration_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: ilisi\n  Best score: 0.0097%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration ilisi", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: ilisi\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration ilisi", 
        "value": 1, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: ilisi\n  Best score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_batch ilisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: ilisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_batch ilisi", 
        "value": 0.1496, 
        "severity": 0, 
        "severity_value": 0.0748, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: ilisi\n  Best score: 0.1496%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_cell_type ilisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_cell_type performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: ilisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_cell_type ilisi", 
        "value": 0.9365, 
        "severity": 0, 
        "severity_value": 0.46825, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_cell_type performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: ilisi\n  Best score: 0.9365%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_fastmnn ilisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_fastmnn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: ilisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_fastmnn ilisi", 
        "value": 0.5642, 
        "severity": 0, 
        "severity_value": 0.2821, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_fastmnn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: ilisi\n  Best score: 0.5642%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_mnn_correct ilisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_mnn_correct performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: ilisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_mnn_correct ilisi", 
        "value": 0.658, 
        "severity": 0, 
        "severity_value": 0.329, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_mnn_correct performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: ilisi\n  Best score: 0.658%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score bbknn ilisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method bbknn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: ilisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score bbknn ilisi", 
        "value": 35.9252, 
        "severity": 3, 
        "severity_value": 17.9626, 
        "code": "best_score <= 2", 
        "message": "Method bbknn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: ilisi\n  Best score: 35.9252%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score combat ilisi", 
        "value": -0.069, 
        "severity": 0, 
        "severity_value": 0.069, 
        "code": "worst_score >= -1", 
        "message": "Method combat performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: ilisi\n  Worst score: -0.069%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score combat ilisi", 
        "value": 0.333, 
        "severity": 0, 
        "severity_value": 0.1665, 
        "code": "best_score <= 2", 
        "message": "Method combat performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: ilisi\n  Best score: 0.333%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score geneformer ilisi", 
        "value": -0.017, 
        "severity": 0, 
        "severity_value": 0.017, 
        "code": "worst_score >= -1", 
        "message": "Method geneformer performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: ilisi\n  Worst score: -0.017%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score geneformer ilisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method geneformer performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: ilisi\n  Best score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmony ilisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method harmony performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: ilisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmony ilisi", 
        "value": 0.6977, 
        "severity": 0, 
        "severity_value": 0.34885, 
        "code": "best_score <= 2", 
        "message": "Method harmony performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: ilisi\n  Best score: 0.6977%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmonypy ilisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method harmonypy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: ilisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmonypy ilisi", 
        "value": 0.6935, 
        "severity": 0, 
        "severity_value": 0.34675, 
        "code": "best_score <= 2", 
        "message": "Method harmonypy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: ilisi\n  Best score: 0.6935%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score liger ilisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method liger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: ilisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score liger ilisi", 
        "value": 0.8821, 
        "severity": 0, 
        "severity_value": 0.44105, 
        "code": "best_score <= 2", 
        "message": "Method liger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: ilisi\n  Best score: 0.8821%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score mnnpy ilisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method mnnpy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: ilisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score mnnpy ilisi", 
        "value": 0.6189, 
        "severity": 0, 
        "severity_value": 0.30945, 
        "code": "best_score <= 2", 
        "message": "Method mnnpy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: ilisi\n  Best score: 0.6189%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score pyliger ilisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method pyliger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: ilisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score pyliger ilisi", 
        "value": 0.8847, 
        "severity": 0, 
        "severity_value": 0.44235, 
        "code": "best_score <= 2", 
        "message": "Method pyliger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: ilisi\n  Best score: 0.8847%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scalex ilisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scalex performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: ilisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scalex ilisi", 
        "value": 0.6423, 
        "severity": 0, 
        "severity_value": 0.32115, 
        "code": "best_score <= 2", 
        "message": "Method scalex performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: ilisi\n  Best score: 0.6423%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanorama ilisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scanorama performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: ilisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanorama ilisi", 
        "value": 0.9754, 
        "severity": 0, 
        "severity_value": 0.4877, 
        "code": "best_score <= 2", 
        "message": "Method scanorama performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: ilisi\n  Best score: 0.9754%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanvi ilisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scanvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: ilisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanvi ilisi", 
        "value": 0.6677, 
        "severity": 0, 
        "severity_value": 0.33385, 
        "code": "best_score <= 2", 
        "message": "Method scanvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: ilisi\n  Best score: 0.6677%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scgpt ilisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scgpt performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt\n  Metric id: ilisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scgpt ilisi", 
        "value": 0.4832, 
        "severity": 0, 
        "severity_value": 0.2416, 
        "code": "best_score <= 2", 
        "message": "Method scgpt performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt\n  Metric id: ilisi\n  Best score: 0.4832%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scimilarity ilisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scimilarity performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: ilisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scimilarity ilisi", 
        "value": 0.472, 
        "severity": 0, 
        "severity_value": 0.236, 
        "code": "best_score <= 2", 
        "message": "Method scimilarity performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: ilisi\n  Best score: 0.472%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scvi ilisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: ilisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scvi ilisi", 
        "value": 0.6472, 
        "severity": 0, 
        "severity_value": 0.3236, 
        "code": "best_score <= 2", 
        "message": "Method scvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: ilisi\n  Best score: 0.6472%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score uce ilisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method uce performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: ilisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score uce ilisi", 
        "value": 0.4623, 
        "severity": 0, 
        "severity_value": 0.23115, 
        "code": "best_score <= 2", 
        "message": "Method uce performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: ilisi\n  Best score: 0.4623%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types clisi", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: clisi\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types clisi", 
        "value": 1, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: clisi\n  Best score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types_jittered clisi", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types_jittered performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: clisi\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types_jittered clisi", 
        "value": 1, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types_jittered performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: clisi\n  Best score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration clisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: clisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration clisi", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method no_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: clisi\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration_batch clisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: clisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration_batch clisi", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method no_integration_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: clisi\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration clisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: clisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration clisi", 
        "value": 0.0124, 
        "severity": 0, 
        "severity_value": 0.0062, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: clisi\n  Best score: 0.0124%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_batch clisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: clisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_batch clisi", 
        "value": 0.4238, 
        "severity": 0, 
        "severity_value": 0.2119, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: clisi\n  Best score: 0.4238%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_cell_type clisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_cell_type performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: clisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_cell_type clisi", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_cell_type performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: clisi\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_fastmnn clisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_fastmnn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: clisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_fastmnn clisi", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_fastmnn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: clisi\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_mnn_correct clisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_mnn_correct performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: clisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_mnn_correct clisi", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_mnn_correct performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: clisi\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score bbknn clisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method bbknn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: clisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score bbknn clisi", 
        "value": 0.9452, 
        "severity": 0, 
        "severity_value": 0.4726, 
        "code": "best_score <= 2", 
        "message": "Method bbknn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: clisi\n  Best score: 0.9452%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score combat clisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method combat performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: clisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score combat clisi", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method combat performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: clisi\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score geneformer clisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method geneformer performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: clisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score geneformer clisi", 
        "value": 0.0636, 
        "severity": 0, 
        "severity_value": 0.0318, 
        "code": "best_score <= 2", 
        "message": "Method geneformer performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: clisi\n  Best score: 0.0636%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmony clisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method harmony performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: clisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmony clisi", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method harmony performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: clisi\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmonypy clisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method harmonypy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: clisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmonypy clisi", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method harmonypy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: clisi\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score liger clisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method liger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: clisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score liger clisi", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method liger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: clisi\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score mnnpy clisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method mnnpy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: clisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score mnnpy clisi", 
        "value": 0.6024, 
        "severity": 0, 
        "severity_value": 0.3012, 
        "code": "best_score <= 2", 
        "message": "Method mnnpy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: clisi\n  Best score: 0.6024%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score pyliger clisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method pyliger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: clisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score pyliger clisi", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method pyliger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: clisi\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scalex clisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scalex performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: clisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scalex clisi", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method scalex performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: clisi\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanorama clisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scanorama performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: clisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanorama clisi", 
        "value": 0.5768, 
        "severity": 0, 
        "severity_value": 0.2884, 
        "code": "best_score <= 2", 
        "message": "Method scanorama performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: clisi\n  Best score: 0.5768%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanvi clisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scanvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: clisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanvi clisi", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method scanvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: clisi\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scgpt clisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scgpt performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt\n  Metric id: clisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scgpt clisi", 
        "value": 0.9974, 
        "severity": 0, 
        "severity_value": 0.4987, 
        "code": "best_score <= 2", 
        "message": "Method scgpt performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt\n  Metric id: clisi\n  Best score: 0.9974%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scimilarity clisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scimilarity performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: clisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scimilarity clisi", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method scimilarity performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: clisi\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scvi clisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: clisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scvi clisi", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method scvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: clisi\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score uce clisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method uce performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: clisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score uce clisi", 
        "value": 0.9968, 
        "severity": 0, 
        "severity_value": 0.4984, 
        "code": "best_score <= 2", 
        "message": "Method uce performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: clisi\n  Best score: 0.9968%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types pcr", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: pcr\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types pcr", 
        "value": 0.7115, 
        "severity": 0, 
        "severity_value": 0.35575, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: pcr\n  Best score: 0.7115%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types_jittered pcr", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types_jittered performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: pcr\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types_jittered pcr", 
        "value": 0.7116, 
        "severity": 0, 
        "severity_value": 0.3558, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types_jittered performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: pcr\n  Best score: 0.7116%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration pcr", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: pcr\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration pcr", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method no_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: pcr\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration_batch pcr", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: pcr\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration_batch pcr", 
        "value": 1, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method no_integration_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: pcr\n  Best score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration pcr", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: pcr\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration pcr", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: pcr\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_batch pcr", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: pcr\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_batch pcr", 
        "value": 0.0001, 
        "severity": 0, 
        "severity_value": 5e-05, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: pcr\n  Best score: 0.0001%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_cell_type pcr", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_cell_type performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: pcr\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_cell_type pcr", 
        "value": 0.7806, 
        "severity": 0, 
        "severity_value": 0.3903, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_cell_type performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: pcr\n  Best score: 0.7806%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_fastmnn pcr", 
        "value": -0.3338, 
        "severity": 0, 
        "severity_value": 0.3338, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_fastmnn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: pcr\n  Worst score: -0.3338%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_fastmnn pcr", 
        "value": 0.5339, 
        "severity": 0, 
        "severity_value": 0.26695, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_fastmnn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: pcr\n  Best score: 0.5339%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_mnn_correct pcr", 
        "value": -0.3298, 
        "severity": 0, 
        "severity_value": 0.3298, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_mnn_correct performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: pcr\n  Worst score: -0.3298%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_mnn_correct pcr", 
        "value": 0.5492, 
        "severity": 0, 
        "severity_value": 0.2746, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_mnn_correct performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: pcr\n  Best score: 0.5492%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score bbknn pcr", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method bbknn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: pcr\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score bbknn pcr", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method bbknn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: pcr\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score combat pcr", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method combat performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: pcr\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score combat pcr", 
        "value": 1.0006, 
        "severity": 0, 
        "severity_value": 0.5003, 
        "code": "best_score <= 2", 
        "message": "Method combat performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: pcr\n  Best score: 1.0006%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score geneformer pcr", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method geneformer performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: pcr\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score geneformer pcr", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method geneformer performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: pcr\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmony pcr", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method harmony performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: pcr\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmony pcr", 
        "value": 0.701, 
        "severity": 0, 
        "severity_value": 0.3505, 
        "code": "best_score <= 2", 
        "message": "Method harmony performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: pcr\n  Best score: 0.701%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmonypy pcr", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method harmonypy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: pcr\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmonypy pcr", 
        "value": 0.7142, 
        "severity": 0, 
        "severity_value": 0.3571, 
        "code": "best_score <= 2", 
        "message": "Method harmonypy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: pcr\n  Best score: 0.7142%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score liger pcr", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method liger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: pcr\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score liger pcr", 
        "value": 0.895, 
        "severity": 0, 
        "severity_value": 0.4475, 
        "code": "best_score <= 2", 
        "message": "Method liger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: pcr\n  Best score: 0.895%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score mnnpy pcr", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method mnnpy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: pcr\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score mnnpy pcr", 
        "value": 0.6587, 
        "severity": 0, 
        "severity_value": 0.32935, 
        "code": "best_score <= 2", 
        "message": "Method mnnpy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: pcr\n  Best score: 0.6587%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score pyliger pcr", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method pyliger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: pcr\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score pyliger pcr", 
        "value": 0.9193, 
        "severity": 0, 
        "severity_value": 0.45965, 
        "code": "best_score <= 2", 
        "message": "Method pyliger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: pcr\n  Best score: 0.9193%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scalex pcr", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scalex performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: pcr\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scalex pcr", 
        "value": 0.9999, 
        "severity": 0, 
        "severity_value": 0.49995, 
        "code": "best_score <= 2", 
        "message": "Method scalex performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: pcr\n  Best score: 0.9999%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanorama pcr", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scanorama performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: pcr\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanorama pcr", 
        "value": 0.9994, 
        "severity": 0, 
        "severity_value": 0.4997, 
        "code": "best_score <= 2", 
        "message": "Method scanorama performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: pcr\n  Best score: 0.9994%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanvi pcr", 
        "value": -0.001, 
        "severity": 0, 
        "severity_value": 0.001, 
        "code": "worst_score >= -1", 
        "message": "Method scanvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: pcr\n  Worst score: -0.001%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanvi pcr", 
        "value": 0.6393, 
        "severity": 0, 
        "severity_value": 0.31965, 
        "code": "best_score <= 2", 
        "message": "Method scanvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: pcr\n  Best score: 0.6393%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scgpt pcr", 
        "value": -1.4042, 
        "severity": 1, 
        "severity_value": 1.4042, 
        "code": "worst_score >= -1", 
        "message": "Method scgpt performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt\n  Metric id: pcr\n  Worst score: -1.4042%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scgpt pcr", 
        "value": 0.1893, 
        "severity": 0, 
        "severity_value": 0.09465, 
        "code": "best_score <= 2", 
        "message": "Method scgpt performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt\n  Metric id: pcr\n  Best score: 0.1893%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scimilarity pcr", 
        "value": -0.5568, 
        "severity": 0, 
        "severity_value": 0.5568, 
        "code": "worst_score >= -1", 
        "message": "Method scimilarity performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: pcr\n  Worst score: -0.5568%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scimilarity pcr", 
        "value": 0.3969, 
        "severity": 0, 
        "severity_value": 0.19845, 
        "code": "best_score <= 2", 
        "message": "Method scimilarity performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: pcr\n  Best score: 0.3969%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scvi pcr", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: pcr\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scvi pcr", 
        "value": 0.9345, 
        "severity": 0, 
        "severity_value": 0.46725, 
        "code": "best_score <= 2", 
        "message": "Method scvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: pcr\n  Best score: 0.9345%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score uce pcr", 
        "value": -1.0291, 
        "severity": 1, 
        "severity_value": 1.0291, 
        "code": "worst_score >= -1", 
        "message": "Method uce performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: pcr\n  Worst score: -1.0291%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score uce pcr", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method uce performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: pcr\n  Best score: 0.0%\n"
    }
]