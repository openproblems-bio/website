[
    {
        "task_id": "task_batch_integration", 
        "category": "Task info", 
        "name": "Pct 'task_id' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing([task_info], field)", 
        "message": "Task metadata field 'task_id' should be defined\n  Task id: task_batch_integration\n  Field: task_id\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Task info", 
        "name": "Pct 'task_name' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing([task_info], field)", 
        "message": "Task metadata field 'task_name' should be defined\n  Task id: task_batch_integration\n  Field: task_name\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Task info", 
        "name": "Pct 'task_summary' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing([task_info], field)", 
        "message": "Task metadata field 'task_summary' should be defined\n  Task id: task_batch_integration\n  Field: task_summary\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Task info", 
        "name": "Pct 'task_description' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing([task_info], field)", 
        "message": "Task metadata field 'task_description' should be defined\n  Task id: task_batch_integration\n  Field: task_description\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Method info", 
        "name": "Pct 'task_id' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(method_info, field)", 
        "message": "Method metadata field 'task_id' should be defined\n  Task id: task_batch_integration\n  Field: task_id\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Method info", 
        "name": "Pct 'commit_sha' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(method_info, field)", 
        "message": "Method metadata field 'commit_sha' should be defined\n  Task id: task_batch_integration\n  Field: commit_sha\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Method info", 
        "name": "Pct 'method_id' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(method_info, field)", 
        "message": "Method metadata field 'method_id' should be defined\n  Task id: task_batch_integration\n  Field: method_id\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Method info", 
        "name": "Pct 'method_name' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(method_info, field)", 
        "message": "Method metadata field 'method_name' should be defined\n  Task id: task_batch_integration\n  Field: method_name\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Method info", 
        "name": "Pct 'method_summary' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(method_info, field)", 
        "message": "Method metadata field 'method_summary' should be defined\n  Task id: task_batch_integration\n  Field: method_summary\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Method info", 
        "name": "Pct 'paper_reference' missing", 
        "value": 0.7307692307692307, 
        "severity": 2, 
        "severity_value": 3.0, 
        "code": "percent_missing(method_info, field)", 
        "message": "Method metadata field 'paper_reference' should be defined\n  Task id: task_batch_integration\n  Field: paper_reference\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Method info", 
        "name": "Pct 'is_baseline' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(method_info, field)", 
        "message": "Method metadata field 'is_baseline' should be defined\n  Task id: task_batch_integration\n  Field: is_baseline\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Metric info", 
        "name": "Pct 'task_id' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(metric_info, field)", 
        "message": "Metric metadata field 'task_id' should be defined\n  Task id: task_batch_integration\n  Field: task_id\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Metric info", 
        "name": "Pct 'commit_sha' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(metric_info, field)", 
        "message": "Metric metadata field 'commit_sha' should be defined\n  Task id: task_batch_integration\n  Field: commit_sha\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Metric info", 
        "name": "Pct 'metric_id' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(metric_info, field)", 
        "message": "Metric metadata field 'metric_id' should be defined\n  Task id: task_batch_integration\n  Field: metric_id\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Metric info", 
        "name": "Pct 'metric_name' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(metric_info, field)", 
        "message": "Metric metadata field 'metric_name' should be defined\n  Task id: task_batch_integration\n  Field: metric_name\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Metric info", 
        "name": "Pct 'metric_summary' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(metric_info, field)", 
        "message": "Metric metadata field 'metric_summary' should be defined\n  Task id: task_batch_integration\n  Field: metric_summary\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Metric info", 
        "name": "Pct 'paper_reference' missing", 
        "value": 1.0, 
        "severity": 2, 
        "severity_value": 3.0, 
        "code": "percent_missing(metric_info, field)", 
        "message": "Metric metadata field 'paper_reference' should be defined\n  Task id: task_batch_integration\n  Field: paper_reference\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Metric info", 
        "name": "Pct 'maximize' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(metric_info, field)", 
        "message": "Metric metadata field 'maximize' should be defined\n  Task id: task_batch_integration\n  Field: maximize\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Dataset info", 
        "name": "Pct 'task_id' missing", 
        "value": 1.0, 
        "severity": 2, 
        "severity_value": 3.0, 
        "code": "percent_missing(dataset_info, field)", 
        "message": "Dataset metadata field 'task_id' should be defined\n  Task id: task_batch_integration\n  Field: task_id\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Dataset info", 
        "name": "Pct 'dataset_id' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(dataset_info, field)", 
        "message": "Dataset metadata field 'dataset_id' should be defined\n  Task id: task_batch_integration\n  Field: dataset_id\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Dataset info", 
        "name": "Pct 'dataset_name' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(dataset_info, field)", 
        "message": "Dataset metadata field 'dataset_name' should be defined\n  Task id: task_batch_integration\n  Field: dataset_name\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Dataset info", 
        "name": "Pct 'dataset_summary' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(dataset_info, field)", 
        "message": "Dataset metadata field 'dataset_summary' should be defined\n  Task id: task_batch_integration\n  Field: dataset_summary\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Dataset info", 
        "name": "Pct 'data_reference' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(dataset_info, field)", 
        "message": "Dataset metadata field 'data_reference' should be defined\n  Task id: task_batch_integration\n  Field: data_reference\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Dataset info", 
        "name": "Pct 'data_url' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(dataset_info, field)", 
        "message": "Dataset metadata field 'data_url' should be defined\n  Task id: task_batch_integration\n  Field: data_url\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw data", 
        "name": "Number of results", 
        "value": 156, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "len(results) == len(method_info) * len(metric_info) * len(dataset_info)", 
        "message": "Number of results should be equal to #methods × #metrics × #datasets.\n  Task id: task_batch_integration\n  Number of results: 156\n  Number of methods: 26\n  Number of metrics: 13\n  Number of datasets: 6\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Metric 'asw_batch' %missing", 
        "value": 0.29487179487179493, 
        "severity": 2, 
        "severity_value": 2.9487179487179493, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  Metric id: asw_batch\n  Percentage missing: 29%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Metric 'asw_label' %missing", 
        "value": 0.34615384615384615, 
        "severity": 3, 
        "severity_value": 3.4615384615384612, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  Metric id: asw_label\n  Percentage missing: 35%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Metric 'cell_cycle_conservation' %missing", 
        "value": 0.32692307692307687, 
        "severity": 3, 
        "severity_value": 3.2692307692307687, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  Metric id: cell_cycle_conservation\n  Percentage missing: 33%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Metric 'ari' %missing", 
        "value": 0.2628205128205128, 
        "severity": 2, 
        "severity_value": 2.6282051282051277, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  Metric id: ari\n  Percentage missing: 26%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Metric 'nmi' %missing", 
        "value": 0.2628205128205128, 
        "severity": 2, 
        "severity_value": 2.6282051282051277, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  Metric id: nmi\n  Percentage missing: 26%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Metric 'graph_connectivity' %missing", 
        "value": 0.25, 
        "severity": 2, 
        "severity_value": 2.5, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  Metric id: graph_connectivity\n  Percentage missing: 25%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Metric 'hvg_overlap' %missing", 
        "value": 0.7628205128205128, 
        "severity": 3, 
        "severity_value": 7.628205128205128, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  Metric id: hvg_overlap\n  Percentage missing: 76%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Metric 'isolated_label_asw' %missing", 
        "value": 0.5192307692307692, 
        "severity": 3, 
        "severity_value": 5.192307692307692, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  Metric id: isolated_label_asw\n  Percentage missing: 52%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Metric 'isolated_label_f1' %missing", 
        "value": 0.39743589743589747, 
        "severity": 3, 
        "severity_value": 3.9743589743589745, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  Metric id: isolated_label_f1\n  Percentage missing: 40%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Metric 'kbet' %missing", 
        "value": 0.46153846153846156, 
        "severity": 3, 
        "severity_value": 4.615384615384615, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  Metric id: kbet\n  Percentage missing: 46%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Metric 'ilisi' %missing", 
        "value": 0.28205128205128205, 
        "severity": 2, 
        "severity_value": 2.8205128205128203, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  Metric id: ilisi\n  Percentage missing: 28%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Metric 'clisi' %missing", 
        "value": 0.28205128205128205, 
        "severity": 2, 
        "severity_value": 2.8205128205128203, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  Metric id: clisi\n  Percentage missing: 28%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Metric 'pcr' %missing", 
        "value": 0.28846153846153844, 
        "severity": 2, 
        "severity_value": 2.884615384615384, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  Metric id: pcr\n  Percentage missing: 29%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'embed_cell_types' %missing", 
        "value": 0.28205128205128205, 
        "severity": 2, 
        "severity_value": 2.8205128205128203, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: embed_cell_types\n  Percentage missing: 28%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'embed_cell_types_jittered' %missing", 
        "value": 0.16666666666666663, 
        "severity": 1, 
        "severity_value": 1.6666666666666663, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: embed_cell_types_jittered\n  Percentage missing: 17%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'no_integration' %missing", 
        "value": 0.15384615384615385, 
        "severity": 1, 
        "severity_value": 1.5384615384615385, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: no_integration\n  Percentage missing: 15%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'no_integration_batch' %missing", 
        "value": 0.1282051282051282, 
        "severity": 1, 
        "severity_value": 1.282051282051282, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: no_integration_batch\n  Percentage missing: 13%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'shuffle_integration' %missing", 
        "value": 0.0641025641025641, 
        "severity": 0, 
        "severity_value": 0.641025641025641, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: shuffle_integration\n  Percentage missing: 6%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'shuffle_integration_by_batch' %missing", 
        "value": 0.14102564102564108, 
        "severity": 1, 
        "severity_value": 1.4102564102564108, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: shuffle_integration_by_batch\n  Percentage missing: 14%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'shuffle_integration_by_cell_type' %missing", 
        "value": 0.0641025641025641, 
        "severity": 0, 
        "severity_value": 0.641025641025641, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: shuffle_integration_by_cell_type\n  Percentage missing: 6%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'batchelor_fastmnn' %missing", 
        "value": 0.14102564102564108, 
        "severity": 1, 
        "severity_value": 1.4102564102564108, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: batchelor_fastmnn\n  Percentage missing: 14%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'batchelor_mnn_correct' %missing", 
        "value": 1.0, 
        "severity": 3, 
        "severity_value": 10.0, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: batchelor_mnn_correct\n  Percentage missing: 100%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'bbknn' %missing", 
        "value": 0.6025641025641025, 
        "severity": 3, 
        "severity_value": 6.025641025641025, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: bbknn\n  Percentage missing: 60%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'combat' %missing", 
        "value": 0.07692307692307687, 
        "severity": 0, 
        "severity_value": 0.7692307692307687, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: combat\n  Percentage missing: 8%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'geneformer' %missing", 
        "value": 0.5897435897435898, 
        "severity": 3, 
        "severity_value": 5.897435897435897, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: geneformer\n  Percentage missing: 59%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'harmony' %missing", 
        "value": 0.17948717948717952, 
        "severity": 1, 
        "severity_value": 1.7948717948717952, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: harmony\n  Percentage missing: 18%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'harmonypy' %missing", 
        "value": 0.16666666666666663, 
        "severity": 1, 
        "severity_value": 1.6666666666666663, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: harmonypy\n  Percentage missing: 17%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'liger' %missing", 
        "value": 0.29487179487179493, 
        "severity": 2, 
        "severity_value": 2.9487179487179493, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: liger\n  Percentage missing: 29%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'mnnpy' %missing", 
        "value": 0.858974358974359, 
        "severity": 3, 
        "severity_value": 8.58974358974359, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: mnnpy\n  Percentage missing: 86%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'pyliger' %missing", 
        "value": 0.42307692307692313, 
        "severity": 3, 
        "severity_value": 4.230769230769231, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: pyliger\n  Percentage missing: 42%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'scalex' %missing", 
        "value": 0.05128205128205121, 
        "severity": 0, 
        "severity_value": 0.5128205128205121, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: scalex\n  Percentage missing: 5%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'scanorama' %missing", 
        "value": 0.038461538461538436, 
        "severity": 0, 
        "severity_value": 0.38461538461538436, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: scanorama\n  Percentage missing: 4%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'scanvi' %missing", 
        "value": 0.15384615384615385, 
        "severity": 1, 
        "severity_value": 1.5384615384615385, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: scanvi\n  Percentage missing: 15%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'scgpt_finetuned' %missing", 
        "value": 1.0, 
        "severity": 3, 
        "severity_value": 10.0, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: scgpt_finetuned\n  Percentage missing: 100%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'scgpt_zeroshot' %missing", 
        "value": 0.4358974358974359, 
        "severity": 3, 
        "severity_value": 4.358974358974359, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: scgpt_zeroshot\n  Percentage missing: 44%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'scimilarity' %missing", 
        "value": 0.4358974358974359, 
        "severity": 3, 
        "severity_value": 4.358974358974359, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: scimilarity\n  Percentage missing: 44%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'scprint' %missing", 
        "value": 1.0, 
        "severity": 3, 
        "severity_value": 10.0, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: scprint\n  Percentage missing: 100%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'scvi' %missing", 
        "value": 0.15384615384615385, 
        "severity": 1, 
        "severity_value": 1.5384615384615385, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: scvi\n  Percentage missing: 15%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'uce' %missing", 
        "value": 0.8717948717948718, 
        "severity": 3, 
        "severity_value": 8.717948717948717, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: uce\n  Percentage missing: 87%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Dataset 'cellxgene_census/gtex_v9' %missing", 
        "value": 0.26627218934911245, 
        "severity": 2, 
        "severity_value": 2.6627218934911245, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  dataset id: cellxgene_census/gtex_v9\n  Percentage missing: 27%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Dataset 'cellxgene_census/hypomap' %missing", 
        "value": 0.4644970414201184, 
        "severity": 3, 
        "severity_value": 4.644970414201183, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  dataset id: cellxgene_census/hypomap\n  Percentage missing: 46%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Dataset 'cellxgene_census/dkd' %missing", 
        "value": 0.36390532544378695, 
        "severity": 3, 
        "severity_value": 3.6390532544378695, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  dataset id: cellxgene_census/dkd\n  Percentage missing: 36%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Dataset 'cellxgene_census/immune_cell_atlas' %missing", 
        "value": 0.2751479289940828, 
        "severity": 2, 
        "severity_value": 2.751479289940828, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  dataset id: cellxgene_census/immune_cell_atlas\n  Percentage missing: 28%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Dataset 'cellxgene_census/mouse_pancreas_atlas' %missing", 
        "value": 0.41420118343195267, 
        "severity": 3, 
        "severity_value": 4.1420118343195265, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  dataset id: cellxgene_census/mouse_pancreas_atlas\n  Percentage missing: 41%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Dataset 'cellxgene_census/tabula_sapiens' %missing", 
        "value": 0.4023668639053255, 
        "severity": 3, 
        "severity_value": 4.023668639053255, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  dataset id: cellxgene_census/tabula_sapiens\n  Percentage missing: 40%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types asw_batch", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: asw_batch\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types asw_batch", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: asw_batch\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types_jittered asw_batch", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types_jittered performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: asw_batch\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types_jittered asw_batch", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types_jittered performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: asw_batch\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration asw_batch", 
        "value": 0.5438, 
        "severity": 0, 
        "severity_value": -0.5438, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: asw_batch\n  Worst score: 0.5438%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration asw_batch", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method no_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: asw_batch\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration_batch asw_batch", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: asw_batch\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration_batch asw_batch", 
        "value": 0.4867, 
        "severity": 0, 
        "severity_value": 0.24335, 
        "code": "best_score <= 2", 
        "message": "Method no_integration_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: asw_batch\n  Best score: 0.4867%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration asw_batch", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: asw_batch\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration asw_batch", 
        "value": 0.9131, 
        "severity": 0, 
        "severity_value": 0.45655, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: asw_batch\n  Best score: 0.9131%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_batch asw_batch", 
        "value": 0.3113, 
        "severity": 0, 
        "severity_value": -0.3113, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: asw_batch\n  Worst score: 0.3113%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_batch asw_batch", 
        "value": 0.7745, 
        "severity": 0, 
        "severity_value": 0.38725, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: asw_batch\n  Best score: 0.7745%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_cell_type asw_batch", 
        "value": 0.335, 
        "severity": 0, 
        "severity_value": -0.335, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_cell_type performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: asw_batch\n  Worst score: 0.335%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_cell_type asw_batch", 
        "value": 0.8922, 
        "severity": 0, 
        "severity_value": 0.4461, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_cell_type performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: asw_batch\n  Best score: 0.8922%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_fastmnn asw_batch", 
        "value": 0.6044, 
        "severity": 0, 
        "severity_value": -0.6044, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_fastmnn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: asw_batch\n  Worst score: 0.6044%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_fastmnn asw_batch", 
        "value": 0.907, 
        "severity": 0, 
        "severity_value": 0.4535, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_fastmnn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: asw_batch\n  Best score: 0.907%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_mnn_correct asw_batch", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_mnn_correct performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: asw_batch\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_mnn_correct asw_batch", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_mnn_correct performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: asw_batch\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score bbknn asw_batch", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method bbknn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: asw_batch\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score bbknn asw_batch", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method bbknn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: asw_batch\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score combat asw_batch", 
        "value": 0.5658, 
        "severity": 0, 
        "severity_value": -0.5658, 
        "code": "worst_score >= -1", 
        "message": "Method combat performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: asw_batch\n  Worst score: 0.5658%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score combat asw_batch", 
        "value": 1.0936, 
        "severity": 0, 
        "severity_value": 0.5468, 
        "code": "best_score <= 2", 
        "message": "Method combat performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: asw_batch\n  Best score: 1.0936%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score geneformer asw_batch", 
        "value": -0.9988, 
        "severity": 0, 
        "severity_value": 0.9988, 
        "code": "worst_score >= -1", 
        "message": "Method geneformer performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: asw_batch\n  Worst score: -0.9988%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score geneformer asw_batch", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method geneformer performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: asw_batch\n  Best score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmony asw_batch", 
        "value": 0.6462, 
        "severity": 0, 
        "severity_value": -0.6462, 
        "code": "worst_score >= -1", 
        "message": "Method harmony performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: asw_batch\n  Worst score: 0.6462%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmony asw_batch", 
        "value": 0.7816, 
        "severity": 0, 
        "severity_value": 0.3908, 
        "code": "best_score <= 2", 
        "message": "Method harmony performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: asw_batch\n  Best score: 0.7816%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmonypy asw_batch", 
        "value": 0.6368, 
        "severity": 0, 
        "severity_value": -0.6368, 
        "code": "worst_score >= -1", 
        "message": "Method harmonypy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: asw_batch\n  Worst score: 0.6368%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmonypy asw_batch", 
        "value": 0.7929, 
        "severity": 0, 
        "severity_value": 0.39645, 
        "code": "best_score <= 2", 
        "message": "Method harmonypy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: asw_batch\n  Best score: 0.7929%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score liger asw_batch", 
        "value": -0.1431, 
        "severity": 0, 
        "severity_value": 0.1431, 
        "code": "worst_score >= -1", 
        "message": "Method liger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: asw_batch\n  Worst score: -0.1431%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score liger asw_batch", 
        "value": 0.6612, 
        "severity": 0, 
        "severity_value": 0.3306, 
        "code": "best_score <= 2", 
        "message": "Method liger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: asw_batch\n  Best score: 0.6612%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score mnnpy asw_batch", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method mnnpy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: asw_batch\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score mnnpy asw_batch", 
        "value": 0.7025, 
        "severity": 0, 
        "severity_value": 0.35125, 
        "code": "best_score <= 2", 
        "message": "Method mnnpy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: asw_batch\n  Best score: 0.7025%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score pyliger asw_batch", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method pyliger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: asw_batch\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score pyliger asw_batch", 
        "value": 0.7145, 
        "severity": 0, 
        "severity_value": 0.35725, 
        "code": "best_score <= 2", 
        "message": "Method pyliger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: asw_batch\n  Best score: 0.7145%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scalex asw_batch", 
        "value": 0.4386, 
        "severity": 0, 
        "severity_value": -0.4386, 
        "code": "worst_score >= -1", 
        "message": "Method scalex performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: asw_batch\n  Worst score: 0.4386%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scalex asw_batch", 
        "value": 0.6947, 
        "severity": 0, 
        "severity_value": 0.34735, 
        "code": "best_score <= 2", 
        "message": "Method scalex performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: asw_batch\n  Best score: 0.6947%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanorama asw_batch", 
        "value": 0.4254, 
        "severity": 0, 
        "severity_value": -0.4254, 
        "code": "worst_score >= -1", 
        "message": "Method scanorama performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: asw_batch\n  Worst score: 0.4254%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanorama asw_batch", 
        "value": 0.7837, 
        "severity": 0, 
        "severity_value": 0.39185, 
        "code": "best_score <= 2", 
        "message": "Method scanorama performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: asw_batch\n  Best score: 0.7837%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanvi asw_batch", 
        "value": 0.6096, 
        "severity": 0, 
        "severity_value": -0.6096, 
        "code": "worst_score >= -1", 
        "message": "Method scanvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: asw_batch\n  Worst score: 0.6096%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanvi asw_batch", 
        "value": 0.7933, 
        "severity": 0, 
        "severity_value": 0.39665, 
        "code": "best_score <= 2", 
        "message": "Method scanvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: asw_batch\n  Best score: 0.7933%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scgpt_finetuned asw_batch", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scgpt_finetuned performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt_finetuned\n  Metric id: asw_batch\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scgpt_finetuned asw_batch", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method scgpt_finetuned performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt_finetuned\n  Metric id: asw_batch\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scgpt_zeroshot asw_batch", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scgpt_zeroshot performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt_zeroshot\n  Metric id: asw_batch\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scgpt_zeroshot asw_batch", 
        "value": 0.734, 
        "severity": 0, 
        "severity_value": 0.367, 
        "code": "best_score <= 2", 
        "message": "Method scgpt_zeroshot performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt_zeroshot\n  Metric id: asw_batch\n  Best score: 0.734%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scimilarity asw_batch", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scimilarity performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: asw_batch\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scimilarity asw_batch", 
        "value": 0.5962, 
        "severity": 0, 
        "severity_value": 0.2981, 
        "code": "best_score <= 2", 
        "message": "Method scimilarity performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: asw_batch\n  Best score: 0.5962%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scprint asw_batch", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scprint performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scprint\n  Metric id: asw_batch\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scprint asw_batch", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method scprint performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scprint\n  Metric id: asw_batch\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scvi asw_batch", 
        "value": 0.6439, 
        "severity": 0, 
        "severity_value": -0.6439, 
        "code": "worst_score >= -1", 
        "message": "Method scvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: asw_batch\n  Worst score: 0.6439%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scvi asw_batch", 
        "value": 0.9829, 
        "severity": 0, 
        "severity_value": 0.49145, 
        "code": "best_score <= 2", 
        "message": "Method scvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: asw_batch\n  Best score: 0.9829%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score uce asw_batch", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method uce performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: asw_batch\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score uce asw_batch", 
        "value": 0.8788, 
        "severity": 0, 
        "severity_value": 0.4394, 
        "code": "best_score <= 2", 
        "message": "Method uce performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: asw_batch\n  Best score: 0.8788%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types asw_label", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: asw_label\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types asw_label", 
        "value": 1, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: asw_label\n  Best score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types_jittered asw_label", 
        "value": 1, 
        "severity": 0, 
        "severity_value": -1.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types_jittered performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: asw_label\n  Worst score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types_jittered asw_label", 
        "value": 1, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types_jittered performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: asw_label\n  Best score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration asw_label", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: asw_label\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration asw_label", 
        "value": 0.2763, 
        "severity": 0, 
        "severity_value": 0.13815, 
        "code": "best_score <= 2", 
        "message": "Method no_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: asw_label\n  Best score: 0.2763%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration_batch asw_label", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: asw_label\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration_batch asw_label", 
        "value": 0.22, 
        "severity": 0, 
        "severity_value": 0.11, 
        "code": "best_score <= 2", 
        "message": "Method no_integration_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: asw_label\n  Best score: 0.22%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration asw_label", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: asw_label\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration asw_label", 
        "value": 0.0897, 
        "severity": 0, 
        "severity_value": 0.04485, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: asw_label\n  Best score: 0.0897%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_batch asw_label", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: asw_label\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_batch asw_label", 
        "value": 0.0442, 
        "severity": 0, 
        "severity_value": 0.0221, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: asw_label\n  Best score: 0.0442%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_cell_type asw_label", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_cell_type performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: asw_label\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_cell_type asw_label", 
        "value": 0.2763, 
        "severity": 0, 
        "severity_value": 0.13815, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_cell_type performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: asw_label\n  Best score: 0.2763%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_fastmnn asw_label", 
        "value": 0.1231, 
        "severity": 0, 
        "severity_value": -0.1231, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_fastmnn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: asw_label\n  Worst score: 0.1231%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_fastmnn asw_label", 
        "value": 0.3524, 
        "severity": 0, 
        "severity_value": 0.1762, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_fastmnn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: asw_label\n  Best score: 0.3524%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_mnn_correct asw_label", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_mnn_correct performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: asw_label\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_mnn_correct asw_label", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_mnn_correct performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: asw_label\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score bbknn asw_label", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method bbknn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: asw_label\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score bbknn asw_label", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method bbknn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: asw_label\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score combat asw_label", 
        "value": 0.1199, 
        "severity": 0, 
        "severity_value": -0.1199, 
        "code": "worst_score >= -1", 
        "message": "Method combat performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: asw_label\n  Worst score: 0.1199%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score combat asw_label", 
        "value": 0.2759, 
        "severity": 0, 
        "severity_value": 0.13795, 
        "code": "best_score <= 2", 
        "message": "Method combat performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: asw_label\n  Best score: 0.2759%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score geneformer asw_label", 
        "value": -0.364, 
        "severity": 0, 
        "severity_value": 0.364, 
        "code": "worst_score >= -1", 
        "message": "Method geneformer performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: asw_label\n  Worst score: -0.364%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score geneformer asw_label", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method geneformer performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: asw_label\n  Best score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmony asw_label", 
        "value": 0.0876, 
        "severity": 0, 
        "severity_value": -0.0876, 
        "code": "worst_score >= -1", 
        "message": "Method harmony performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: asw_label\n  Worst score: 0.0876%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmony asw_label", 
        "value": 0.3441, 
        "severity": 0, 
        "severity_value": 0.17205, 
        "code": "best_score <= 2", 
        "message": "Method harmony performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: asw_label\n  Best score: 0.3441%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmonypy asw_label", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method harmonypy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: asw_label\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmonypy asw_label", 
        "value": 0.336, 
        "severity": 0, 
        "severity_value": 0.168, 
        "code": "best_score <= 2", 
        "message": "Method harmonypy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: asw_label\n  Best score: 0.336%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score liger asw_label", 
        "value": -0.0552, 
        "severity": 0, 
        "severity_value": 0.0552, 
        "code": "worst_score >= -1", 
        "message": "Method liger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: asw_label\n  Worst score: -0.0552%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score liger asw_label", 
        "value": 0.2875, 
        "severity": 0, 
        "severity_value": 0.14375, 
        "code": "best_score <= 2", 
        "message": "Method liger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: asw_label\n  Best score: 0.2875%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score mnnpy asw_label", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method mnnpy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: asw_label\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score mnnpy asw_label", 
        "value": 0.0267, 
        "severity": 0, 
        "severity_value": 0.01335, 
        "code": "best_score <= 2", 
        "message": "Method mnnpy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: asw_label\n  Best score: 0.0267%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score pyliger asw_label", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method pyliger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: asw_label\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score pyliger asw_label", 
        "value": 0.2779, 
        "severity": 0, 
        "severity_value": 0.13895, 
        "code": "best_score <= 2", 
        "message": "Method pyliger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: asw_label\n  Best score: 0.2779%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scalex asw_label", 
        "value": 0.0535, 
        "severity": 0, 
        "severity_value": -0.0535, 
        "code": "worst_score >= -1", 
        "message": "Method scalex performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: asw_label\n  Worst score: 0.0535%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scalex asw_label", 
        "value": 0.3059, 
        "severity": 0, 
        "severity_value": 0.15295, 
        "code": "best_score <= 2", 
        "message": "Method scalex performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: asw_label\n  Best score: 0.3059%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanorama asw_label", 
        "value": -0.1098, 
        "severity": 0, 
        "severity_value": 0.1098, 
        "code": "worst_score >= -1", 
        "message": "Method scanorama performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: asw_label\n  Worst score: -0.1098%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanorama asw_label", 
        "value": 0.0362, 
        "severity": 0, 
        "severity_value": 0.0181, 
        "code": "best_score <= 2", 
        "message": "Method scanorama performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: asw_label\n  Best score: 0.0362%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanvi asw_label", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scanvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: asw_label\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanvi asw_label", 
        "value": 0.3485, 
        "severity": 0, 
        "severity_value": 0.17425, 
        "code": "best_score <= 2", 
        "message": "Method scanvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: asw_label\n  Best score: 0.3485%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scgpt_finetuned asw_label", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scgpt_finetuned performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt_finetuned\n  Metric id: asw_label\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scgpt_finetuned asw_label", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method scgpt_finetuned performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt_finetuned\n  Metric id: asw_label\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scgpt_zeroshot asw_label", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scgpt_zeroshot performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt_zeroshot\n  Metric id: asw_label\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scgpt_zeroshot asw_label", 
        "value": 0.2848, 
        "severity": 0, 
        "severity_value": 0.1424, 
        "code": "best_score <= 2", 
        "message": "Method scgpt_zeroshot performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt_zeroshot\n  Metric id: asw_label\n  Best score: 0.2848%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scimilarity asw_label", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scimilarity performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: asw_label\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scimilarity asw_label", 
        "value": 0.4432, 
        "severity": 0, 
        "severity_value": 0.2216, 
        "code": "best_score <= 2", 
        "message": "Method scimilarity performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: asw_label\n  Best score: 0.4432%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scprint asw_label", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scprint performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scprint\n  Metric id: asw_label\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scprint asw_label", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method scprint performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scprint\n  Metric id: asw_label\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scvi asw_label", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: asw_label\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scvi asw_label", 
        "value": 0.1858, 
        "severity": 0, 
        "severity_value": 0.0929, 
        "code": "best_score <= 2", 
        "message": "Method scvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: asw_label\n  Best score: 0.1858%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score uce asw_label", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method uce performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: asw_label\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score uce asw_label", 
        "value": 0.1954, 
        "severity": 0, 
        "severity_value": 0.0977, 
        "code": "best_score <= 2", 
        "message": "Method uce performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: asw_label\n  Best score: 0.1954%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types cell_cycle_conservation", 
        "value": 0.9365, 
        "severity": 0, 
        "severity_value": 0.46825, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: cell_cycle_conservation\n  Best score: 0.9365%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types_jittered cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types_jittered performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types_jittered cell_cycle_conservation", 
        "value": 0.9368, 
        "severity": 0, 
        "severity_value": 0.4684, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types_jittered performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: cell_cycle_conservation\n  Best score: 0.9368%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration cell_cycle_conservation", 
        "value": 0.7664, 
        "severity": 0, 
        "severity_value": -0.7664, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: cell_cycle_conservation\n  Worst score: 0.7664%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration cell_cycle_conservation", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method no_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: cell_cycle_conservation\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration_batch cell_cycle_conservation", 
        "value": 0.9425, 
        "severity": 0, 
        "severity_value": -0.9425, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: cell_cycle_conservation\n  Worst score: 0.9425%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration_batch cell_cycle_conservation", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method no_integration_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: cell_cycle_conservation\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration cell_cycle_conservation", 
        "value": 0.0371, 
        "severity": 0, 
        "severity_value": 0.01855, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: cell_cycle_conservation\n  Best score: 0.0371%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_batch cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_batch cell_cycle_conservation", 
        "value": 0.0101, 
        "severity": 0, 
        "severity_value": 0.00505, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: cell_cycle_conservation\n  Best score: 0.0101%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_cell_type cell_cycle_conservation", 
        "value": 0.6034, 
        "severity": 0, 
        "severity_value": -0.6034, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_cell_type performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: cell_cycle_conservation\n  Worst score: 0.6034%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_cell_type cell_cycle_conservation", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_cell_type performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: cell_cycle_conservation\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_fastmnn cell_cycle_conservation", 
        "value": 0.8939, 
        "severity": 0, 
        "severity_value": -0.8939, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_fastmnn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: cell_cycle_conservation\n  Worst score: 0.8939%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_fastmnn cell_cycle_conservation", 
        "value": 1.0411, 
        "severity": 0, 
        "severity_value": 0.52055, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_fastmnn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: cell_cycle_conservation\n  Best score: 1.0411%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_mnn_correct cell_cycle_conservation", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_mnn_correct performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: cell_cycle_conservation\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_mnn_correct cell_cycle_conservation", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_mnn_correct performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: cell_cycle_conservation\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score bbknn cell_cycle_conservation", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method bbknn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: cell_cycle_conservation\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score bbknn cell_cycle_conservation", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method bbknn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: cell_cycle_conservation\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score combat cell_cycle_conservation", 
        "value": 0.888, 
        "severity": 0, 
        "severity_value": -0.888, 
        "code": "worst_score >= -1", 
        "message": "Method combat performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: cell_cycle_conservation\n  Worst score: 0.888%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score combat cell_cycle_conservation", 
        "value": 0.9883, 
        "severity": 0, 
        "severity_value": 0.49415, 
        "code": "best_score <= 2", 
        "message": "Method combat performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: cell_cycle_conservation\n  Best score: 0.9883%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score geneformer cell_cycle_conservation", 
        "value": -0.0064, 
        "severity": 0, 
        "severity_value": 0.0064, 
        "code": "worst_score >= -1", 
        "message": "Method geneformer performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: cell_cycle_conservation\n  Worst score: -0.0064%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score geneformer cell_cycle_conservation", 
        "value": 0.3171, 
        "severity": 0, 
        "severity_value": 0.15855, 
        "code": "best_score <= 2", 
        "message": "Method geneformer performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: cell_cycle_conservation\n  Best score: 0.3171%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmony cell_cycle_conservation", 
        "value": 0.7937, 
        "severity": 0, 
        "severity_value": -0.7937, 
        "code": "worst_score >= -1", 
        "message": "Method harmony performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: cell_cycle_conservation\n  Worst score: 0.7937%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmony cell_cycle_conservation", 
        "value": 0.9816, 
        "severity": 0, 
        "severity_value": 0.4908, 
        "code": "best_score <= 2", 
        "message": "Method harmony performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: cell_cycle_conservation\n  Best score: 0.9816%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmonypy cell_cycle_conservation", 
        "value": 0.7925, 
        "severity": 0, 
        "severity_value": -0.7925, 
        "code": "worst_score >= -1", 
        "message": "Method harmonypy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: cell_cycle_conservation\n  Worst score: 0.7925%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmonypy cell_cycle_conservation", 
        "value": 0.9821, 
        "severity": 0, 
        "severity_value": 0.49105, 
        "code": "best_score <= 2", 
        "message": "Method harmonypy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: cell_cycle_conservation\n  Best score: 0.9821%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score liger cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method liger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score liger cell_cycle_conservation", 
        "value": 0.7877, 
        "severity": 0, 
        "severity_value": 0.39385, 
        "code": "best_score <= 2", 
        "message": "Method liger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: cell_cycle_conservation\n  Best score: 0.7877%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score mnnpy cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method mnnpy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score mnnpy cell_cycle_conservation", 
        "value": 0.4007, 
        "severity": 0, 
        "severity_value": 0.20035, 
        "code": "best_score <= 2", 
        "message": "Method mnnpy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: cell_cycle_conservation\n  Best score: 0.4007%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score pyliger cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method pyliger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score pyliger cell_cycle_conservation", 
        "value": 1.0434, 
        "severity": 0, 
        "severity_value": 0.5217, 
        "code": "best_score <= 2", 
        "message": "Method pyliger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: cell_cycle_conservation\n  Best score: 1.0434%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scalex cell_cycle_conservation", 
        "value": 0.387, 
        "severity": 0, 
        "severity_value": -0.387, 
        "code": "worst_score >= -1", 
        "message": "Method scalex performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: cell_cycle_conservation\n  Worst score: 0.387%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scalex cell_cycle_conservation", 
        "value": 0.8781, 
        "severity": 0, 
        "severity_value": 0.43905, 
        "code": "best_score <= 2", 
        "message": "Method scalex performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: cell_cycle_conservation\n  Best score: 0.8781%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanorama cell_cycle_conservation", 
        "value": -0.0016, 
        "severity": 0, 
        "severity_value": 0.0016, 
        "code": "worst_score >= -1", 
        "message": "Method scanorama performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: cell_cycle_conservation\n  Worst score: -0.0016%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanorama cell_cycle_conservation", 
        "value": 0.4093, 
        "severity": 0, 
        "severity_value": 0.20465, 
        "code": "best_score <= 2", 
        "message": "Method scanorama performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: cell_cycle_conservation\n  Best score: 0.4093%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanvi cell_cycle_conservation", 
        "value": 0.7614, 
        "severity": 0, 
        "severity_value": -0.7614, 
        "code": "worst_score >= -1", 
        "message": "Method scanvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: cell_cycle_conservation\n  Worst score: 0.7614%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanvi cell_cycle_conservation", 
        "value": 1.1501, 
        "severity": 0, 
        "severity_value": 0.57505, 
        "code": "best_score <= 2", 
        "message": "Method scanvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: cell_cycle_conservation\n  Best score: 1.1501%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scgpt_finetuned cell_cycle_conservation", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scgpt_finetuned performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt_finetuned\n  Metric id: cell_cycle_conservation\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scgpt_finetuned cell_cycle_conservation", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method scgpt_finetuned performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt_finetuned\n  Metric id: cell_cycle_conservation\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scgpt_zeroshot cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scgpt_zeroshot performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt_zeroshot\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scgpt_zeroshot cell_cycle_conservation", 
        "value": 1.0493, 
        "severity": 0, 
        "severity_value": 0.52465, 
        "code": "best_score <= 2", 
        "message": "Method scgpt_zeroshot performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt_zeroshot\n  Metric id: cell_cycle_conservation\n  Best score: 1.0493%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scimilarity cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scimilarity performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scimilarity cell_cycle_conservation", 
        "value": 0.7917, 
        "severity": 0, 
        "severity_value": 0.39585, 
        "code": "best_score <= 2", 
        "message": "Method scimilarity performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: cell_cycle_conservation\n  Best score: 0.7917%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scprint cell_cycle_conservation", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scprint performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scprint\n  Metric id: cell_cycle_conservation\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scprint cell_cycle_conservation", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method scprint performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scprint\n  Metric id: cell_cycle_conservation\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scvi cell_cycle_conservation", 
        "value": 0.5226, 
        "severity": 0, 
        "severity_value": -0.5226, 
        "code": "worst_score >= -1", 
        "message": "Method scvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: cell_cycle_conservation\n  Worst score: 0.5226%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scvi cell_cycle_conservation", 
        "value": 1.0868, 
        "severity": 0, 
        "severity_value": 0.5434, 
        "code": "best_score <= 2", 
        "message": "Method scvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: cell_cycle_conservation\n  Best score: 1.0868%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score uce cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method uce performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score uce cell_cycle_conservation", 
        "value": 0.9803, 
        "severity": 0, 
        "severity_value": 0.49015, 
        "code": "best_score <= 2", 
        "message": "Method uce performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: cell_cycle_conservation\n  Best score: 0.9803%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types ari", 
        "value": 1, 
        "severity": 0, 
        "severity_value": -1.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: ari\n  Worst score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types ari", 
        "value": 1, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: ari\n  Best score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types_jittered ari", 
        "value": 1, 
        "severity": 0, 
        "severity_value": -1.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types_jittered performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: ari\n  Worst score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types_jittered ari", 
        "value": 1, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types_jittered performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: ari\n  Best score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration ari", 
        "value": 0.2567, 
        "severity": 0, 
        "severity_value": -0.2567, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: ari\n  Worst score: 0.2567%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration ari", 
        "value": 0.6958, 
        "severity": 0, 
        "severity_value": 0.3479, 
        "code": "best_score <= 2", 
        "message": "Method no_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: ari\n  Best score: 0.6958%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration_batch ari", 
        "value": 0.106, 
        "severity": 0, 
        "severity_value": -0.106, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: ari\n  Worst score: 0.106%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration_batch ari", 
        "value": 0.2885, 
        "severity": 0, 
        "severity_value": 0.14425, 
        "code": "best_score <= 2", 
        "message": "Method no_integration_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: ari\n  Best score: 0.2885%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration ari", 
        "value": 0.0002, 
        "severity": 0, 
        "severity_value": 0.0001, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: ari\n  Best score: 0.0002%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_batch ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_batch ari", 
        "value": 0.0806, 
        "severity": 0, 
        "severity_value": 0.0403, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: ari\n  Best score: 0.0806%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_cell_type ari", 
        "value": 0.2857, 
        "severity": 0, 
        "severity_value": -0.2857, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_cell_type performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: ari\n  Worst score: 0.2857%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_cell_type ari", 
        "value": 0.719, 
        "severity": 0, 
        "severity_value": 0.3595, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_cell_type performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: ari\n  Best score: 0.719%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_fastmnn ari", 
        "value": 0.3537, 
        "severity": 0, 
        "severity_value": -0.3537, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_fastmnn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: ari\n  Worst score: 0.3537%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_fastmnn ari", 
        "value": 0.7601, 
        "severity": 0, 
        "severity_value": 0.38005, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_fastmnn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: ari\n  Best score: 0.7601%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_mnn_correct ari", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_mnn_correct performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: ari\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_mnn_correct ari", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_mnn_correct performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: ari\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score bbknn ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method bbknn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score bbknn ari", 
        "value": 0.7951, 
        "severity": 0, 
        "severity_value": 0.39755, 
        "code": "best_score <= 2", 
        "message": "Method bbknn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: ari\n  Best score: 0.7951%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score combat ari", 
        "value": 0.2244, 
        "severity": 0, 
        "severity_value": -0.2244, 
        "code": "worst_score >= -1", 
        "message": "Method combat performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: ari\n  Worst score: 0.2244%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score combat ari", 
        "value": 0.7674, 
        "severity": 0, 
        "severity_value": 0.3837, 
        "code": "best_score <= 2", 
        "message": "Method combat performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: ari\n  Best score: 0.7674%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score geneformer ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method geneformer performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score geneformer ari", 
        "value": 0.0562, 
        "severity": 0, 
        "severity_value": 0.0281, 
        "code": "best_score <= 2", 
        "message": "Method geneformer performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: ari\n  Best score: 0.0562%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmony ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method harmony performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmony ari", 
        "value": 0.8171, 
        "severity": 0, 
        "severity_value": 0.40855, 
        "code": "best_score <= 2", 
        "message": "Method harmony performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: ari\n  Best score: 0.8171%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmonypy ari", 
        "value": 0.4134, 
        "severity": 0, 
        "severity_value": -0.4134, 
        "code": "worst_score >= -1", 
        "message": "Method harmonypy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: ari\n  Worst score: 0.4134%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmonypy ari", 
        "value": 0.8205, 
        "severity": 0, 
        "severity_value": 0.41025, 
        "code": "best_score <= 2", 
        "message": "Method harmonypy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: ari\n  Best score: 0.8205%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score liger ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method liger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score liger ari", 
        "value": 0.7464, 
        "severity": 0, 
        "severity_value": 0.3732, 
        "code": "best_score <= 2", 
        "message": "Method liger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: ari\n  Best score: 0.7464%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score mnnpy ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method mnnpy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score mnnpy ari", 
        "value": 0.1669, 
        "severity": 0, 
        "severity_value": 0.08345, 
        "code": "best_score <= 2", 
        "message": "Method mnnpy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: ari\n  Best score: 0.1669%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score pyliger ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method pyliger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score pyliger ari", 
        "value": 0.6634, 
        "severity": 0, 
        "severity_value": 0.3317, 
        "code": "best_score <= 2", 
        "message": "Method pyliger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: ari\n  Best score: 0.6634%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scalex ari", 
        "value": 0.3469, 
        "severity": 0, 
        "severity_value": -0.3469, 
        "code": "worst_score >= -1", 
        "message": "Method scalex performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: ari\n  Worst score: 0.3469%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scalex ari", 
        "value": 0.586, 
        "severity": 0, 
        "severity_value": 0.293, 
        "code": "best_score <= 2", 
        "message": "Method scalex performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: ari\n  Best score: 0.586%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanorama ari", 
        "value": -0.0001, 
        "severity": 0, 
        "severity_value": 0.0001, 
        "code": "worst_score >= -1", 
        "message": "Method scanorama performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: ari\n  Worst score: -0.0001%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanorama ari", 
        "value": 0.1729, 
        "severity": 0, 
        "severity_value": 0.08645, 
        "code": "best_score <= 2", 
        "message": "Method scanorama performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: ari\n  Best score: 0.1729%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanvi ari", 
        "value": 0.2176, 
        "severity": 0, 
        "severity_value": -0.2176, 
        "code": "worst_score >= -1", 
        "message": "Method scanvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: ari\n  Worst score: 0.2176%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanvi ari", 
        "value": 0.8839, 
        "severity": 0, 
        "severity_value": 0.44195, 
        "code": "best_score <= 2", 
        "message": "Method scanvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: ari\n  Best score: 0.8839%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scgpt_finetuned ari", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scgpt_finetuned performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt_finetuned\n  Metric id: ari\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scgpt_finetuned ari", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method scgpt_finetuned performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt_finetuned\n  Metric id: ari\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scgpt_zeroshot ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scgpt_zeroshot performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt_zeroshot\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scgpt_zeroshot ari", 
        "value": 0.771, 
        "severity": 0, 
        "severity_value": 0.3855, 
        "code": "best_score <= 2", 
        "message": "Method scgpt_zeroshot performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt_zeroshot\n  Metric id: ari\n  Best score: 0.771%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scimilarity ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scimilarity performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scimilarity ari", 
        "value": 0.7104, 
        "severity": 0, 
        "severity_value": 0.3552, 
        "code": "best_score <= 2", 
        "message": "Method scimilarity performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: ari\n  Best score: 0.7104%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scprint ari", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scprint performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scprint\n  Metric id: ari\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scprint ari", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method scprint performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scprint\n  Metric id: ari\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scvi ari", 
        "value": 0.2359, 
        "severity": 0, 
        "severity_value": -0.2359, 
        "code": "worst_score >= -1", 
        "message": "Method scvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: ari\n  Worst score: 0.2359%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scvi ari", 
        "value": 0.8517, 
        "severity": 0, 
        "severity_value": 0.42585, 
        "code": "best_score <= 2", 
        "message": "Method scvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: ari\n  Best score: 0.8517%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score uce ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method uce performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score uce ari", 
        "value": 0.5011, 
        "severity": 0, 
        "severity_value": 0.25055, 
        "code": "best_score <= 2", 
        "message": "Method uce performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: ari\n  Best score: 0.5011%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types nmi", 
        "value": 1, 
        "severity": 0, 
        "severity_value": -1.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: nmi\n  Worst score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types nmi", 
        "value": 1, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: nmi\n  Best score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types_jittered nmi", 
        "value": 1, 
        "severity": 0, 
        "severity_value": -1.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types_jittered performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: nmi\n  Worst score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types_jittered nmi", 
        "value": 1, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types_jittered performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: nmi\n  Best score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration nmi", 
        "value": 0.6017, 
        "severity": 0, 
        "severity_value": -0.6017, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: nmi\n  Worst score: 0.6017%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration nmi", 
        "value": 0.8291, 
        "severity": 0, 
        "severity_value": 0.41455, 
        "code": "best_score <= 2", 
        "message": "Method no_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: nmi\n  Best score: 0.8291%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration_batch nmi", 
        "value": 0.3886, 
        "severity": 0, 
        "severity_value": -0.3886, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: nmi\n  Worst score: 0.3886%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration_batch nmi", 
        "value": 0.6862, 
        "severity": 0, 
        "severity_value": 0.3431, 
        "code": "best_score <= 2", 
        "message": "Method no_integration_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: nmi\n  Best score: 0.6862%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration nmi", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: nmi\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration nmi", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: nmi\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_batch nmi", 
        "value": 0.003, 
        "severity": 0, 
        "severity_value": -0.003, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: nmi\n  Worst score: 0.003%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_batch nmi", 
        "value": 0.2072, 
        "severity": 0, 
        "severity_value": 0.1036, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: nmi\n  Best score: 0.2072%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_cell_type nmi", 
        "value": 0.6148, 
        "severity": 0, 
        "severity_value": -0.6148, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_cell_type performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: nmi\n  Worst score: 0.6148%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_cell_type nmi", 
        "value": 0.837, 
        "severity": 0, 
        "severity_value": 0.4185, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_cell_type performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: nmi\n  Best score: 0.837%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_fastmnn nmi", 
        "value": 0.663, 
        "severity": 0, 
        "severity_value": -0.663, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_fastmnn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: nmi\n  Worst score: 0.663%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_fastmnn nmi", 
        "value": 0.8271, 
        "severity": 0, 
        "severity_value": 0.41355, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_fastmnn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: nmi\n  Best score: 0.8271%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_mnn_correct nmi", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_mnn_correct performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: nmi\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_mnn_correct nmi", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_mnn_correct performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: nmi\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score bbknn nmi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method bbknn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: nmi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score bbknn nmi", 
        "value": 0.8151, 
        "severity": 0, 
        "severity_value": 0.40755, 
        "code": "best_score <= 2", 
        "message": "Method bbknn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: nmi\n  Best score: 0.8151%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score combat nmi", 
        "value": 0.5943, 
        "severity": 0, 
        "severity_value": -0.5943, 
        "code": "worst_score >= -1", 
        "message": "Method combat performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: nmi\n  Worst score: 0.5943%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score combat nmi", 
        "value": 0.8303, 
        "severity": 0, 
        "severity_value": 0.41515, 
        "code": "best_score <= 2", 
        "message": "Method combat performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: nmi\n  Best score: 0.8303%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score geneformer nmi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method geneformer performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: nmi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score geneformer nmi", 
        "value": 0.3942, 
        "severity": 0, 
        "severity_value": 0.1971, 
        "code": "best_score <= 2", 
        "message": "Method geneformer performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: nmi\n  Best score: 0.3942%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmony nmi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method harmony performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: nmi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmony nmi", 
        "value": 0.8293, 
        "severity": 0, 
        "severity_value": 0.41465, 
        "code": "best_score <= 2", 
        "message": "Method harmony performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: nmi\n  Best score: 0.8293%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmonypy nmi", 
        "value": 0.6602, 
        "severity": 0, 
        "severity_value": -0.6602, 
        "code": "worst_score >= -1", 
        "message": "Method harmonypy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: nmi\n  Worst score: 0.6602%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmonypy nmi", 
        "value": 0.823, 
        "severity": 0, 
        "severity_value": 0.4115, 
        "code": "best_score <= 2", 
        "message": "Method harmonypy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: nmi\n  Best score: 0.823%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score liger nmi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method liger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: nmi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score liger nmi", 
        "value": 0.7999, 
        "severity": 0, 
        "severity_value": 0.39995, 
        "code": "best_score <= 2", 
        "message": "Method liger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: nmi\n  Best score: 0.7999%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score mnnpy nmi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method mnnpy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: nmi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score mnnpy nmi", 
        "value": 0.2281, 
        "severity": 0, 
        "severity_value": 0.11405, 
        "code": "best_score <= 2", 
        "message": "Method mnnpy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: nmi\n  Best score: 0.2281%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score pyliger nmi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method pyliger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: nmi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score pyliger nmi", 
        "value": 0.7615, 
        "severity": 0, 
        "severity_value": 0.38075, 
        "code": "best_score <= 2", 
        "message": "Method pyliger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: nmi\n  Best score: 0.7615%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scalex nmi", 
        "value": 0.568, 
        "severity": 0, 
        "severity_value": -0.568, 
        "code": "worst_score >= -1", 
        "message": "Method scalex performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: nmi\n  Worst score: 0.568%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scalex nmi", 
        "value": 0.7219, 
        "severity": 0, 
        "severity_value": 0.36095, 
        "code": "best_score <= 2", 
        "message": "Method scalex performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: nmi\n  Best score: 0.7219%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanorama nmi", 
        "value": -6.2406e-06, 
        "severity": 0, 
        "severity_value": 6.2406e-06, 
        "code": "worst_score >= -1", 
        "message": "Method scanorama performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: nmi\n  Worst score: -6.2406e-06%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanorama nmi", 
        "value": 0.2249, 
        "severity": 0, 
        "severity_value": 0.11245, 
        "code": "best_score <= 2", 
        "message": "Method scanorama performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: nmi\n  Best score: 0.2249%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanvi nmi", 
        "value": 0.5887, 
        "severity": 0, 
        "severity_value": -0.5887, 
        "code": "worst_score >= -1", 
        "message": "Method scanvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: nmi\n  Worst score: 0.5887%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanvi nmi", 
        "value": 0.8929, 
        "severity": 0, 
        "severity_value": 0.44645, 
        "code": "best_score <= 2", 
        "message": "Method scanvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: nmi\n  Best score: 0.8929%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scgpt_finetuned nmi", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scgpt_finetuned performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt_finetuned\n  Metric id: nmi\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scgpt_finetuned nmi", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method scgpt_finetuned performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt_finetuned\n  Metric id: nmi\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scgpt_zeroshot nmi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scgpt_zeroshot performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt_zeroshot\n  Metric id: nmi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scgpt_zeroshot nmi", 
        "value": 0.7923, 
        "severity": 0, 
        "severity_value": 0.39615, 
        "code": "best_score <= 2", 
        "message": "Method scgpt_zeroshot performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt_zeroshot\n  Metric id: nmi\n  Best score: 0.7923%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scimilarity nmi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scimilarity performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: nmi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scimilarity nmi", 
        "value": 0.7974, 
        "severity": 0, 
        "severity_value": 0.3987, 
        "code": "best_score <= 2", 
        "message": "Method scimilarity performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: nmi\n  Best score: 0.7974%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scprint nmi", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scprint performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scprint\n  Metric id: nmi\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scprint nmi", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method scprint performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scprint\n  Metric id: nmi\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scvi nmi", 
        "value": 0.5919, 
        "severity": 0, 
        "severity_value": -0.5919, 
        "code": "worst_score >= -1", 
        "message": "Method scvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: nmi\n  Worst score: 0.5919%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scvi nmi", 
        "value": 0.8418, 
        "severity": 0, 
        "severity_value": 0.4209, 
        "code": "best_score <= 2", 
        "message": "Method scvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: nmi\n  Best score: 0.8418%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score uce nmi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method uce performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: nmi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score uce nmi", 
        "value": 0.716, 
        "severity": 0, 
        "severity_value": 0.358, 
        "code": "best_score <= 2", 
        "message": "Method uce performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: nmi\n  Best score: 0.716%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types graph_connectivity", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: graph_connectivity\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types graph_connectivity", 
        "value": 1, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: graph_connectivity\n  Best score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types_jittered graph_connectivity", 
        "value": 1, 
        "severity": 0, 
        "severity_value": -1.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types_jittered performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: graph_connectivity\n  Worst score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types_jittered graph_connectivity", 
        "value": 1, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types_jittered performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: graph_connectivity\n  Best score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration graph_connectivity", 
        "value": 0.8764, 
        "severity": 0, 
        "severity_value": -0.8764, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: graph_connectivity\n  Worst score: 0.8764%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration graph_connectivity", 
        "value": 0.9758, 
        "severity": 0, 
        "severity_value": 0.4879, 
        "code": "best_score <= 2", 
        "message": "Method no_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: graph_connectivity\n  Best score: 0.9758%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration_batch graph_connectivity", 
        "value": 0.368, 
        "severity": 0, 
        "severity_value": -0.368, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: graph_connectivity\n  Worst score: 0.368%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration_batch graph_connectivity", 
        "value": 0.8315, 
        "severity": 0, 
        "severity_value": 0.41575, 
        "code": "best_score <= 2", 
        "message": "Method no_integration_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: graph_connectivity\n  Best score: 0.8315%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration graph_connectivity", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: graph_connectivity\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration graph_connectivity", 
        "value": 0.0037, 
        "severity": 0, 
        "severity_value": 0.00185, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: graph_connectivity\n  Best score: 0.0037%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_batch graph_connectivity", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: graph_connectivity\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_batch graph_connectivity", 
        "value": 0.2438, 
        "severity": 0, 
        "severity_value": 0.1219, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: graph_connectivity\n  Best score: 0.2438%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_cell_type graph_connectivity", 
        "value": 0.8769, 
        "severity": 0, 
        "severity_value": -0.8769, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_cell_type performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: graph_connectivity\n  Worst score: 0.8769%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_cell_type graph_connectivity", 
        "value": 0.9751, 
        "severity": 0, 
        "severity_value": 0.48755, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_cell_type performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: graph_connectivity\n  Best score: 0.9751%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_fastmnn graph_connectivity", 
        "value": 0.8077, 
        "severity": 0, 
        "severity_value": -0.8077, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_fastmnn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: graph_connectivity\n  Worst score: 0.8077%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_fastmnn graph_connectivity", 
        "value": 0.965, 
        "severity": 0, 
        "severity_value": 0.4825, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_fastmnn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: graph_connectivity\n  Best score: 0.965%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_mnn_correct graph_connectivity", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_mnn_correct performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: graph_connectivity\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_mnn_correct graph_connectivity", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_mnn_correct performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: graph_connectivity\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score bbknn graph_connectivity", 
        "value": 0.8422, 
        "severity": 0, 
        "severity_value": -0.8422, 
        "code": "worst_score >= -1", 
        "message": "Method bbknn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: graph_connectivity\n  Worst score: 0.8422%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score bbknn graph_connectivity", 
        "value": 0.9976, 
        "severity": 0, 
        "severity_value": 0.4988, 
        "code": "best_score <= 2", 
        "message": "Method bbknn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: graph_connectivity\n  Best score: 0.9976%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score combat graph_connectivity", 
        "value": 0.8753, 
        "severity": 0, 
        "severity_value": -0.8753, 
        "code": "worst_score >= -1", 
        "message": "Method combat performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: graph_connectivity\n  Worst score: 0.8753%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score combat graph_connectivity", 
        "value": 0.9667, 
        "severity": 0, 
        "severity_value": 0.48335, 
        "code": "best_score <= 2", 
        "message": "Method combat performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: graph_connectivity\n  Best score: 0.9667%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score geneformer graph_connectivity", 
        "value": -0.3102, 
        "severity": 0, 
        "severity_value": 0.3102, 
        "code": "worst_score >= -1", 
        "message": "Method geneformer performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: graph_connectivity\n  Worst score: -0.3102%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score geneformer graph_connectivity", 
        "value": 0.0253, 
        "severity": 0, 
        "severity_value": 0.01265, 
        "code": "best_score <= 2", 
        "message": "Method geneformer performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: graph_connectivity\n  Best score: 0.0253%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmony graph_connectivity", 
        "value": 0.8393, 
        "severity": 0, 
        "severity_value": -0.8393, 
        "code": "worst_score >= -1", 
        "message": "Method harmony performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: graph_connectivity\n  Worst score: 0.8393%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmony graph_connectivity", 
        "value": 0.9686, 
        "severity": 0, 
        "severity_value": 0.4843, 
        "code": "best_score <= 2", 
        "message": "Method harmony performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: graph_connectivity\n  Best score: 0.9686%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmonypy graph_connectivity", 
        "value": 0.8285, 
        "severity": 0, 
        "severity_value": -0.8285, 
        "code": "worst_score >= -1", 
        "message": "Method harmonypy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: graph_connectivity\n  Worst score: 0.8285%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmonypy graph_connectivity", 
        "value": 0.9689, 
        "severity": 0, 
        "severity_value": 0.48445, 
        "code": "best_score <= 2", 
        "message": "Method harmonypy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: graph_connectivity\n  Best score: 0.9689%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score liger graph_connectivity", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method liger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: graph_connectivity\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score liger graph_connectivity", 
        "value": 0.9508, 
        "severity": 0, 
        "severity_value": 0.4754, 
        "code": "best_score <= 2", 
        "message": "Method liger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: graph_connectivity\n  Best score: 0.9508%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score mnnpy graph_connectivity", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method mnnpy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: graph_connectivity\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score mnnpy graph_connectivity", 
        "value": 0.3974, 
        "severity": 0, 
        "severity_value": 0.1987, 
        "code": "best_score <= 2", 
        "message": "Method mnnpy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: graph_connectivity\n  Best score: 0.3974%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score pyliger graph_connectivity", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method pyliger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: graph_connectivity\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score pyliger graph_connectivity", 
        "value": 0.9576, 
        "severity": 0, 
        "severity_value": 0.4788, 
        "code": "best_score <= 2", 
        "message": "Method pyliger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: graph_connectivity\n  Best score: 0.9576%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scalex graph_connectivity", 
        "value": 0.7199, 
        "severity": 0, 
        "severity_value": -0.7199, 
        "code": "worst_score >= -1", 
        "message": "Method scalex performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: graph_connectivity\n  Worst score: 0.7199%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scalex graph_connectivity", 
        "value": 0.9039, 
        "severity": 0, 
        "severity_value": 0.45195, 
        "code": "best_score <= 2", 
        "message": "Method scalex performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: graph_connectivity\n  Best score: 0.9039%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanorama graph_connectivity", 
        "value": 0.0045, 
        "severity": 0, 
        "severity_value": -0.0045, 
        "code": "worst_score >= -1", 
        "message": "Method scanorama performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: graph_connectivity\n  Worst score: 0.0045%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanorama graph_connectivity", 
        "value": 0.3972, 
        "severity": 0, 
        "severity_value": 0.1986, 
        "code": "best_score <= 2", 
        "message": "Method scanorama performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: graph_connectivity\n  Best score: 0.3972%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanvi graph_connectivity", 
        "value": 0.8694, 
        "severity": 0, 
        "severity_value": -0.8694, 
        "code": "worst_score >= -1", 
        "message": "Method scanvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: graph_connectivity\n  Worst score: 0.8694%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanvi graph_connectivity", 
        "value": 0.9976, 
        "severity": 0, 
        "severity_value": 0.4988, 
        "code": "best_score <= 2", 
        "message": "Method scanvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: graph_connectivity\n  Best score: 0.9976%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scgpt_finetuned graph_connectivity", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scgpt_finetuned performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt_finetuned\n  Metric id: graph_connectivity\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scgpt_finetuned graph_connectivity", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method scgpt_finetuned performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt_finetuned\n  Metric id: graph_connectivity\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scgpt_zeroshot graph_connectivity", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scgpt_zeroshot performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt_zeroshot\n  Metric id: graph_connectivity\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scgpt_zeroshot graph_connectivity", 
        "value": 0.969, 
        "severity": 0, 
        "severity_value": 0.4845, 
        "code": "best_score <= 2", 
        "message": "Method scgpt_zeroshot performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt_zeroshot\n  Metric id: graph_connectivity\n  Best score: 0.969%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scimilarity graph_connectivity", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scimilarity performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: graph_connectivity\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scimilarity graph_connectivity", 
        "value": 0.9703, 
        "severity": 0, 
        "severity_value": 0.48515, 
        "code": "best_score <= 2", 
        "message": "Method scimilarity performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: graph_connectivity\n  Best score: 0.9703%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scprint graph_connectivity", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scprint performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scprint\n  Metric id: graph_connectivity\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scprint graph_connectivity", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method scprint performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scprint\n  Metric id: graph_connectivity\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scvi graph_connectivity", 
        "value": 0.8813, 
        "severity": 0, 
        "severity_value": -0.8813, 
        "code": "worst_score >= -1", 
        "message": "Method scvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: graph_connectivity\n  Worst score: 0.8813%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scvi graph_connectivity", 
        "value": 0.9832, 
        "severity": 0, 
        "severity_value": 0.4916, 
        "code": "best_score <= 2", 
        "message": "Method scvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: graph_connectivity\n  Best score: 0.9832%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score uce graph_connectivity", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method uce performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: graph_connectivity\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score uce graph_connectivity", 
        "value": 0.9408, 
        "severity": 0, 
        "severity_value": 0.4704, 
        "code": "best_score <= 2", 
        "message": "Method uce performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: graph_connectivity\n  Best score: 0.9408%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types_jittered hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types_jittered performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types_jittered hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types_jittered performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method no_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration_batch hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration_batch hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method no_integration_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_batch hvg_overlap", 
        "value": 1, 
        "severity": 0, 
        "severity_value": -1.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: hvg_overlap\n  Worst score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_batch hvg_overlap", 
        "value": 1, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: hvg_overlap\n  Best score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_cell_type hvg_overlap", 
        "value": 0.0691, 
        "severity": 0, 
        "severity_value": -0.0691, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_cell_type performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: hvg_overlap\n  Worst score: 0.0691%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_cell_type hvg_overlap", 
        "value": 0.2642, 
        "severity": 0, 
        "severity_value": 0.1321, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_cell_type performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: hvg_overlap\n  Best score: 0.2642%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_fastmnn hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_fastmnn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_fastmnn hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_fastmnn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_mnn_correct hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_mnn_correct performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_mnn_correct hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_mnn_correct performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score bbknn hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method bbknn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score bbknn hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method bbknn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score combat hvg_overlap", 
        "value": 0.0512, 
        "severity": 0, 
        "severity_value": -0.0512, 
        "code": "worst_score >= -1", 
        "message": "Method combat performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: hvg_overlap\n  Worst score: 0.0512%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score combat hvg_overlap", 
        "value": 0.1201, 
        "severity": 0, 
        "severity_value": 0.06005, 
        "code": "best_score <= 2", 
        "message": "Method combat performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: hvg_overlap\n  Best score: 0.1201%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score geneformer hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method geneformer performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score geneformer hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method geneformer performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmony hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method harmony performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmony hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method harmony performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmonypy hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method harmonypy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmonypy hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method harmonypy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score liger hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method liger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score liger hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method liger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score mnnpy hvg_overlap", 
        "value": -0.6721, 
        "severity": 0, 
        "severity_value": 0.6721, 
        "code": "worst_score >= -1", 
        "message": "Method mnnpy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: hvg_overlap\n  Worst score: -0.6721%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score mnnpy hvg_overlap", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method mnnpy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: hvg_overlap\n  Best score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score pyliger hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method pyliger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score pyliger hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method pyliger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scalex hvg_overlap", 
        "value": -1.2485, 
        "severity": 1, 
        "severity_value": 1.2485, 
        "code": "worst_score >= -1", 
        "message": "Method scalex performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: hvg_overlap\n  Worst score: -1.2485%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scalex hvg_overlap", 
        "value": -0.4188, 
        "severity": 0, 
        "severity_value": -0.2094, 
        "code": "best_score <= 2", 
        "message": "Method scalex performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: hvg_overlap\n  Best score: -0.4188%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanorama hvg_overlap", 
        "value": -1.5312, 
        "severity": 1, 
        "severity_value": 1.5312, 
        "code": "worst_score >= -1", 
        "message": "Method scanorama performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: hvg_overlap\n  Worst score: -1.5312%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanorama hvg_overlap", 
        "value": -0.4673, 
        "severity": 0, 
        "severity_value": -0.23365, 
        "code": "best_score <= 2", 
        "message": "Method scanorama performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: hvg_overlap\n  Best score: -0.4673%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanvi hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scanvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanvi hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method scanvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scgpt_finetuned hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scgpt_finetuned performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt_finetuned\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scgpt_finetuned hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method scgpt_finetuned performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt_finetuned\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scgpt_zeroshot hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scgpt_zeroshot performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt_zeroshot\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scgpt_zeroshot hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method scgpt_zeroshot performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt_zeroshot\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scimilarity hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scimilarity performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scimilarity hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method scimilarity performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scprint hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scprint performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scprint\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scprint hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method scprint performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scprint\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scvi hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scvi hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method scvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score uce hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method uce performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score uce hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method uce performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types isolated_label_asw", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: isolated_label_asw\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types isolated_label_asw", 
        "value": 1, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: isolated_label_asw\n  Best score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types_jittered isolated_label_asw", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types_jittered performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: isolated_label_asw\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types_jittered isolated_label_asw", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types_jittered performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: isolated_label_asw\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration isolated_label_asw", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: isolated_label_asw\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration isolated_label_asw", 
        "value": 0.6433, 
        "severity": 0, 
        "severity_value": 0.32165, 
        "code": "best_score <= 2", 
        "message": "Method no_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: isolated_label_asw\n  Best score: 0.6433%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration_batch isolated_label_asw", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: isolated_label_asw\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration_batch isolated_label_asw", 
        "value": 0.1807, 
        "severity": 0, 
        "severity_value": 0.09035, 
        "code": "best_score <= 2", 
        "message": "Method no_integration_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: isolated_label_asw\n  Best score: 0.1807%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration isolated_label_asw", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: isolated_label_asw\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration isolated_label_asw", 
        "value": 0.2565, 
        "severity": 0, 
        "severity_value": 0.12825, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: isolated_label_asw\n  Best score: 0.2565%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_batch isolated_label_asw", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: isolated_label_asw\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_batch isolated_label_asw", 
        "value": 0.0499, 
        "severity": 0, 
        "severity_value": 0.02495, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: isolated_label_asw\n  Best score: 0.0499%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_cell_type isolated_label_asw", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_cell_type performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: isolated_label_asw\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_cell_type isolated_label_asw", 
        "value": 0.6433, 
        "severity": 0, 
        "severity_value": 0.32165, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_cell_type performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: isolated_label_asw\n  Best score: 0.6433%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_fastmnn isolated_label_asw", 
        "value": -0.1001, 
        "severity": 0, 
        "severity_value": 0.1001, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_fastmnn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: isolated_label_asw\n  Worst score: -0.1001%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_fastmnn isolated_label_asw", 
        "value": 0.638, 
        "severity": 0, 
        "severity_value": 0.319, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_fastmnn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: isolated_label_asw\n  Best score: 0.638%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_mnn_correct isolated_label_asw", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_mnn_correct performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: isolated_label_asw\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_mnn_correct isolated_label_asw", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_mnn_correct performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: isolated_label_asw\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score bbknn isolated_label_asw", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method bbknn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: isolated_label_asw\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score bbknn isolated_label_asw", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method bbknn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: isolated_label_asw\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score combat isolated_label_asw", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method combat performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: isolated_label_asw\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score combat isolated_label_asw", 
        "value": 0.4623, 
        "severity": 0, 
        "severity_value": 0.23115, 
        "code": "best_score <= 2", 
        "message": "Method combat performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: isolated_label_asw\n  Best score: 0.4623%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score geneformer isolated_label_asw", 
        "value": -0.3664, 
        "severity": 0, 
        "severity_value": 0.3664, 
        "code": "worst_score >= -1", 
        "message": "Method geneformer performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: isolated_label_asw\n  Worst score: -0.3664%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score geneformer isolated_label_asw", 
        "value": 0.0194, 
        "severity": 0, 
        "severity_value": 0.0097, 
        "code": "best_score <= 2", 
        "message": "Method geneformer performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: isolated_label_asw\n  Best score: 0.0194%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmony isolated_label_asw", 
        "value": -0.0584, 
        "severity": 0, 
        "severity_value": 0.0584, 
        "code": "worst_score >= -1", 
        "message": "Method harmony performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: isolated_label_asw\n  Worst score: -0.0584%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmony isolated_label_asw", 
        "value": 0.5298, 
        "severity": 0, 
        "severity_value": 0.2649, 
        "code": "best_score <= 2", 
        "message": "Method harmony performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: isolated_label_asw\n  Best score: 0.5298%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmonypy isolated_label_asw", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method harmonypy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: isolated_label_asw\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmonypy isolated_label_asw", 
        "value": 0.5225, 
        "severity": 0, 
        "severity_value": 0.26125, 
        "code": "best_score <= 2", 
        "message": "Method harmonypy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: isolated_label_asw\n  Best score: 0.5225%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score liger isolated_label_asw", 
        "value": -0.1809, 
        "severity": 0, 
        "severity_value": 0.1809, 
        "code": "worst_score >= -1", 
        "message": "Method liger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: isolated_label_asw\n  Worst score: -0.1809%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score liger isolated_label_asw", 
        "value": 0.3881, 
        "severity": 0, 
        "severity_value": 0.19405, 
        "code": "best_score <= 2", 
        "message": "Method liger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: isolated_label_asw\n  Best score: 0.3881%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score mnnpy isolated_label_asw", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method mnnpy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: isolated_label_asw\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score mnnpy isolated_label_asw", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method mnnpy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: isolated_label_asw\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score pyliger isolated_label_asw", 
        "value": -0.0862, 
        "severity": 0, 
        "severity_value": 0.0862, 
        "code": "worst_score >= -1", 
        "message": "Method pyliger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: isolated_label_asw\n  Worst score: -0.0862%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score pyliger isolated_label_asw", 
        "value": 0.3914, 
        "severity": 0, 
        "severity_value": 0.1957, 
        "code": "best_score <= 2", 
        "message": "Method pyliger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: isolated_label_asw\n  Best score: 0.3914%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scalex isolated_label_asw", 
        "value": -0.1188, 
        "severity": 0, 
        "severity_value": 0.1188, 
        "code": "worst_score >= -1", 
        "message": "Method scalex performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: isolated_label_asw\n  Worst score: -0.1188%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scalex isolated_label_asw", 
        "value": 0.4316, 
        "severity": 0, 
        "severity_value": 0.2158, 
        "code": "best_score <= 2", 
        "message": "Method scalex performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: isolated_label_asw\n  Best score: 0.4316%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanorama isolated_label_asw", 
        "value": -0.32, 
        "severity": 0, 
        "severity_value": 0.32, 
        "code": "worst_score >= -1", 
        "message": "Method scanorama performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: isolated_label_asw\n  Worst score: -0.32%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanorama isolated_label_asw", 
        "value": 0.1627, 
        "severity": 0, 
        "severity_value": 0.08135, 
        "code": "best_score <= 2", 
        "message": "Method scanorama performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: isolated_label_asw\n  Best score: 0.1627%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanvi isolated_label_asw", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scanvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: isolated_label_asw\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanvi isolated_label_asw", 
        "value": 0.5566, 
        "severity": 0, 
        "severity_value": 0.2783, 
        "code": "best_score <= 2", 
        "message": "Method scanvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: isolated_label_asw\n  Best score: 0.5566%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scgpt_finetuned isolated_label_asw", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scgpt_finetuned performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt_finetuned\n  Metric id: isolated_label_asw\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scgpt_finetuned isolated_label_asw", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method scgpt_finetuned performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt_finetuned\n  Metric id: isolated_label_asw\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scgpt_zeroshot isolated_label_asw", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scgpt_zeroshot performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt_zeroshot\n  Metric id: isolated_label_asw\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scgpt_zeroshot isolated_label_asw", 
        "value": 0.1915, 
        "severity": 0, 
        "severity_value": 0.09575, 
        "code": "best_score <= 2", 
        "message": "Method scgpt_zeroshot performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt_zeroshot\n  Metric id: isolated_label_asw\n  Best score: 0.1915%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scimilarity isolated_label_asw", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scimilarity performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: isolated_label_asw\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scimilarity isolated_label_asw", 
        "value": 0.3993, 
        "severity": 0, 
        "severity_value": 0.19965, 
        "code": "best_score <= 2", 
        "message": "Method scimilarity performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: isolated_label_asw\n  Best score: 0.3993%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scprint isolated_label_asw", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scprint performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scprint\n  Metric id: isolated_label_asw\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scprint isolated_label_asw", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method scprint performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scprint\n  Metric id: isolated_label_asw\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scvi isolated_label_asw", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: isolated_label_asw\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scvi isolated_label_asw", 
        "value": 0.5337, 
        "severity": 0, 
        "severity_value": 0.26685, 
        "code": "best_score <= 2", 
        "message": "Method scvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: isolated_label_asw\n  Best score: 0.5337%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score uce isolated_label_asw", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method uce performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: isolated_label_asw\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score uce isolated_label_asw", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method uce performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: isolated_label_asw\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types isolated_label_f1", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: isolated_label_f1\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types isolated_label_f1", 
        "value": 1, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: isolated_label_f1\n  Best score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types_jittered isolated_label_f1", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types_jittered performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: isolated_label_f1\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types_jittered isolated_label_f1", 
        "value": 1, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types_jittered performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: isolated_label_f1\n  Best score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration isolated_label_f1", 
        "value": 0.8931, 
        "severity": 0, 
        "severity_value": 0.44655, 
        "code": "best_score <= 2", 
        "message": "Method no_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: isolated_label_f1\n  Best score: 0.8931%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration_batch isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration_batch isolated_label_f1", 
        "value": 0.1708, 
        "severity": 0, 
        "severity_value": 0.0854, 
        "code": "best_score <= 2", 
        "message": "Method no_integration_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: isolated_label_f1\n  Best score: 0.1708%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration isolated_label_f1", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: isolated_label_f1\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration isolated_label_f1", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: isolated_label_f1\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_batch isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_batch isolated_label_f1", 
        "value": 0.0088, 
        "severity": 0, 
        "severity_value": 0.0044, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: isolated_label_f1\n  Best score: 0.0088%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_cell_type isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_cell_type performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_cell_type isolated_label_f1", 
        "value": 0.8923, 
        "severity": 0, 
        "severity_value": 0.44615, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_cell_type performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: isolated_label_f1\n  Best score: 0.8923%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_fastmnn isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_fastmnn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_fastmnn isolated_label_f1", 
        "value": 0.8558, 
        "severity": 0, 
        "severity_value": 0.4279, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_fastmnn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: isolated_label_f1\n  Best score: 0.8558%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_mnn_correct isolated_label_f1", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_mnn_correct performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: isolated_label_f1\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_mnn_correct isolated_label_f1", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_mnn_correct performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: isolated_label_f1\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score bbknn isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method bbknn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score bbknn isolated_label_f1", 
        "value": 0.0747, 
        "severity": 0, 
        "severity_value": 0.03735, 
        "code": "best_score <= 2", 
        "message": "Method bbknn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: isolated_label_f1\n  Best score: 0.0747%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score combat isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method combat performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score combat isolated_label_f1", 
        "value": 0.7629, 
        "severity": 0, 
        "severity_value": 0.38145, 
        "code": "best_score <= 2", 
        "message": "Method combat performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: isolated_label_f1\n  Best score: 0.7629%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score geneformer isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method geneformer performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score geneformer isolated_label_f1", 
        "value": 0.0766, 
        "severity": 0, 
        "severity_value": 0.0383, 
        "code": "best_score <= 2", 
        "message": "Method geneformer performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: isolated_label_f1\n  Best score: 0.0766%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmony isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method harmony performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmony isolated_label_f1", 
        "value": 0.0793, 
        "severity": 0, 
        "severity_value": 0.03965, 
        "code": "best_score <= 2", 
        "message": "Method harmony performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: isolated_label_f1\n  Best score: 0.0793%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmonypy isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method harmonypy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmonypy isolated_label_f1", 
        "value": 0.0884, 
        "severity": 0, 
        "severity_value": 0.0442, 
        "code": "best_score <= 2", 
        "message": "Method harmonypy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: isolated_label_f1\n  Best score: 0.0884%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score liger isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method liger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score liger isolated_label_f1", 
        "value": 0.1195, 
        "severity": 0, 
        "severity_value": 0.05975, 
        "code": "best_score <= 2", 
        "message": "Method liger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: isolated_label_f1\n  Best score: 0.1195%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score mnnpy isolated_label_f1", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method mnnpy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: isolated_label_f1\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score mnnpy isolated_label_f1", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method mnnpy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: isolated_label_f1\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score pyliger isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method pyliger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score pyliger isolated_label_f1", 
        "value": 0.1265, 
        "severity": 0, 
        "severity_value": 0.06325, 
        "code": "best_score <= 2", 
        "message": "Method pyliger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: isolated_label_f1\n  Best score: 0.1265%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scalex isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scalex performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scalex isolated_label_f1", 
        "value": 0.1229, 
        "severity": 0, 
        "severity_value": 0.06145, 
        "code": "best_score <= 2", 
        "message": "Method scalex performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: isolated_label_f1\n  Best score: 0.1229%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanorama isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scanorama performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanorama isolated_label_f1", 
        "value": 0.04, 
        "severity": 0, 
        "severity_value": 0.02, 
        "code": "best_score <= 2", 
        "message": "Method scanorama performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: isolated_label_f1\n  Best score: 0.04%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanvi isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scanvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanvi isolated_label_f1", 
        "value": 0.9613, 
        "severity": 0, 
        "severity_value": 0.48065, 
        "code": "best_score <= 2", 
        "message": "Method scanvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: isolated_label_f1\n  Best score: 0.9613%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scgpt_finetuned isolated_label_f1", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scgpt_finetuned performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt_finetuned\n  Metric id: isolated_label_f1\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scgpt_finetuned isolated_label_f1", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method scgpt_finetuned performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt_finetuned\n  Metric id: isolated_label_f1\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scgpt_zeroshot isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scgpt_zeroshot performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt_zeroshot\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scgpt_zeroshot isolated_label_f1", 
        "value": 0.0686, 
        "severity": 0, 
        "severity_value": 0.0343, 
        "code": "best_score <= 2", 
        "message": "Method scgpt_zeroshot performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt_zeroshot\n  Metric id: isolated_label_f1\n  Best score: 0.0686%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scimilarity isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scimilarity performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scimilarity isolated_label_f1", 
        "value": 0.842, 
        "severity": 0, 
        "severity_value": 0.421, 
        "code": "best_score <= 2", 
        "message": "Method scimilarity performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: isolated_label_f1\n  Best score: 0.842%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scprint isolated_label_f1", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scprint performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scprint\n  Metric id: isolated_label_f1\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scprint isolated_label_f1", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method scprint performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scprint\n  Metric id: isolated_label_f1\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scvi isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scvi isolated_label_f1", 
        "value": 0.9144, 
        "severity": 0, 
        "severity_value": 0.4572, 
        "code": "best_score <= 2", 
        "message": "Method scvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: isolated_label_f1\n  Best score: 0.9144%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score uce isolated_label_f1", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method uce performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: isolated_label_f1\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score uce isolated_label_f1", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method uce performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: isolated_label_f1\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types kbet", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: kbet\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types_jittered kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types_jittered performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types_jittered kbet", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types_jittered performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: kbet\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration kbet", 
        "value": 0.3656, 
        "severity": 0, 
        "severity_value": 0.1828, 
        "code": "best_score <= 2", 
        "message": "Method no_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: kbet\n  Best score: 0.3656%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration_batch kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration_batch kbet", 
        "value": 0.5813, 
        "severity": 0, 
        "severity_value": 0.29065, 
        "code": "best_score <= 2", 
        "message": "Method no_integration_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: kbet\n  Best score: 0.5813%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration kbet", 
        "value": 0.35, 
        "severity": 0, 
        "severity_value": 0.175, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: kbet\n  Best score: 0.35%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_batch kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_batch kbet", 
        "value": 0.0472, 
        "severity": 0, 
        "severity_value": 0.0236, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: kbet\n  Best score: 0.0472%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_cell_type kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_cell_type performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_cell_type kbet", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_cell_type performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: kbet\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_fastmnn kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_fastmnn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_fastmnn kbet", 
        "value": 0.4201, 
        "severity": 0, 
        "severity_value": 0.21005, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_fastmnn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: kbet\n  Best score: 0.4201%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_mnn_correct kbet", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_mnn_correct performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: kbet\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_mnn_correct kbet", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_mnn_correct performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: kbet\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score bbknn kbet", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method bbknn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: kbet\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score bbknn kbet", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method bbknn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: kbet\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score combat kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method combat performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score combat kbet", 
        "value": 0.2965, 
        "severity": 0, 
        "severity_value": 0.14825, 
        "code": "best_score <= 2", 
        "message": "Method combat performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: kbet\n  Best score: 0.2965%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score geneformer kbet", 
        "value": -0.0303, 
        "severity": 0, 
        "severity_value": 0.0303, 
        "code": "worst_score >= -1", 
        "message": "Method geneformer performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: kbet\n  Worst score: -0.0303%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score geneformer kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method geneformer performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: kbet\n  Best score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmony kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method harmony performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmony kbet", 
        "value": 0.4381, 
        "severity": 0, 
        "severity_value": 0.21905, 
        "code": "best_score <= 2", 
        "message": "Method harmony performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: kbet\n  Best score: 0.4381%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmonypy kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method harmonypy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmonypy kbet", 
        "value": 0.43, 
        "severity": 0, 
        "severity_value": 0.215, 
        "code": "best_score <= 2", 
        "message": "Method harmonypy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: kbet\n  Best score: 0.43%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score liger kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method liger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score liger kbet", 
        "value": 0.4092, 
        "severity": 0, 
        "severity_value": 0.2046, 
        "code": "best_score <= 2", 
        "message": "Method liger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: kbet\n  Best score: 0.4092%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score mnnpy kbet", 
        "value": -0.0179, 
        "severity": 0, 
        "severity_value": 0.0179, 
        "code": "worst_score >= -1", 
        "message": "Method mnnpy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: kbet\n  Worst score: -0.0179%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score mnnpy kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method mnnpy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: kbet\n  Best score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score pyliger kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method pyliger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score pyliger kbet", 
        "value": 0.8009, 
        "severity": 0, 
        "severity_value": 0.40045, 
        "code": "best_score <= 2", 
        "message": "Method pyliger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: kbet\n  Best score: 0.8009%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scalex kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scalex performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scalex kbet", 
        "value": 0.3316, 
        "severity": 0, 
        "severity_value": 0.1658, 
        "code": "best_score <= 2", 
        "message": "Method scalex performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: kbet\n  Best score: 0.3316%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanorama kbet", 
        "value": -0.0178, 
        "severity": 0, 
        "severity_value": 0.0178, 
        "code": "worst_score >= -1", 
        "message": "Method scanorama performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: kbet\n  Worst score: -0.0178%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanorama kbet", 
        "value": 0.0358, 
        "severity": 0, 
        "severity_value": 0.0179, 
        "code": "best_score <= 2", 
        "message": "Method scanorama performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: kbet\n  Best score: 0.0358%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanvi kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scanvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanvi kbet", 
        "value": 0.3767, 
        "severity": 0, 
        "severity_value": 0.18835, 
        "code": "best_score <= 2", 
        "message": "Method scanvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: kbet\n  Best score: 0.3767%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scgpt_finetuned kbet", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scgpt_finetuned performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt_finetuned\n  Metric id: kbet\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scgpt_finetuned kbet", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method scgpt_finetuned performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt_finetuned\n  Metric id: kbet\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scgpt_zeroshot kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scgpt_zeroshot performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt_zeroshot\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scgpt_zeroshot kbet", 
        "value": 0.3614, 
        "severity": 0, 
        "severity_value": 0.1807, 
        "code": "best_score <= 2", 
        "message": "Method scgpt_zeroshot performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt_zeroshot\n  Metric id: kbet\n  Best score: 0.3614%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scimilarity kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scimilarity performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scimilarity kbet", 
        "value": 0.371, 
        "severity": 0, 
        "severity_value": 0.1855, 
        "code": "best_score <= 2", 
        "message": "Method scimilarity performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: kbet\n  Best score: 0.371%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scprint kbet", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scprint performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scprint\n  Metric id: kbet\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scprint kbet", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method scprint performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scprint\n  Metric id: kbet\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scvi kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scvi kbet", 
        "value": 0.3572, 
        "severity": 0, 
        "severity_value": 0.1786, 
        "code": "best_score <= 2", 
        "message": "Method scvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: kbet\n  Best score: 0.3572%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score uce kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method uce performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score uce kbet", 
        "value": 0.2085, 
        "severity": 0, 
        "severity_value": 0.10425, 
        "code": "best_score <= 2", 
        "message": "Method uce performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: kbet\n  Best score: 0.2085%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types ilisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: ilisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types ilisi", 
        "value": 0.9505, 
        "severity": 0, 
        "severity_value": 0.47525, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: ilisi\n  Best score: 0.9505%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types_jittered ilisi", 
        "value": 0.3772, 
        "severity": 0, 
        "severity_value": -0.3772, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types_jittered performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: ilisi\n  Worst score: 0.3772%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types_jittered ilisi", 
        "value": 0.9547, 
        "severity": 0, 
        "severity_value": 0.47735, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types_jittered performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: ilisi\n  Best score: 0.9547%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration ilisi", 
        "value": 1.9396e-15, 
        "severity": 0, 
        "severity_value": -1.9396e-15, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: ilisi\n  Worst score: 1.9396e-15%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration ilisi", 
        "value": 0.1426, 
        "severity": 0, 
        "severity_value": 0.0713, 
        "code": "best_score <= 2", 
        "message": "Method no_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: ilisi\n  Best score: 0.1426%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration_batch ilisi", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: ilisi\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration_batch ilisi", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method no_integration_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: ilisi\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration ilisi", 
        "value": 1, 
        "severity": 0, 
        "severity_value": -1.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: ilisi\n  Worst score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration ilisi", 
        "value": 1, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: ilisi\n  Best score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_batch ilisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: ilisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_batch ilisi", 
        "value": 0.1058, 
        "severity": 0, 
        "severity_value": 0.0529, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: ilisi\n  Best score: 0.1058%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_cell_type ilisi", 
        "value": 0.4015, 
        "severity": 0, 
        "severity_value": -0.4015, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_cell_type performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: ilisi\n  Worst score: 0.4015%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_cell_type ilisi", 
        "value": 0.9642, 
        "severity": 0, 
        "severity_value": 0.4821, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_cell_type performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: ilisi\n  Best score: 0.9642%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_fastmnn ilisi", 
        "value": 0.1066, 
        "severity": 0, 
        "severity_value": -0.1066, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_fastmnn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: ilisi\n  Worst score: 0.1066%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_fastmnn ilisi", 
        "value": 0.5562, 
        "severity": 0, 
        "severity_value": 0.2781, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_fastmnn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: ilisi\n  Best score: 0.5562%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_mnn_correct ilisi", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_mnn_correct performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: ilisi\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_mnn_correct ilisi", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_mnn_correct performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: ilisi\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score bbknn ilisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method bbknn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: ilisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score bbknn ilisi", 
        "value": 36.1009, 
        "severity": 3, 
        "severity_value": 18.05045, 
        "code": "best_score <= 2", 
        "message": "Method bbknn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: ilisi\n  Best score: 36.1009%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score combat ilisi", 
        "value": 1.9396e-15, 
        "severity": 0, 
        "severity_value": -1.9396e-15, 
        "code": "worst_score >= -1", 
        "message": "Method combat performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: ilisi\n  Worst score: 1.9396e-15%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score combat ilisi", 
        "value": 0.3299, 
        "severity": 0, 
        "severity_value": 0.16495, 
        "code": "best_score <= 2", 
        "message": "Method combat performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: ilisi\n  Best score: 0.3299%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score geneformer ilisi", 
        "value": -0.0015, 
        "severity": 0, 
        "severity_value": 0.0015, 
        "code": "worst_score >= -1", 
        "message": "Method geneformer performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: ilisi\n  Worst score: -0.0015%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score geneformer ilisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method geneformer performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: ilisi\n  Best score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmony ilisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method harmony performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: ilisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmony ilisi", 
        "value": 0.6884, 
        "severity": 0, 
        "severity_value": 0.3442, 
        "code": "best_score <= 2", 
        "message": "Method harmony performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: ilisi\n  Best score: 0.6884%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmonypy ilisi", 
        "value": 0.134, 
        "severity": 0, 
        "severity_value": -0.134, 
        "code": "worst_score >= -1", 
        "message": "Method harmonypy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: ilisi\n  Worst score: 0.134%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmonypy ilisi", 
        "value": 0.6824, 
        "severity": 0, 
        "severity_value": 0.3412, 
        "code": "best_score <= 2", 
        "message": "Method harmonypy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: ilisi\n  Best score: 0.6824%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score liger ilisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method liger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: ilisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score liger ilisi", 
        "value": 0.7783, 
        "severity": 0, 
        "severity_value": 0.38915, 
        "code": "best_score <= 2", 
        "message": "Method liger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: ilisi\n  Best score: 0.7783%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score mnnpy ilisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method mnnpy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: ilisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score mnnpy ilisi", 
        "value": 0.3527, 
        "severity": 0, 
        "severity_value": 0.17635, 
        "code": "best_score <= 2", 
        "message": "Method mnnpy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: ilisi\n  Best score: 0.3527%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score pyliger ilisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method pyliger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: ilisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score pyliger ilisi", 
        "value": 0.8751, 
        "severity": 0, 
        "severity_value": 0.43755, 
        "code": "best_score <= 2", 
        "message": "Method pyliger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: ilisi\n  Best score: 0.8751%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scalex ilisi", 
        "value": 3.8792e-15, 
        "severity": 0, 
        "severity_value": -3.8792e-15, 
        "code": "worst_score >= -1", 
        "message": "Method scalex performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: ilisi\n  Worst score: 3.8792e-15%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scalex ilisi", 
        "value": 0.6444, 
        "severity": 0, 
        "severity_value": 0.3222, 
        "code": "best_score <= 2", 
        "message": "Method scalex performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: ilisi\n  Best score: 0.6444%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanorama ilisi", 
        "value": 1.9396e-15, 
        "severity": 0, 
        "severity_value": -1.9396e-15, 
        "code": "worst_score >= -1", 
        "message": "Method scanorama performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: ilisi\n  Worst score: 1.9396e-15%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanorama ilisi", 
        "value": 0.9722, 
        "severity": 0, 
        "severity_value": 0.4861, 
        "code": "best_score <= 2", 
        "message": "Method scanorama performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: ilisi\n  Best score: 0.9722%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanvi ilisi", 
        "value": 3.8792e-15, 
        "severity": 0, 
        "severity_value": -3.8792e-15, 
        "code": "worst_score >= -1", 
        "message": "Method scanvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: ilisi\n  Worst score: 3.8792e-15%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanvi ilisi", 
        "value": 0.6433, 
        "severity": 0, 
        "severity_value": 0.32165, 
        "code": "best_score <= 2", 
        "message": "Method scanvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: ilisi\n  Best score: 0.6433%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scgpt_finetuned ilisi", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scgpt_finetuned performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt_finetuned\n  Metric id: ilisi\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scgpt_finetuned ilisi", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method scgpt_finetuned performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt_finetuned\n  Metric id: ilisi\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scgpt_zeroshot ilisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scgpt_zeroshot performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt_zeroshot\n  Metric id: ilisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scgpt_zeroshot ilisi", 
        "value": 0.4652, 
        "severity": 0, 
        "severity_value": 0.2326, 
        "code": "best_score <= 2", 
        "message": "Method scgpt_zeroshot performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt_zeroshot\n  Metric id: ilisi\n  Best score: 0.4652%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scimilarity ilisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scimilarity performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: ilisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scimilarity ilisi", 
        "value": 0.4672, 
        "severity": 0, 
        "severity_value": 0.2336, 
        "code": "best_score <= 2", 
        "message": "Method scimilarity performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: ilisi\n  Best score: 0.4672%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scprint ilisi", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scprint performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scprint\n  Metric id: ilisi\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scprint ilisi", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method scprint performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scprint\n  Metric id: ilisi\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scvi ilisi", 
        "value": 3.8792e-15, 
        "severity": 0, 
        "severity_value": -3.8792e-15, 
        "code": "worst_score >= -1", 
        "message": "Method scvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: ilisi\n  Worst score: 3.8792e-15%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scvi ilisi", 
        "value": 0.6505, 
        "severity": 0, 
        "severity_value": 0.32525, 
        "code": "best_score <= 2", 
        "message": "Method scvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: ilisi\n  Best score: 0.6505%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score uce ilisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method uce performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: ilisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score uce ilisi", 
        "value": 0.4688, 
        "severity": 0, 
        "severity_value": 0.2344, 
        "code": "best_score <= 2", 
        "message": "Method uce performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: ilisi\n  Best score: 0.4688%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types clisi", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: clisi\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types clisi", 
        "value": 1, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: clisi\n  Best score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types_jittered clisi", 
        "value": 1, 
        "severity": 0, 
        "severity_value": -1.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types_jittered performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: clisi\n  Worst score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types_jittered clisi", 
        "value": 1, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types_jittered performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: clisi\n  Best score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration clisi", 
        "value": 0.9787, 
        "severity": 0, 
        "severity_value": -0.9787, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: clisi\n  Worst score: 0.9787%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration clisi", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method no_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: clisi\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration_batch clisi", 
        "value": 0.9727, 
        "severity": 0, 
        "severity_value": -0.9727, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: clisi\n  Worst score: 0.9727%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration_batch clisi", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method no_integration_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: clisi\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration clisi", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: clisi\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration clisi", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: clisi\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_batch clisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: clisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_batch clisi", 
        "value": 0.4232, 
        "severity": 0, 
        "severity_value": 0.2116, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: clisi\n  Best score: 0.4232%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_cell_type clisi", 
        "value": 0.9787, 
        "severity": 0, 
        "severity_value": -0.9787, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_cell_type performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: clisi\n  Worst score: 0.9787%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_cell_type clisi", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_cell_type performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: clisi\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_fastmnn clisi", 
        "value": 0.9545, 
        "severity": 0, 
        "severity_value": -0.9545, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_fastmnn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: clisi\n  Worst score: 0.9545%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_fastmnn clisi", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_fastmnn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: clisi\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_mnn_correct clisi", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_mnn_correct performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: clisi\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_mnn_correct clisi", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_mnn_correct performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: clisi\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score bbknn clisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method bbknn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: clisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score bbknn clisi", 
        "value": 0.8101, 
        "severity": 0, 
        "severity_value": 0.40505, 
        "code": "best_score <= 2", 
        "message": "Method bbknn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: clisi\n  Best score: 0.8101%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score combat clisi", 
        "value": 0.9761, 
        "severity": 0, 
        "severity_value": -0.9761, 
        "code": "worst_score >= -1", 
        "message": "Method combat performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: clisi\n  Worst score: 0.9761%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score combat clisi", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method combat performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: clisi\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score geneformer clisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method geneformer performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: clisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score geneformer clisi", 
        "value": 0.7421, 
        "severity": 0, 
        "severity_value": 0.37105, 
        "code": "best_score <= 2", 
        "message": "Method geneformer performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: clisi\n  Best score: 0.7421%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmony clisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method harmony performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: clisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmony clisi", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method harmony performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: clisi\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmonypy clisi", 
        "value": 0.954, 
        "severity": 0, 
        "severity_value": -0.954, 
        "code": "worst_score >= -1", 
        "message": "Method harmonypy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: clisi\n  Worst score: 0.954%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmonypy clisi", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method harmonypy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: clisi\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score liger clisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method liger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: clisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score liger clisi", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method liger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: clisi\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score mnnpy clisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method mnnpy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: clisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score mnnpy clisi", 
        "value": 0.6004, 
        "severity": 0, 
        "severity_value": 0.3002, 
        "code": "best_score <= 2", 
        "message": "Method mnnpy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: clisi\n  Best score: 0.6004%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score pyliger clisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method pyliger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: clisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score pyliger clisi", 
        "value": 0.9982, 
        "severity": 0, 
        "severity_value": 0.4991, 
        "code": "best_score <= 2", 
        "message": "Method pyliger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: clisi\n  Best score: 0.9982%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scalex clisi", 
        "value": 0.8937, 
        "severity": 0, 
        "severity_value": -0.8937, 
        "code": "worst_score >= -1", 
        "message": "Method scalex performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: clisi\n  Worst score: 0.8937%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scalex clisi", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method scalex performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: clisi\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanorama clisi", 
        "value": 0.0195, 
        "severity": 0, 
        "severity_value": -0.0195, 
        "code": "worst_score >= -1", 
        "message": "Method scanorama performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: clisi\n  Worst score: 0.0195%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanorama clisi", 
        "value": 0.5756, 
        "severity": 0, 
        "severity_value": 0.2878, 
        "code": "best_score <= 2", 
        "message": "Method scanorama performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: clisi\n  Best score: 0.5756%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanvi clisi", 
        "value": 0.9983, 
        "severity": 0, 
        "severity_value": -0.9983, 
        "code": "worst_score >= -1", 
        "message": "Method scanvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: clisi\n  Worst score: 0.9983%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanvi clisi", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method scanvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: clisi\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scgpt_finetuned clisi", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scgpt_finetuned performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt_finetuned\n  Metric id: clisi\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scgpt_finetuned clisi", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method scgpt_finetuned performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt_finetuned\n  Metric id: clisi\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scgpt_zeroshot clisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scgpt_zeroshot performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt_zeroshot\n  Metric id: clisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scgpt_zeroshot clisi", 
        "value": 0.9973, 
        "severity": 0, 
        "severity_value": 0.49865, 
        "code": "best_score <= 2", 
        "message": "Method scgpt_zeroshot performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt_zeroshot\n  Metric id: clisi\n  Best score: 0.9973%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scimilarity clisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scimilarity performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: clisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scimilarity clisi", 
        "value": 0.9989, 
        "severity": 0, 
        "severity_value": 0.49945, 
        "code": "best_score <= 2", 
        "message": "Method scimilarity performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: clisi\n  Best score: 0.9989%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scprint clisi", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scprint performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scprint\n  Metric id: clisi\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scprint clisi", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method scprint performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scprint\n  Metric id: clisi\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scvi clisi", 
        "value": 0.9852, 
        "severity": 0, 
        "severity_value": -0.9852, 
        "code": "worst_score >= -1", 
        "message": "Method scvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: clisi\n  Worst score: 0.9852%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scvi clisi", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method scvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: clisi\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score uce clisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method uce performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: clisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score uce clisi", 
        "value": 0.9973, 
        "severity": 0, 
        "severity_value": 0.49865, 
        "code": "best_score <= 2", 
        "message": "Method uce performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: clisi\n  Best score: 0.9973%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types pcr", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: pcr\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types pcr", 
        "value": 0.7115, 
        "severity": 0, 
        "severity_value": 0.35575, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: pcr\n  Best score: 0.7115%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types_jittered pcr", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types_jittered performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: pcr\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types_jittered pcr", 
        "value": 0.7116, 
        "severity": 0, 
        "severity_value": 0.3558, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types_jittered performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: pcr\n  Best score: 0.7116%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration pcr", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: pcr\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration pcr", 
        "value": 5.5861e-07, 
        "severity": 0, 
        "severity_value": 2.79305e-07, 
        "code": "best_score <= 2", 
        "message": "Method no_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: pcr\n  Best score: 5.5861e-07%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration_batch pcr", 
        "value": 1, 
        "severity": 0, 
        "severity_value": -1.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: pcr\n  Worst score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration_batch pcr", 
        "value": 1, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method no_integration_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: pcr\n  Best score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration pcr", 
        "value": 0.9966, 
        "severity": 0, 
        "severity_value": -0.9966, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: pcr\n  Worst score: 0.9966%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration pcr", 
        "value": 0.9997, 
        "severity": 0, 
        "severity_value": 0.49985, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: pcr\n  Best score: 0.9997%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_batch pcr", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: pcr\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_batch pcr", 
        "value": 1.571e-06, 
        "severity": 0, 
        "severity_value": 7.855e-07, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: pcr\n  Best score: 1.571e-06%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_cell_type pcr", 
        "value": 0.2357, 
        "severity": 0, 
        "severity_value": -0.2357, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_cell_type performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: pcr\n  Worst score: 0.2357%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_cell_type pcr", 
        "value": 0.7849, 
        "severity": 0, 
        "severity_value": 0.39245, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_cell_type performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: pcr\n  Best score: 0.7849%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_fastmnn pcr", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_fastmnn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: pcr\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_fastmnn pcr", 
        "value": 0.5337, 
        "severity": 0, 
        "severity_value": 0.26685, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_fastmnn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: pcr\n  Best score: 0.5337%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_mnn_correct pcr", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_mnn_correct performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: pcr\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_mnn_correct pcr", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_mnn_correct performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: pcr\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score bbknn pcr", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method bbknn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: pcr\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score bbknn pcr", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method bbknn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: pcr\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score combat pcr", 
        "value": 0.9996, 
        "severity": 0, 
        "severity_value": -0.9996, 
        "code": "worst_score >= -1", 
        "message": "Method combat performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: pcr\n  Worst score: 0.9996%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score combat pcr", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method combat performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: pcr\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score geneformer pcr", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method geneformer performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: pcr\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score geneformer pcr", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method geneformer performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: pcr\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmony pcr", 
        "value": 0.4488, 
        "severity": 0, 
        "severity_value": -0.4488, 
        "code": "worst_score >= -1", 
        "message": "Method harmony performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: pcr\n  Worst score: 0.4488%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmony pcr", 
        "value": 0.6812, 
        "severity": 0, 
        "severity_value": 0.3406, 
        "code": "best_score <= 2", 
        "message": "Method harmony performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: pcr\n  Best score: 0.6812%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmonypy pcr", 
        "value": 0.4441, 
        "severity": 0, 
        "severity_value": -0.4441, 
        "code": "worst_score >= -1", 
        "message": "Method harmonypy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: pcr\n  Worst score: 0.4441%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmonypy pcr", 
        "value": 0.6897, 
        "severity": 0, 
        "severity_value": 0.34485, 
        "code": "best_score <= 2", 
        "message": "Method harmonypy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: pcr\n  Best score: 0.6897%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score liger pcr", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method liger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: pcr\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score liger pcr", 
        "value": 0.8296, 
        "severity": 0, 
        "severity_value": 0.4148, 
        "code": "best_score <= 2", 
        "message": "Method liger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: pcr\n  Best score: 0.8296%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score mnnpy pcr", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method mnnpy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: pcr\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score mnnpy pcr", 
        "value": 0.6494, 
        "severity": 0, 
        "severity_value": 0.3247, 
        "code": "best_score <= 2", 
        "message": "Method mnnpy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: pcr\n  Best score: 0.6494%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score pyliger pcr", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method pyliger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: pcr\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score pyliger pcr", 
        "value": 0.8038, 
        "severity": 0, 
        "severity_value": 0.4019, 
        "code": "best_score <= 2", 
        "message": "Method pyliger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: pcr\n  Best score: 0.8038%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scalex pcr", 
        "value": 0.9785, 
        "severity": 0, 
        "severity_value": -0.9785, 
        "code": "worst_score >= -1", 
        "message": "Method scalex performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: pcr\n  Worst score: 0.9785%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scalex pcr", 
        "value": 0.9999, 
        "severity": 0, 
        "severity_value": 0.49995, 
        "code": "best_score <= 2", 
        "message": "Method scalex performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: pcr\n  Best score: 0.9999%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanorama pcr", 
        "value": 0.003, 
        "severity": 0, 
        "severity_value": -0.003, 
        "code": "worst_score >= -1", 
        "message": "Method scanorama performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: pcr\n  Worst score: 0.003%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanorama pcr", 
        "value": 0.9994, 
        "severity": 0, 
        "severity_value": 0.4997, 
        "code": "best_score <= 2", 
        "message": "Method scanorama performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: pcr\n  Best score: 0.9994%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanvi pcr", 
        "value": 0.0347, 
        "severity": 0, 
        "severity_value": -0.0347, 
        "code": "worst_score >= -1", 
        "message": "Method scanvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: pcr\n  Worst score: 0.0347%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanvi pcr", 
        "value": 0.636, 
        "severity": 0, 
        "severity_value": 0.318, 
        "code": "best_score <= 2", 
        "message": "Method scanvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: pcr\n  Best score: 0.636%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scgpt_finetuned pcr", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scgpt_finetuned performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt_finetuned\n  Metric id: pcr\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scgpt_finetuned pcr", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method scgpt_finetuned performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt_finetuned\n  Metric id: pcr\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scgpt_zeroshot pcr", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scgpt_zeroshot performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt_zeroshot\n  Metric id: pcr\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scgpt_zeroshot pcr", 
        "value": 0.1917, 
        "severity": 0, 
        "severity_value": 0.09585, 
        "code": "best_score <= 2", 
        "message": "Method scgpt_zeroshot performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt_zeroshot\n  Metric id: pcr\n  Best score: 0.1917%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scimilarity pcr", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scimilarity performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: pcr\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scimilarity pcr", 
        "value": 0.3969, 
        "severity": 0, 
        "severity_value": 0.19845, 
        "code": "best_score <= 2", 
        "message": "Method scimilarity performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: pcr\n  Best score: 0.3969%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scprint pcr", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scprint performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scprint\n  Metric id: pcr\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scprint pcr", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method scprint performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scprint\n  Metric id: pcr\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scvi pcr", 
        "value": 0.2525, 
        "severity": 0, 
        "severity_value": -0.2525, 
        "code": "worst_score >= -1", 
        "message": "Method scvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: pcr\n  Worst score: 0.2525%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scvi pcr", 
        "value": 0.681, 
        "severity": 0, 
        "severity_value": 0.3405, 
        "code": "best_score <= 2", 
        "message": "Method scvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: pcr\n  Best score: 0.681%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score uce pcr", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method uce performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: pcr\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score uce pcr", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method uce performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: pcr\n  Best score: 0%\n"
    }
]