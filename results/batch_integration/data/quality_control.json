[
    {
        "task_id": "task_batch_integration", 
        "category": "Task info", 
        "name": "Pct 'task_id' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing([task_info], field)", 
        "message": "Task metadata field 'task_id' should be defined\n  Task id: task_batch_integration\n  Field: task_id\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Task info", 
        "name": "Pct 'task_name' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing([task_info], field)", 
        "message": "Task metadata field 'task_name' should be defined\n  Task id: task_batch_integration\n  Field: task_name\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Task info", 
        "name": "Pct 'task_summary' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing([task_info], field)", 
        "message": "Task metadata field 'task_summary' should be defined\n  Task id: task_batch_integration\n  Field: task_summary\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Task info", 
        "name": "Pct 'task_description' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing([task_info], field)", 
        "message": "Task metadata field 'task_description' should be defined\n  Task id: task_batch_integration\n  Field: task_description\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Method info", 
        "name": "Pct 'task_id' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(method_info, field)", 
        "message": "Method metadata field 'task_id' should be defined\n  Task id: task_batch_integration\n  Field: task_id\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Method info", 
        "name": "Pct 'commit_sha' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(method_info, field)", 
        "message": "Method metadata field 'commit_sha' should be defined\n  Task id: task_batch_integration\n  Field: commit_sha\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Method info", 
        "name": "Pct 'method_id' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(method_info, field)", 
        "message": "Method metadata field 'method_id' should be defined\n  Task id: task_batch_integration\n  Field: method_id\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Method info", 
        "name": "Pct 'method_name' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(method_info, field)", 
        "message": "Method metadata field 'method_name' should be defined\n  Task id: task_batch_integration\n  Field: method_name\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Method info", 
        "name": "Pct 'method_summary' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(method_info, field)", 
        "message": "Method metadata field 'method_summary' should be defined\n  Task id: task_batch_integration\n  Field: method_summary\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Method info", 
        "name": "Pct 'paper_reference' missing", 
        "value": 0.6666666666666666, 
        "severity": 2, 
        "severity_value": 3.0, 
        "code": "percent_missing(method_info, field)", 
        "message": "Method metadata field 'paper_reference' should be defined\n  Task id: task_batch_integration\n  Field: paper_reference\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Method info", 
        "name": "Pct 'is_baseline' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(method_info, field)", 
        "message": "Method metadata field 'is_baseline' should be defined\n  Task id: task_batch_integration\n  Field: is_baseline\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Metric info", 
        "name": "Pct 'task_id' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(metric_info, field)", 
        "message": "Metric metadata field 'task_id' should be defined\n  Task id: task_batch_integration\n  Field: task_id\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Metric info", 
        "name": "Pct 'commit_sha' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(metric_info, field)", 
        "message": "Metric metadata field 'commit_sha' should be defined\n  Task id: task_batch_integration\n  Field: commit_sha\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Metric info", 
        "name": "Pct 'metric_id' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(metric_info, field)", 
        "message": "Metric metadata field 'metric_id' should be defined\n  Task id: task_batch_integration\n  Field: metric_id\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Metric info", 
        "name": "Pct 'metric_name' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(metric_info, field)", 
        "message": "Metric metadata field 'metric_name' should be defined\n  Task id: task_batch_integration\n  Field: metric_name\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Metric info", 
        "name": "Pct 'metric_summary' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(metric_info, field)", 
        "message": "Metric metadata field 'metric_summary' should be defined\n  Task id: task_batch_integration\n  Field: metric_summary\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Metric info", 
        "name": "Pct 'paper_reference' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(metric_info, field)", 
        "message": "Metric metadata field 'paper_reference' should be defined\n  Task id: task_batch_integration\n  Field: paper_reference\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Metric info", 
        "name": "Pct 'maximize' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(metric_info, field)", 
        "message": "Metric metadata field 'maximize' should be defined\n  Task id: task_batch_integration\n  Field: maximize\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Dataset info", 
        "name": "Pct 'task_id' missing", 
        "value": 1.0, 
        "severity": 2, 
        "severity_value": 3.0, 
        "code": "percent_missing(dataset_info, field)", 
        "message": "Dataset metadata field 'task_id' should be defined\n  Task id: task_batch_integration\n  Field: task_id\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Dataset info", 
        "name": "Pct 'dataset_id' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(dataset_info, field)", 
        "message": "Dataset metadata field 'dataset_id' should be defined\n  Task id: task_batch_integration\n  Field: dataset_id\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Dataset info", 
        "name": "Pct 'dataset_name' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(dataset_info, field)", 
        "message": "Dataset metadata field 'dataset_name' should be defined\n  Task id: task_batch_integration\n  Field: dataset_name\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Dataset info", 
        "name": "Pct 'dataset_summary' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(dataset_info, field)", 
        "message": "Dataset metadata field 'dataset_summary' should be defined\n  Task id: task_batch_integration\n  Field: dataset_summary\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Dataset info", 
        "name": "Pct 'data_reference' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(dataset_info, field)", 
        "message": "Dataset metadata field 'data_reference' should be defined\n  Task id: task_batch_integration\n  Field: data_reference\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Dataset info", 
        "name": "Pct 'data_url' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(dataset_info, field)", 
        "message": "Dataset metadata field 'data_url' should be defined\n  Task id: task_batch_integration\n  Field: data_url\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw data", 
        "name": "Number of results", 
        "value": 420, 
        "severity": 0, 
        "severity_value": -10.0, 
        "code": "len(results) == len(method_info) * len(metric_info) * len(dataset_info)", 
        "message": "Number of results should be equal to #methods × #metrics × #datasets.\n  Task id: task_batch_integration\n  Number of results: 420\n  Number of methods: 21\n  Number of metrics: 13\n  Number of datasets: 10\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Metric 'asw_batch' %missing", 
        "value": 0.5857142857142857, 
        "severity": 3, 
        "severity_value": 5.857142857142857, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  Metric id: asw_batch\n  Percentage missing: 59%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Metric 'asw_label' %missing", 
        "value": 0.5857142857142857, 
        "severity": 3, 
        "severity_value": 5.857142857142857, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  Metric id: asw_label\n  Percentage missing: 59%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Metric 'cell_cycle_conservation' %missing", 
        "value": 0.5619047619047619, 
        "severity": 3, 
        "severity_value": 5.619047619047619, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  Metric id: cell_cycle_conservation\n  Percentage missing: 56%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Metric 'ari' %missing", 
        "value": 0.319047619047619, 
        "severity": 3, 
        "severity_value": 3.1904761904761902, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  Metric id: ari\n  Percentage missing: 32%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Metric 'nmi' %missing", 
        "value": 0.319047619047619, 
        "severity": 3, 
        "severity_value": 3.1904761904761902, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  Metric id: nmi\n  Percentage missing: 32%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Metric 'graph_connectivity' %missing", 
        "value": 0.09047619047619038, 
        "severity": 0, 
        "severity_value": 0.9047619047619038, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  Metric id: graph_connectivity\n  Percentage missing: 9%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Metric 'hvg_overlap' %missing", 
        "value": 0.7047619047619047, 
        "severity": 3, 
        "severity_value": 7.047619047619047, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  Metric id: hvg_overlap\n  Percentage missing: 70%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Metric 'isolated_label_asw' %missing", 
        "value": 0.5904761904761905, 
        "severity": 3, 
        "severity_value": 5.904761904761904, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  Metric id: isolated_label_asw\n  Percentage missing: 59%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Metric 'isolated_label_f1' %missing", 
        "value": 0.37142857142857144, 
        "severity": 3, 
        "severity_value": 3.7142857142857144, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  Metric id: isolated_label_f1\n  Percentage missing: 37%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Metric 'kbet' %missing", 
        "value": 0.2857142857142857, 
        "severity": 2, 
        "severity_value": 2.8571428571428568, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  Metric id: kbet\n  Percentage missing: 29%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Metric 'ilisi' %missing", 
        "value": 0.09047619047619038, 
        "severity": 0, 
        "severity_value": 0.9047619047619038, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  Metric id: ilisi\n  Percentage missing: 9%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Metric 'clisi' %missing", 
        "value": 0.09047619047619038, 
        "severity": 0, 
        "severity_value": 0.9047619047619038, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  Metric id: clisi\n  Percentage missing: 9%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Metric 'pcr' %missing", 
        "value": 0.20952380952380945, 
        "severity": 2, 
        "severity_value": 2.0952380952380945, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  Metric id: pcr\n  Percentage missing: 21%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'embed_cell_types' %missing", 
        "value": 0.18461538461538463, 
        "severity": 1, 
        "severity_value": 1.8461538461538463, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: embed_cell_types\n  Percentage missing: 18%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'embed_cell_types_jittered' %missing", 
        "value": 0.1923076923076923, 
        "severity": 1, 
        "severity_value": 1.923076923076923, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: embed_cell_types_jittered\n  Percentage missing: 19%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'no_integration' %missing", 
        "value": 0.46923076923076923, 
        "severity": 3, 
        "severity_value": 4.692307692307692, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: no_integration\n  Percentage missing: 47%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'no_integration_batch' %missing", 
        "value": 0.2153846153846154, 
        "severity": 2, 
        "severity_value": 2.1538461538461537, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: no_integration_batch\n  Percentage missing: 22%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'shuffle_integration' %missing", 
        "value": 0.3615384615384615, 
        "severity": 3, 
        "severity_value": 3.6153846153846145, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: shuffle_integration\n  Percentage missing: 36%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'shuffle_integration_by_batch' %missing", 
        "value": 0.36923076923076925, 
        "severity": 3, 
        "severity_value": 3.6923076923076925, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: shuffle_integration_by_batch\n  Percentage missing: 37%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'shuffle_integration_by_cell_type' %missing", 
        "value": 0.3307692307692308, 
        "severity": 3, 
        "severity_value": 3.307692307692308, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: shuffle_integration_by_cell_type\n  Percentage missing: 33%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'batchelor_fastmnn' %missing", 
        "value": 0.2384615384615384, 
        "severity": 2, 
        "severity_value": 2.3846153846153837, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: batchelor_fastmnn\n  Percentage missing: 24%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'batchelor_mnn_correct' %missing", 
        "value": 0.7076923076923077, 
        "severity": 3, 
        "severity_value": 7.076923076923077, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: batchelor_mnn_correct\n  Percentage missing: 71%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'bbknn' %missing", 
        "value": 0.6461538461538462, 
        "severity": 3, 
        "severity_value": 6.461538461538462, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: bbknn\n  Percentage missing: 65%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'combat' %missing", 
        "value": 0.3307692307692308, 
        "severity": 3, 
        "severity_value": 3.307692307692308, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: combat\n  Percentage missing: 33%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'harmony' %missing", 
        "value": 0.20769230769230762, 
        "severity": 2, 
        "severity_value": 2.076923076923076, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: harmony\n  Percentage missing: 21%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'harmonypy' %missing", 
        "value": 0.4538461538461539, 
        "severity": 3, 
        "severity_value": 4.538461538461538, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: harmonypy\n  Percentage missing: 45%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'liger' %missing", 
        "value": 0.3846153846153846, 
        "severity": 3, 
        "severity_value": 3.846153846153846, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: liger\n  Percentage missing: 38%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'mnnpy' %missing", 
        "value": 0.7076923076923077, 
        "severity": 3, 
        "severity_value": 7.076923076923077, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: mnnpy\n  Percentage missing: 71%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'pyliger' %missing", 
        "value": 0.20769230769230762, 
        "severity": 2, 
        "severity_value": 2.076923076923076, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: pyliger\n  Percentage missing: 21%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'scalex' %missing", 
        "value": 0.17692307692307696, 
        "severity": 1, 
        "severity_value": 1.7692307692307696, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: scalex\n  Percentage missing: 18%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'scanorama' %missing", 
        "value": 0.10000000000000009, 
        "severity": 1, 
        "severity_value": 1.0000000000000009, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: scanorama\n  Percentage missing: 10%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'scanvi' %missing", 
        "value": 0.4307692307692308, 
        "severity": 3, 
        "severity_value": 4.3076923076923075, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: scanvi\n  Percentage missing: 43%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'scimilarity' %missing", 
        "value": 0.6692307692307693, 
        "severity": 3, 
        "severity_value": 6.6923076923076925, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: scimilarity\n  Percentage missing: 67%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'scvi' %missing", 
        "value": 0.3769230769230769, 
        "severity": 3, 
        "severity_value": 3.769230769230769, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: scvi\n  Percentage missing: 38%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Dataset 'openproblems_v1/immune_cells' %missing", 
        "value": 0.19047619047619047, 
        "severity": 1, 
        "severity_value": 1.9047619047619047, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  dataset id: openproblems_v1/immune_cells\n  Percentage missing: 19%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Dataset 'cellxgene_census/mouse_pancreas_atlas' %missing", 
        "value": 0.4652014652014652, 
        "severity": 3, 
        "severity_value": 4.6520146520146515, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  dataset id: cellxgene_census/mouse_pancreas_atlas\n  Percentage missing: 47%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Dataset 'cellxgene_census/gtex_v9' %missing", 
        "value": 0.4432234432234432, 
        "severity": 3, 
        "severity_value": 4.432234432234432, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  dataset id: cellxgene_census/gtex_v9\n  Percentage missing: 44%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Dataset 'cellxgene_census/immune_cell_atlas' %missing", 
        "value": 0.3992673992673993, 
        "severity": 3, 
        "severity_value": 3.9926739926739927, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  dataset id: cellxgene_census/immune_cell_atlas\n  Percentage missing: 40%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Dataset 'openproblems_v1/cengen' %missing", 
        "value": 0.3992673992673993, 
        "severity": 3, 
        "severity_value": 3.9926739926739927, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  dataset id: openproblems_v1/cengen\n  Percentage missing: 40%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Dataset 'openproblems_v1/pancreas' %missing", 
        "value": 0.19413919413919412, 
        "severity": 1, 
        "severity_value": 1.9413919413919412, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  dataset id: openproblems_v1/pancreas\n  Percentage missing: 19%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Dataset 'cellxgene_census/dkd' %missing", 
        "value": 0.27472527472527475, 
        "severity": 2, 
        "severity_value": 2.7472527472527473, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  dataset id: cellxgene_census/dkd\n  Percentage missing: 27%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Dataset 'openproblems_v1/zebrafish' %missing", 
        "value": 0.3003663003663004, 
        "severity": 3, 
        "severity_value": 3.003663003663004, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  dataset id: openproblems_v1/zebrafish\n  Percentage missing: 30%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Dataset 'cellxgene_census/hypomap' %missing", 
        "value": 0.5457875457875458, 
        "severity": 3, 
        "severity_value": 5.457875457875458, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  dataset id: cellxgene_census/hypomap\n  Percentage missing: 55%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Dataset 'cellxgene_census/tabula_sapiens' %missing", 
        "value": 0.48351648351648346, 
        "severity": 3, 
        "severity_value": 4.835164835164834, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  dataset id: cellxgene_census/tabula_sapiens\n  Percentage missing: 48%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types asw_batch", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: asw_batch\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types asw_batch", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: asw_batch\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types_jittered asw_batch", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types_jittered performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: asw_batch\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types_jittered asw_batch", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types_jittered performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: asw_batch\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration asw_batch", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: asw_batch\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration asw_batch", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method no_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: asw_batch\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration_batch asw_batch", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: asw_batch\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration_batch asw_batch", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method no_integration_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: asw_batch\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration asw_batch", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: asw_batch\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration asw_batch", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: asw_batch\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_batch asw_batch", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: asw_batch\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_batch asw_batch", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: asw_batch\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_cell_type asw_batch", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_cell_type performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: asw_batch\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_cell_type asw_batch", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_cell_type performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: asw_batch\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_fastmnn asw_batch", 
        "value": -912.0257, 
        "severity": 3, 
        "severity_value": 912.0257, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_fastmnn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: asw_batch\n  Worst score: -912.0257%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_fastmnn asw_batch", 
        "value": 1.4549, 
        "severity": 0, 
        "severity_value": 0.72745, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_fastmnn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: asw_batch\n  Best score: 1.4549%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_mnn_correct asw_batch", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_mnn_correct performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: asw_batch\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_mnn_correct asw_batch", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_mnn_correct performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: asw_batch\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score bbknn asw_batch", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method bbknn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: asw_batch\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score bbknn asw_batch", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method bbknn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: asw_batch\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score combat asw_batch", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method combat performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: asw_batch\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score combat asw_batch", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method combat performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: asw_batch\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmony asw_batch", 
        "value": -821.5997, 
        "severity": 3, 
        "severity_value": 821.5997, 
        "code": "worst_score >= -1", 
        "message": "Method harmony performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: asw_batch\n  Worst score: -821.5997%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmony asw_batch", 
        "value": 0.8391, 
        "severity": 0, 
        "severity_value": 0.41955, 
        "code": "best_score <= 2", 
        "message": "Method harmony performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: asw_batch\n  Best score: 0.8391%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmonypy asw_batch", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method harmonypy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: asw_batch\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmonypy asw_batch", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method harmonypy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: asw_batch\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score liger asw_batch", 
        "value": -1706.8654, 
        "severity": 3, 
        "severity_value": 1706.8654, 
        "code": "worst_score >= -1", 
        "message": "Method liger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: asw_batch\n  Worst score: -1706.8654%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score liger asw_batch", 
        "value": 0.6571, 
        "severity": 0, 
        "severity_value": 0.32855, 
        "code": "best_score <= 2", 
        "message": "Method liger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: asw_batch\n  Best score: 0.6571%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score mnnpy asw_batch", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method mnnpy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: asw_batch\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score mnnpy asw_batch", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method mnnpy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: asw_batch\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score pyliger asw_batch", 
        "value": -1610.8053, 
        "severity": 3, 
        "severity_value": 1610.8053, 
        "code": "worst_score >= -1", 
        "message": "Method pyliger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: asw_batch\n  Worst score: -1610.8053%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score pyliger asw_batch", 
        "value": 0.7101, 
        "severity": 0, 
        "severity_value": 0.35505, 
        "code": "best_score <= 2", 
        "message": "Method pyliger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: asw_batch\n  Best score: 0.7101%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scalex asw_batch", 
        "value": -1286.2732, 
        "severity": 3, 
        "severity_value": 1286.2732, 
        "code": "worst_score >= -1", 
        "message": "Method scalex performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: asw_batch\n  Worst score: -1286.2732%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scalex asw_batch", 
        "value": 0.6878, 
        "severity": 0, 
        "severity_value": 0.3439, 
        "code": "best_score <= 2", 
        "message": "Method scalex performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: asw_batch\n  Best score: 0.6878%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanorama asw_batch", 
        "value": -602.8003, 
        "severity": 3, 
        "severity_value": 602.8003, 
        "code": "worst_score >= -1", 
        "message": "Method scanorama performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: asw_batch\n  Worst score: -602.8003%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanorama asw_batch", 
        "value": 0.819, 
        "severity": 0, 
        "severity_value": 0.4095, 
        "code": "best_score <= 2", 
        "message": "Method scanorama performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: asw_batch\n  Best score: 0.819%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanvi asw_batch", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scanvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: asw_batch\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanvi asw_batch", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method scanvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: asw_batch\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scimilarity asw_batch", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scimilarity performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: asw_batch\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scimilarity asw_batch", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method scimilarity performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: asw_batch\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scvi asw_batch", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: asw_batch\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scvi asw_batch", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method scvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: asw_batch\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types asw_label", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: asw_label\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types asw_label", 
        "value": 1, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: asw_label\n  Best score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types_jittered asw_label", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types_jittered performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: asw_label\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types_jittered asw_label", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types_jittered performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: asw_label\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration asw_label", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: asw_label\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration asw_label", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method no_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: asw_label\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration_batch asw_label", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: asw_label\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration_batch asw_label", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method no_integration_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: asw_label\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration asw_label", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: asw_label\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration asw_label", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: asw_label\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_batch asw_label", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: asw_label\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_batch asw_label", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: asw_label\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_cell_type asw_label", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_cell_type performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: asw_label\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_cell_type asw_label", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_cell_type performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: asw_label\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_fastmnn asw_label", 
        "value": -208508.9977, 
        "severity": 3, 
        "severity_value": 208508.9977, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_fastmnn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: asw_label\n  Worst score: -208508.9977%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_fastmnn asw_label", 
        "value": 0.327, 
        "severity": 0, 
        "severity_value": 0.1635, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_fastmnn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: asw_label\n  Best score: 0.327%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_mnn_correct asw_label", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_mnn_correct performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: asw_label\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_mnn_correct asw_label", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_mnn_correct performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: asw_label\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score bbknn asw_label", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method bbknn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: asw_label\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score bbknn asw_label", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method bbknn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: asw_label\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score combat asw_label", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method combat performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: asw_label\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score combat asw_label", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method combat performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: asw_label\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmony asw_label", 
        "value": -213163.4189, 
        "severity": 3, 
        "severity_value": 213163.4189, 
        "code": "worst_score >= -1", 
        "message": "Method harmony performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: asw_label\n  Worst score: -213163.4189%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmony asw_label", 
        "value": 0.3333, 
        "severity": 0, 
        "severity_value": 0.16665, 
        "code": "best_score <= 2", 
        "message": "Method harmony performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: asw_label\n  Best score: 0.3333%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmonypy asw_label", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method harmonypy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: asw_label\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmonypy asw_label", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method harmonypy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: asw_label\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score liger asw_label", 
        "value": -238116.3564, 
        "severity": 3, 
        "severity_value": 238116.3564, 
        "code": "worst_score >= -1", 
        "message": "Method liger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: asw_label\n  Worst score: -238116.3564%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score liger asw_label", 
        "value": 0.3724, 
        "severity": 0, 
        "severity_value": 0.1862, 
        "code": "best_score <= 2", 
        "message": "Method liger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: asw_label\n  Best score: 0.3724%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score mnnpy asw_label", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method mnnpy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: asw_label\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score mnnpy asw_label", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method mnnpy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: asw_label\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score pyliger asw_label", 
        "value": -226805.6277, 
        "severity": 3, 
        "severity_value": 226805.6277, 
        "code": "worst_score >= -1", 
        "message": "Method pyliger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: asw_label\n  Worst score: -226805.6277%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score pyliger asw_label", 
        "value": 0.4053, 
        "severity": 0, 
        "severity_value": 0.20265, 
        "code": "best_score <= 2", 
        "message": "Method pyliger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: asw_label\n  Best score: 0.4053%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scalex asw_label", 
        "value": -225151.4251, 
        "severity": 3, 
        "severity_value": 225151.4251, 
        "code": "worst_score >= -1", 
        "message": "Method scalex performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: asw_label\n  Worst score: -225151.4251%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scalex asw_label", 
        "value": 0.1676, 
        "severity": 0, 
        "severity_value": 0.0838, 
        "code": "best_score <= 2", 
        "message": "Method scalex performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: asw_label\n  Best score: 0.1676%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanorama asw_label", 
        "value": -234208.8293, 
        "severity": 3, 
        "severity_value": 234208.8293, 
        "code": "worst_score >= -1", 
        "message": "Method scanorama performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: asw_label\n  Worst score: -234208.8293%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanorama asw_label", 
        "value": 0.0326, 
        "severity": 0, 
        "severity_value": 0.0163, 
        "code": "best_score <= 2", 
        "message": "Method scanorama performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: asw_label\n  Best score: 0.0326%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanvi asw_label", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scanvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: asw_label\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanvi asw_label", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method scanvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: asw_label\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scimilarity asw_label", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scimilarity performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: asw_label\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scimilarity asw_label", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method scimilarity performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: asw_label\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scvi asw_label", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: asw_label\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scvi asw_label", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method scvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: asw_label\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types cell_cycle_conservation", 
        "value": 0.7082, 
        "severity": 0, 
        "severity_value": 0.3541, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: cell_cycle_conservation\n  Best score: 0.7082%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types_jittered cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types_jittered performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types_jittered cell_cycle_conservation", 
        "value": 0.7087, 
        "severity": 0, 
        "severity_value": 0.35435, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types_jittered performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: cell_cycle_conservation\n  Best score: 0.7087%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration cell_cycle_conservation", 
        "value": 0.9276, 
        "severity": 0, 
        "severity_value": 0.4638, 
        "code": "best_score <= 2", 
        "message": "Method no_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: cell_cycle_conservation\n  Best score: 0.9276%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration_batch cell_cycle_conservation", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: cell_cycle_conservation\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration_batch cell_cycle_conservation", 
        "value": 1, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method no_integration_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: cell_cycle_conservation\n  Best score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration cell_cycle_conservation", 
        "value": 0.0088, 
        "severity": 0, 
        "severity_value": 0.0044, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: cell_cycle_conservation\n  Best score: 0.0088%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_batch cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_batch cell_cycle_conservation", 
        "value": 0.0137, 
        "severity": 0, 
        "severity_value": 0.00685, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: cell_cycle_conservation\n  Best score: 0.0137%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_cell_type cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_cell_type performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_cell_type cell_cycle_conservation", 
        "value": 0.81, 
        "severity": 0, 
        "severity_value": 0.405, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_cell_type performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: cell_cycle_conservation\n  Best score: 0.81%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_fastmnn cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_fastmnn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_fastmnn cell_cycle_conservation", 
        "value": 0.9143, 
        "severity": 0, 
        "severity_value": 0.45715, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_fastmnn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: cell_cycle_conservation\n  Best score: 0.9143%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_mnn_correct cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_mnn_correct performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_mnn_correct cell_cycle_conservation", 
        "value": 0.9433, 
        "severity": 0, 
        "severity_value": 0.47165, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_mnn_correct performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: cell_cycle_conservation\n  Best score: 0.9433%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score bbknn cell_cycle_conservation", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method bbknn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: cell_cycle_conservation\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score bbknn cell_cycle_conservation", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method bbknn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: cell_cycle_conservation\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score combat cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method combat performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score combat cell_cycle_conservation", 
        "value": 0.9082, 
        "severity": 0, 
        "severity_value": 0.4541, 
        "code": "best_score <= 2", 
        "message": "Method combat performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: cell_cycle_conservation\n  Best score: 0.9082%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmony cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method harmony performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmony cell_cycle_conservation", 
        "value": 0.9101, 
        "severity": 0, 
        "severity_value": 0.45505, 
        "code": "best_score <= 2", 
        "message": "Method harmony performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: cell_cycle_conservation\n  Best score: 0.9101%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmonypy cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method harmonypy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmonypy cell_cycle_conservation", 
        "value": 0.9101, 
        "severity": 0, 
        "severity_value": 0.45505, 
        "code": "best_score <= 2", 
        "message": "Method harmonypy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: cell_cycle_conservation\n  Best score: 0.9101%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score liger cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method liger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score liger cell_cycle_conservation", 
        "value": 0.6492, 
        "severity": 0, 
        "severity_value": 0.3246, 
        "code": "best_score <= 2", 
        "message": "Method liger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: cell_cycle_conservation\n  Best score: 0.6492%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score mnnpy cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method mnnpy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score mnnpy cell_cycle_conservation", 
        "value": 0.4054, 
        "severity": 0, 
        "severity_value": 0.2027, 
        "code": "best_score <= 2", 
        "message": "Method mnnpy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: cell_cycle_conservation\n  Best score: 0.4054%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score pyliger cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method pyliger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score pyliger cell_cycle_conservation", 
        "value": 0.6855, 
        "severity": 0, 
        "severity_value": 0.34275, 
        "code": "best_score <= 2", 
        "message": "Method pyliger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: cell_cycle_conservation\n  Best score: 0.6855%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scalex cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scalex performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scalex cell_cycle_conservation", 
        "value": 0.8081, 
        "severity": 0, 
        "severity_value": 0.40405, 
        "code": "best_score <= 2", 
        "message": "Method scalex performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: cell_cycle_conservation\n  Best score: 0.8081%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanorama cell_cycle_conservation", 
        "value": -0.0032, 
        "severity": 0, 
        "severity_value": 0.0032, 
        "code": "worst_score >= -1", 
        "message": "Method scanorama performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: cell_cycle_conservation\n  Worst score: -0.0032%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanorama cell_cycle_conservation", 
        "value": 0.4253, 
        "severity": 0, 
        "severity_value": 0.21265, 
        "code": "best_score <= 2", 
        "message": "Method scanorama performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: cell_cycle_conservation\n  Best score: 0.4253%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanvi cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scanvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanvi cell_cycle_conservation", 
        "value": 0.8055, 
        "severity": 0, 
        "severity_value": 0.40275, 
        "code": "best_score <= 2", 
        "message": "Method scanvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: cell_cycle_conservation\n  Best score: 0.8055%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scimilarity cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scimilarity performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scimilarity cell_cycle_conservation", 
        "value": 0.6713, 
        "severity": 0, 
        "severity_value": 0.33565, 
        "code": "best_score <= 2", 
        "message": "Method scimilarity performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: cell_cycle_conservation\n  Best score: 0.6713%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scvi cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scvi cell_cycle_conservation", 
        "value": 0.7248, 
        "severity": 0, 
        "severity_value": 0.3624, 
        "code": "best_score <= 2", 
        "message": "Method scvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: cell_cycle_conservation\n  Best score: 0.7248%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types ari", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: ari\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types ari", 
        "value": 1, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: ari\n  Best score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types_jittered ari", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types_jittered performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: ari\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types_jittered ari", 
        "value": 1, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types_jittered performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: ari\n  Best score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration ari", 
        "value": 0.9954, 
        "severity": 0, 
        "severity_value": 0.4977, 
        "code": "best_score <= 2", 
        "message": "Method no_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: ari\n  Best score: 0.9954%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration_batch ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration_batch ari", 
        "value": 0.8247, 
        "severity": 0, 
        "severity_value": 0.41235, 
        "code": "best_score <= 2", 
        "message": "Method no_integration_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: ari\n  Best score: 0.8247%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration ari", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: ari\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration ari", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: ari\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_batch ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_batch ari", 
        "value": 0.0525, 
        "severity": 0, 
        "severity_value": 0.02625, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: ari\n  Best score: 0.0525%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_cell_type ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_cell_type performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_cell_type ari", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_cell_type performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: ari\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_fastmnn ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_fastmnn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_fastmnn ari", 
        "value": 0.9442, 
        "severity": 0, 
        "severity_value": 0.4721, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_fastmnn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: ari\n  Best score: 0.9442%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_mnn_correct ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_mnn_correct performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_mnn_correct ari", 
        "value": 0.9506, 
        "severity": 0, 
        "severity_value": 0.4753, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_mnn_correct performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: ari\n  Best score: 0.9506%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score bbknn ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method bbknn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score bbknn ari", 
        "value": 0.9514, 
        "severity": 0, 
        "severity_value": 0.4757, 
        "code": "best_score <= 2", 
        "message": "Method bbknn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: ari\n  Best score: 0.9514%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score combat ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method combat performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score combat ari", 
        "value": 2.2473, 
        "severity": 1, 
        "severity_value": 1.12365, 
        "code": "best_score <= 2", 
        "message": "Method combat performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: ari\n  Best score: 2.2473%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmony ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method harmony performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmony ari", 
        "value": 2.0949, 
        "severity": 1, 
        "severity_value": 1.04745, 
        "code": "best_score <= 2", 
        "message": "Method harmony performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: ari\n  Best score: 2.0949%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmonypy ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method harmonypy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmonypy ari", 
        "value": 0.9501, 
        "severity": 0, 
        "severity_value": 0.47505, 
        "code": "best_score <= 2", 
        "message": "Method harmonypy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: ari\n  Best score: 0.9501%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score liger ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method liger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score liger ari", 
        "value": 0.9042, 
        "severity": 0, 
        "severity_value": 0.4521, 
        "code": "best_score <= 2", 
        "message": "Method liger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: ari\n  Best score: 0.9042%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score mnnpy ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method mnnpy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score mnnpy ari", 
        "value": 0.1667, 
        "severity": 0, 
        "severity_value": 0.08335, 
        "code": "best_score <= 2", 
        "message": "Method mnnpy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: ari\n  Best score: 0.1667%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score pyliger ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method pyliger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score pyliger ari", 
        "value": 2.0472, 
        "severity": 1, 
        "severity_value": 1.0236, 
        "code": "best_score <= 2", 
        "message": "Method pyliger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: ari\n  Best score: 2.0472%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scalex ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scalex performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scalex ari", 
        "value": 0.6023, 
        "severity": 0, 
        "severity_value": 0.30115, 
        "code": "best_score <= 2", 
        "message": "Method scalex performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: ari\n  Best score: 0.6023%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanorama ari", 
        "value": -0.3539, 
        "severity": 0, 
        "severity_value": 0.3539, 
        "code": "worst_score >= -1", 
        "message": "Method scanorama performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: ari\n  Worst score: -0.3539%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanorama ari", 
        "value": 0.1778, 
        "severity": 0, 
        "severity_value": 0.0889, 
        "code": "best_score <= 2", 
        "message": "Method scanorama performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: ari\n  Best score: 0.1778%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanvi ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scanvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanvi ari", 
        "value": 0.9607, 
        "severity": 0, 
        "severity_value": 0.48035, 
        "code": "best_score <= 2", 
        "message": "Method scanvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: ari\n  Best score: 0.9607%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scimilarity ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scimilarity performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scimilarity ari", 
        "value": 0.9342, 
        "severity": 0, 
        "severity_value": 0.4671, 
        "code": "best_score <= 2", 
        "message": "Method scimilarity performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: ari\n  Best score: 0.9342%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scvi ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scvi ari", 
        "value": 2.6017, 
        "severity": 1, 
        "severity_value": 1.30085, 
        "code": "best_score <= 2", 
        "message": "Method scvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: ari\n  Best score: 2.6017%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types nmi", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: nmi\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types nmi", 
        "value": 1, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: nmi\n  Best score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types_jittered nmi", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types_jittered performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: nmi\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types_jittered nmi", 
        "value": 1, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types_jittered performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: nmi\n  Best score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration nmi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: nmi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration nmi", 
        "value": 0.9871, 
        "severity": 0, 
        "severity_value": 0.49355, 
        "code": "best_score <= 2", 
        "message": "Method no_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: nmi\n  Best score: 0.9871%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration_batch nmi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: nmi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration_batch nmi", 
        "value": 0.951, 
        "severity": 0, 
        "severity_value": 0.4755, 
        "code": "best_score <= 2", 
        "message": "Method no_integration_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: nmi\n  Best score: 0.951%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration nmi", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: nmi\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration nmi", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: nmi\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_batch nmi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: nmi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_batch nmi", 
        "value": 0.1511, 
        "severity": 0, 
        "severity_value": 0.07555, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: nmi\n  Best score: 0.1511%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_cell_type nmi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_cell_type performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: nmi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_cell_type nmi", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_cell_type performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: nmi\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_fastmnn nmi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_fastmnn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: nmi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_fastmnn nmi", 
        "value": 0.9121, 
        "severity": 0, 
        "severity_value": 0.45605, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_fastmnn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: nmi\n  Best score: 0.9121%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_mnn_correct nmi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_mnn_correct performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: nmi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_mnn_correct nmi", 
        "value": 0.919, 
        "severity": 0, 
        "severity_value": 0.4595, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_mnn_correct performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: nmi\n  Best score: 0.919%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score bbknn nmi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method bbknn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: nmi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score bbknn nmi", 
        "value": 0.9138, 
        "severity": 0, 
        "severity_value": 0.4569, 
        "code": "best_score <= 2", 
        "message": "Method bbknn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: nmi\n  Best score: 0.9138%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score combat nmi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method combat performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: nmi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score combat nmi", 
        "value": 1.2833, 
        "severity": 0, 
        "severity_value": 0.64165, 
        "code": "best_score <= 2", 
        "message": "Method combat performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: nmi\n  Best score: 1.2833%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmony nmi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method harmony performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: nmi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmony nmi", 
        "value": 1.1924, 
        "severity": 0, 
        "severity_value": 0.5962, 
        "code": "best_score <= 2", 
        "message": "Method harmony performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: nmi\n  Best score: 1.1924%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmonypy nmi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method harmonypy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: nmi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmonypy nmi", 
        "value": 0.9153, 
        "severity": 0, 
        "severity_value": 0.45765, 
        "code": "best_score <= 2", 
        "message": "Method harmonypy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: nmi\n  Best score: 0.9153%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score liger nmi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method liger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: nmi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score liger nmi", 
        "value": 0.8455, 
        "severity": 0, 
        "severity_value": 0.42275, 
        "code": "best_score <= 2", 
        "message": "Method liger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: nmi\n  Best score: 0.8455%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score mnnpy nmi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method mnnpy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: nmi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score mnnpy nmi", 
        "value": 0.2293, 
        "severity": 0, 
        "severity_value": 0.11465, 
        "code": "best_score <= 2", 
        "message": "Method mnnpy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: nmi\n  Best score: 0.2293%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score pyliger nmi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method pyliger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: nmi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score pyliger nmi", 
        "value": 0.8815, 
        "severity": 0, 
        "severity_value": 0.44075, 
        "code": "best_score <= 2", 
        "message": "Method pyliger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: nmi\n  Best score: 0.8815%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scalex nmi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scalex performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: nmi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scalex nmi", 
        "value": 0.7008, 
        "severity": 0, 
        "severity_value": 0.3504, 
        "code": "best_score <= 2", 
        "message": "Method scalex performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: nmi\n  Best score: 0.7008%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanorama nmi", 
        "value": -1.6013, 
        "severity": 1, 
        "severity_value": 1.6013, 
        "code": "worst_score >= -1", 
        "message": "Method scanorama performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: nmi\n  Worst score: -1.6013%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanorama nmi", 
        "value": 0.226, 
        "severity": 0, 
        "severity_value": 0.113, 
        "code": "best_score <= 2", 
        "message": "Method scanorama performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: nmi\n  Best score: 0.226%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanvi nmi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scanvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: nmi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanvi nmi", 
        "value": 1.0083, 
        "severity": 0, 
        "severity_value": 0.50415, 
        "code": "best_score <= 2", 
        "message": "Method scanvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: nmi\n  Best score: 1.0083%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scimilarity nmi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scimilarity performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: nmi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scimilarity nmi", 
        "value": 0.8836, 
        "severity": 0, 
        "severity_value": 0.4418, 
        "code": "best_score <= 2", 
        "message": "Method scimilarity performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: nmi\n  Best score: 0.8836%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scvi nmi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: nmi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scvi nmi", 
        "value": 1.4812, 
        "severity": 0, 
        "severity_value": 0.7406, 
        "code": "best_score <= 2", 
        "message": "Method scvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: nmi\n  Best score: 1.4812%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types graph_connectivity", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: graph_connectivity\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types graph_connectivity", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: graph_connectivity\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types_jittered graph_connectivity", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types_jittered performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: graph_connectivity\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types_jittered graph_connectivity", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types_jittered performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: graph_connectivity\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration graph_connectivity", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: graph_connectivity\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration graph_connectivity", 
        "value": 0.9768, 
        "severity": 0, 
        "severity_value": 0.4884, 
        "code": "best_score <= 2", 
        "message": "Method no_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: graph_connectivity\n  Best score: 0.9768%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration_batch graph_connectivity", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: graph_connectivity\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration_batch graph_connectivity", 
        "value": 0.8487, 
        "severity": 0, 
        "severity_value": 0.42435, 
        "code": "best_score <= 2", 
        "message": "Method no_integration_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: graph_connectivity\n  Best score: 0.8487%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration graph_connectivity", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: graph_connectivity\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration graph_connectivity", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: graph_connectivity\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_batch graph_connectivity", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: graph_connectivity\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_batch graph_connectivity", 
        "value": 0.2504, 
        "severity": 0, 
        "severity_value": 0.1252, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: graph_connectivity\n  Best score: 0.2504%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_cell_type graph_connectivity", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_cell_type performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: graph_connectivity\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_cell_type graph_connectivity", 
        "value": 0.976, 
        "severity": 0, 
        "severity_value": 0.488, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_cell_type performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: graph_connectivity\n  Best score: 0.976%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_fastmnn graph_connectivity", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_fastmnn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: graph_connectivity\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_fastmnn graph_connectivity", 
        "value": 0.9691, 
        "severity": 0, 
        "severity_value": 0.48455, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_fastmnn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: graph_connectivity\n  Best score: 0.9691%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_mnn_correct graph_connectivity", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_mnn_correct performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: graph_connectivity\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_mnn_correct graph_connectivity", 
        "value": 0.9595, 
        "severity": 0, 
        "severity_value": 0.47975, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_mnn_correct performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: graph_connectivity\n  Best score: 0.9595%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score bbknn graph_connectivity", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method bbknn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: graph_connectivity\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score bbknn graph_connectivity", 
        "value": 0.9975, 
        "severity": 0, 
        "severity_value": 0.49875, 
        "code": "best_score <= 2", 
        "message": "Method bbknn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: graph_connectivity\n  Best score: 0.9975%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score combat graph_connectivity", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method combat performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: graph_connectivity\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score combat graph_connectivity", 
        "value": 0.9739, 
        "severity": 0, 
        "severity_value": 0.48695, 
        "code": "best_score <= 2", 
        "message": "Method combat performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: graph_connectivity\n  Best score: 0.9739%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmony graph_connectivity", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method harmony performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: graph_connectivity\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmony graph_connectivity", 
        "value": 0.9727, 
        "severity": 0, 
        "severity_value": 0.48635, 
        "code": "best_score <= 2", 
        "message": "Method harmony performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: graph_connectivity\n  Best score: 0.9727%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmonypy graph_connectivity", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method harmonypy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: graph_connectivity\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmonypy graph_connectivity", 
        "value": 0.9782, 
        "severity": 0, 
        "severity_value": 0.4891, 
        "code": "best_score <= 2", 
        "message": "Method harmonypy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: graph_connectivity\n  Best score: 0.9782%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score liger graph_connectivity", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method liger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: graph_connectivity\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score liger graph_connectivity", 
        "value": 0.9504, 
        "severity": 0, 
        "severity_value": 0.4752, 
        "code": "best_score <= 2", 
        "message": "Method liger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: graph_connectivity\n  Best score: 0.9504%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score mnnpy graph_connectivity", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method mnnpy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: graph_connectivity\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score mnnpy graph_connectivity", 
        "value": 0.3954, 
        "severity": 0, 
        "severity_value": 0.1977, 
        "code": "best_score <= 2", 
        "message": "Method mnnpy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: graph_connectivity\n  Best score: 0.3954%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score pyliger graph_connectivity", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method pyliger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: graph_connectivity\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score pyliger graph_connectivity", 
        "value": 0.9573, 
        "severity": 0, 
        "severity_value": 0.47865, 
        "code": "best_score <= 2", 
        "message": "Method pyliger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: graph_connectivity\n  Best score: 0.9573%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scalex graph_connectivity", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scalex performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: graph_connectivity\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scalex graph_connectivity", 
        "value": 0.9037, 
        "severity": 0, 
        "severity_value": 0.45185, 
        "code": "best_score <= 2", 
        "message": "Method scalex performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: graph_connectivity\n  Best score: 0.9037%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanorama graph_connectivity", 
        "value": -0.0093, 
        "severity": 0, 
        "severity_value": 0.0093, 
        "code": "worst_score >= -1", 
        "message": "Method scanorama performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: graph_connectivity\n  Worst score: -0.0093%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanorama graph_connectivity", 
        "value": 0.3929, 
        "severity": 0, 
        "severity_value": 0.19645, 
        "code": "best_score <= 2", 
        "message": "Method scanorama performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: graph_connectivity\n  Best score: 0.3929%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanvi graph_connectivity", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scanvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: graph_connectivity\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanvi graph_connectivity", 
        "value": 0.9952, 
        "severity": 0, 
        "severity_value": 0.4976, 
        "code": "best_score <= 2", 
        "message": "Method scanvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: graph_connectivity\n  Best score: 0.9952%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scimilarity graph_connectivity", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scimilarity performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: graph_connectivity\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scimilarity graph_connectivity", 
        "value": 0.9702, 
        "severity": 0, 
        "severity_value": 0.4851, 
        "code": "best_score <= 2", 
        "message": "Method scimilarity performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: graph_connectivity\n  Best score: 0.9702%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scvi graph_connectivity", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: graph_connectivity\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scvi graph_connectivity", 
        "value": 0.9842, 
        "severity": 0, 
        "severity_value": 0.4921, 
        "code": "best_score <= 2", 
        "message": "Method scvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: graph_connectivity\n  Best score: 0.9842%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types_jittered hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types_jittered performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types_jittered hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types_jittered performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method no_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration_batch hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration_batch hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method no_integration_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_batch hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_batch hvg_overlap", 
        "value": 1, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: hvg_overlap\n  Best score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_cell_type hvg_overlap", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_cell_type performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: hvg_overlap\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_cell_type hvg_overlap", 
        "value": 0.3227, 
        "severity": 0, 
        "severity_value": 0.16135, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_cell_type performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: hvg_overlap\n  Best score: 0.3227%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_fastmnn hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_fastmnn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_fastmnn hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_fastmnn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_mnn_correct hvg_overlap", 
        "value": -0.6197, 
        "severity": 0, 
        "severity_value": 0.6197, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_mnn_correct performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: hvg_overlap\n  Worst score: -0.6197%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_mnn_correct hvg_overlap", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_mnn_correct performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: hvg_overlap\n  Best score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score bbknn hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method bbknn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score bbknn hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method bbknn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score combat hvg_overlap", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method combat performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: hvg_overlap\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score combat hvg_overlap", 
        "value": 0.1236, 
        "severity": 0, 
        "severity_value": 0.0618, 
        "code": "best_score <= 2", 
        "message": "Method combat performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: hvg_overlap\n  Best score: 0.1236%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmony hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method harmony performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmony hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method harmony performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmonypy hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method harmonypy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmonypy hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method harmonypy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score liger hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method liger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score liger hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method liger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score mnnpy hvg_overlap", 
        "value": -1.0177, 
        "severity": 1, 
        "severity_value": 1.0177, 
        "code": "worst_score >= -1", 
        "message": "Method mnnpy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: hvg_overlap\n  Worst score: -1.0177%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score mnnpy hvg_overlap", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method mnnpy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: hvg_overlap\n  Best score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score pyliger hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method pyliger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score pyliger hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method pyliger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scalex hvg_overlap", 
        "value": -1.5745, 
        "severity": 1, 
        "severity_value": 1.5745, 
        "code": "worst_score >= -1", 
        "message": "Method scalex performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: hvg_overlap\n  Worst score: -1.5745%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scalex hvg_overlap", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method scalex performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: hvg_overlap\n  Best score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanorama hvg_overlap", 
        "value": -1.5242, 
        "severity": 1, 
        "severity_value": 1.5242, 
        "code": "worst_score >= -1", 
        "message": "Method scanorama performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: hvg_overlap\n  Worst score: -1.5242%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanorama hvg_overlap", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method scanorama performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: hvg_overlap\n  Best score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanvi hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scanvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanvi hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method scanvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scimilarity hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scimilarity performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scimilarity hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method scimilarity performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scvi hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scvi hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method scvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types isolated_label_asw", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: isolated_label_asw\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types isolated_label_asw", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: isolated_label_asw\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types_jittered isolated_label_asw", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types_jittered performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: isolated_label_asw\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types_jittered isolated_label_asw", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types_jittered performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: isolated_label_asw\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration isolated_label_asw", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: isolated_label_asw\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration isolated_label_asw", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method no_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: isolated_label_asw\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration_batch isolated_label_asw", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: isolated_label_asw\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration_batch isolated_label_asw", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method no_integration_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: isolated_label_asw\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration isolated_label_asw", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: isolated_label_asw\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration isolated_label_asw", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: isolated_label_asw\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_batch isolated_label_asw", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: isolated_label_asw\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_batch isolated_label_asw", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: isolated_label_asw\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_cell_type isolated_label_asw", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_cell_type performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: isolated_label_asw\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_cell_type isolated_label_asw", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_cell_type performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: isolated_label_asw\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_fastmnn isolated_label_asw", 
        "value": -6365.3303, 
        "severity": 3, 
        "severity_value": 6365.3303, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_fastmnn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: isolated_label_asw\n  Worst score: -6365.3303%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_fastmnn isolated_label_asw", 
        "value": 0.6307, 
        "severity": 0, 
        "severity_value": 0.31535, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_fastmnn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: isolated_label_asw\n  Best score: 0.6307%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_mnn_correct isolated_label_asw", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_mnn_correct performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: isolated_label_asw\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_mnn_correct isolated_label_asw", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_mnn_correct performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: isolated_label_asw\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score bbknn isolated_label_asw", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method bbknn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: isolated_label_asw\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score bbknn isolated_label_asw", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method bbknn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: isolated_label_asw\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score combat isolated_label_asw", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method combat performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: isolated_label_asw\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score combat isolated_label_asw", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method combat performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: isolated_label_asw\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmony isolated_label_asw", 
        "value": -5586.2515, 
        "severity": 3, 
        "severity_value": 5586.2515, 
        "code": "worst_score >= -1", 
        "message": "Method harmony performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: isolated_label_asw\n  Worst score: -5586.2515%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmony isolated_label_asw", 
        "value": 0.5556, 
        "severity": 0, 
        "severity_value": 0.2778, 
        "code": "best_score <= 2", 
        "message": "Method harmony performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: isolated_label_asw\n  Best score: 0.5556%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmonypy isolated_label_asw", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method harmonypy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: isolated_label_asw\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmonypy isolated_label_asw", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method harmonypy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: isolated_label_asw\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score liger isolated_label_asw", 
        "value": -5038.3749, 
        "severity": 3, 
        "severity_value": 5038.3749, 
        "code": "worst_score >= -1", 
        "message": "Method liger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: isolated_label_asw\n  Worst score: -5038.3749%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score liger isolated_label_asw", 
        "value": 0.3764, 
        "severity": 0, 
        "severity_value": 0.1882, 
        "code": "best_score <= 2", 
        "message": "Method liger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: isolated_label_asw\n  Best score: 0.3764%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score mnnpy isolated_label_asw", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method mnnpy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: isolated_label_asw\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score mnnpy isolated_label_asw", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method mnnpy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: isolated_label_asw\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score pyliger isolated_label_asw", 
        "value": -5262.8352, 
        "severity": 3, 
        "severity_value": 5262.8352, 
        "code": "worst_score >= -1", 
        "message": "Method pyliger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: isolated_label_asw\n  Worst score: -5262.8352%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score pyliger isolated_label_asw", 
        "value": 0.3797, 
        "severity": 0, 
        "severity_value": 0.18985, 
        "code": "best_score <= 2", 
        "message": "Method pyliger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: isolated_label_asw\n  Best score: 0.3797%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scalex isolated_label_asw", 
        "value": -5829.3617, 
        "severity": 3, 
        "severity_value": 5829.3617, 
        "code": "worst_score >= -1", 
        "message": "Method scalex performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: isolated_label_asw\n  Worst score: -5829.3617%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scalex isolated_label_asw", 
        "value": 0.4346, 
        "severity": 0, 
        "severity_value": 0.2173, 
        "code": "best_score <= 2", 
        "message": "Method scalex performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: isolated_label_asw\n  Best score: 0.4346%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanorama isolated_label_asw", 
        "value": -7302.3519, 
        "severity": 3, 
        "severity_value": 7302.3519, 
        "code": "worst_score >= -1", 
        "message": "Method scanorama performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: isolated_label_asw\n  Worst score: -7302.3519%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanorama isolated_label_asw", 
        "value": 0.2715, 
        "severity": 0, 
        "severity_value": 0.13575, 
        "code": "best_score <= 2", 
        "message": "Method scanorama performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: isolated_label_asw\n  Best score: 0.2715%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanvi isolated_label_asw", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scanvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: isolated_label_asw\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanvi isolated_label_asw", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method scanvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: isolated_label_asw\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scimilarity isolated_label_asw", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scimilarity performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: isolated_label_asw\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scimilarity isolated_label_asw", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method scimilarity performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: isolated_label_asw\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scvi isolated_label_asw", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: isolated_label_asw\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scvi isolated_label_asw", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method scvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: isolated_label_asw\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types isolated_label_f1", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: isolated_label_f1\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types_jittered isolated_label_f1", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types_jittered performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: isolated_label_f1\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types_jittered isolated_label_f1", 
        "value": 1, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types_jittered performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: isolated_label_f1\n  Best score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration isolated_label_f1", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method no_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: isolated_label_f1\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration_batch isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration_batch isolated_label_f1", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method no_integration_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: isolated_label_f1\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration isolated_label_f1", 
        "value": 0.0108, 
        "severity": 0, 
        "severity_value": 0.0054, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: isolated_label_f1\n  Best score: 0.0108%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_batch isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_batch isolated_label_f1", 
        "value": 0.1063, 
        "severity": 0, 
        "severity_value": 0.05315, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: isolated_label_f1\n  Best score: 0.1063%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_cell_type isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_cell_type performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_cell_type isolated_label_f1", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_cell_type performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: isolated_label_f1\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_fastmnn isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_fastmnn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_fastmnn isolated_label_f1", 
        "value": 0.9554, 
        "severity": 0, 
        "severity_value": 0.4777, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_fastmnn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: isolated_label_f1\n  Best score: 0.9554%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_mnn_correct isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_mnn_correct performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_mnn_correct isolated_label_f1", 
        "value": 0.8441, 
        "severity": 0, 
        "severity_value": 0.42205, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_mnn_correct performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: isolated_label_f1\n  Best score: 0.8441%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score bbknn isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method bbknn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score bbknn isolated_label_f1", 
        "value": 0.8139, 
        "severity": 0, 
        "severity_value": 0.40695, 
        "code": "best_score <= 2", 
        "message": "Method bbknn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: isolated_label_f1\n  Best score: 0.8139%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score combat isolated_label_f1", 
        "value": -0.7999, 
        "severity": 0, 
        "severity_value": 0.7999, 
        "code": "worst_score >= -1", 
        "message": "Method combat performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: isolated_label_f1\n  Worst score: -0.7999%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score combat isolated_label_f1", 
        "value": 0.9763, 
        "severity": 0, 
        "severity_value": 0.48815, 
        "code": "best_score <= 2", 
        "message": "Method combat performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: isolated_label_f1\n  Best score: 0.9763%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmony isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method harmony performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmony isolated_label_f1", 
        "value": 1.0055, 
        "severity": 0, 
        "severity_value": 0.50275, 
        "code": "best_score <= 2", 
        "message": "Method harmony performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: isolated_label_f1\n  Best score: 1.0055%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmonypy isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method harmonypy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmonypy isolated_label_f1", 
        "value": 0.8483, 
        "severity": 0, 
        "severity_value": 0.42415, 
        "code": "best_score <= 2", 
        "message": "Method harmonypy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: isolated_label_f1\n  Best score: 0.8483%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score liger isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method liger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score liger isolated_label_f1", 
        "value": 0.838, 
        "severity": 0, 
        "severity_value": 0.419, 
        "code": "best_score <= 2", 
        "message": "Method liger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: isolated_label_f1\n  Best score: 0.838%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score mnnpy isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method mnnpy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score mnnpy isolated_label_f1", 
        "value": 0.3738, 
        "severity": 0, 
        "severity_value": 0.1869, 
        "code": "best_score <= 2", 
        "message": "Method mnnpy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: isolated_label_f1\n  Best score: 0.3738%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score pyliger isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method pyliger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score pyliger isolated_label_f1", 
        "value": 0.8608, 
        "severity": 0, 
        "severity_value": 0.4304, 
        "code": "best_score <= 2", 
        "message": "Method pyliger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: isolated_label_f1\n  Best score: 0.8608%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scalex isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scalex performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scalex isolated_label_f1", 
        "value": 0.611, 
        "severity": 0, 
        "severity_value": 0.3055, 
        "code": "best_score <= 2", 
        "message": "Method scalex performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: isolated_label_f1\n  Best score: 0.611%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanorama isolated_label_f1", 
        "value": -0.8501, 
        "severity": 0, 
        "severity_value": 0.8501, 
        "code": "worst_score >= -1", 
        "message": "Method scanorama performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: isolated_label_f1\n  Worst score: -0.8501%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanorama isolated_label_f1", 
        "value": 0.3873, 
        "severity": 0, 
        "severity_value": 0.19365, 
        "code": "best_score <= 2", 
        "message": "Method scanorama performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: isolated_label_f1\n  Best score: 0.3873%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanvi isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scanvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanvi isolated_label_f1", 
        "value": 0.9715, 
        "severity": 0, 
        "severity_value": 0.48575, 
        "code": "best_score <= 2", 
        "message": "Method scanvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: isolated_label_f1\n  Best score: 0.9715%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scimilarity isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scimilarity performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scimilarity isolated_label_f1", 
        "value": 0.8593, 
        "severity": 0, 
        "severity_value": 0.42965, 
        "code": "best_score <= 2", 
        "message": "Method scimilarity performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: isolated_label_f1\n  Best score: 0.8593%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scvi isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scvi isolated_label_f1", 
        "value": 0.9926, 
        "severity": 0, 
        "severity_value": 0.4963, 
        "code": "best_score <= 2", 
        "message": "Method scvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: isolated_label_f1\n  Best score: 0.9926%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types kbet", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: kbet\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types_jittered kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types_jittered performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types_jittered kbet", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types_jittered performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: kbet\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration kbet", 
        "value": 0.7201, 
        "severity": 0, 
        "severity_value": 0.36005, 
        "code": "best_score <= 2", 
        "message": "Method no_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: kbet\n  Best score: 0.7201%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration_batch kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration_batch kbet", 
        "value": 0.5955, 
        "severity": 0, 
        "severity_value": 0.29775, 
        "code": "best_score <= 2", 
        "message": "Method no_integration_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: kbet\n  Best score: 0.5955%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration kbet", 
        "value": 0.3504, 
        "severity": 0, 
        "severity_value": 0.1752, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: kbet\n  Best score: 0.3504%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_batch kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_batch kbet", 
        "value": 0.1707, 
        "severity": 0, 
        "severity_value": 0.08535, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: kbet\n  Best score: 0.1707%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_cell_type kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_cell_type performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_cell_type kbet", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_cell_type performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: kbet\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_fastmnn kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_fastmnn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_fastmnn kbet", 
        "value": 0.844, 
        "severity": 0, 
        "severity_value": 0.422, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_fastmnn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: kbet\n  Best score: 0.844%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_mnn_correct kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_mnn_correct performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_mnn_correct kbet", 
        "value": 0.3043, 
        "severity": 0, 
        "severity_value": 0.15215, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_mnn_correct performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: kbet\n  Best score: 0.3043%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score bbknn kbet", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method bbknn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: kbet\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score bbknn kbet", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method bbknn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: kbet\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score combat kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method combat performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score combat kbet", 
        "value": 0.6617, 
        "severity": 0, 
        "severity_value": 0.33085, 
        "code": "best_score <= 2", 
        "message": "Method combat performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: kbet\n  Best score: 0.6617%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmony kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method harmony performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmony kbet", 
        "value": 0.7639, 
        "severity": 0, 
        "severity_value": 0.38195, 
        "code": "best_score <= 2", 
        "message": "Method harmony performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: kbet\n  Best score: 0.7639%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmonypy kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method harmonypy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmonypy kbet", 
        "value": 0.7925, 
        "severity": 0, 
        "severity_value": 0.39625, 
        "code": "best_score <= 2", 
        "message": "Method harmonypy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: kbet\n  Best score: 0.7925%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score liger kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method liger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score liger kbet", 
        "value": 0.7897, 
        "severity": 0, 
        "severity_value": 0.39485, 
        "code": "best_score <= 2", 
        "message": "Method liger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: kbet\n  Best score: 0.7897%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score mnnpy kbet", 
        "value": -0.0143, 
        "severity": 0, 
        "severity_value": 0.0143, 
        "code": "worst_score >= -1", 
        "message": "Method mnnpy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: kbet\n  Worst score: -0.0143%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score mnnpy kbet", 
        "value": 0.0893, 
        "severity": 0, 
        "severity_value": 0.04465, 
        "code": "best_score <= 2", 
        "message": "Method mnnpy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: kbet\n  Best score: 0.0893%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score pyliger kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method pyliger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score pyliger kbet", 
        "value": 0.807, 
        "severity": 0, 
        "severity_value": 0.4035, 
        "code": "best_score <= 2", 
        "message": "Method pyliger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: kbet\n  Best score: 0.807%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scalex kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scalex performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scalex kbet", 
        "value": 0.6173, 
        "severity": 0, 
        "severity_value": 0.30865, 
        "code": "best_score <= 2", 
        "message": "Method scalex performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: kbet\n  Best score: 0.6173%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanorama kbet", 
        "value": -0.0143, 
        "severity": 0, 
        "severity_value": 0.0143, 
        "code": "worst_score >= -1", 
        "message": "Method scanorama performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: kbet\n  Worst score: -0.0143%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanorama kbet", 
        "value": 0.1185, 
        "severity": 0, 
        "severity_value": 0.05925, 
        "code": "best_score <= 2", 
        "message": "Method scanorama performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: kbet\n  Best score: 0.1185%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanvi kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scanvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanvi kbet", 
        "value": 0.814, 
        "severity": 0, 
        "severity_value": 0.407, 
        "code": "best_score <= 2", 
        "message": "Method scanvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: kbet\n  Best score: 0.814%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scimilarity kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scimilarity performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scimilarity kbet", 
        "value": 0.3713, 
        "severity": 0, 
        "severity_value": 0.18565, 
        "code": "best_score <= 2", 
        "message": "Method scimilarity performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: kbet\n  Best score: 0.3713%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scvi kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scvi kbet", 
        "value": 0.8005, 
        "severity": 0, 
        "severity_value": 0.40025, 
        "code": "best_score <= 2", 
        "message": "Method scvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: kbet\n  Best score: 0.8005%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types ilisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: ilisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types ilisi", 
        "value": 0.9571, 
        "severity": 0, 
        "severity_value": 0.47855, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: ilisi\n  Best score: 0.9571%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types_jittered ilisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types_jittered performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: ilisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types_jittered ilisi", 
        "value": 0.9682, 
        "severity": 0, 
        "severity_value": 0.4841, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types_jittered performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: ilisi\n  Best score: 0.9682%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration ilisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: ilisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration ilisi", 
        "value": 0.149, 
        "severity": 0, 
        "severity_value": 0.0745, 
        "code": "best_score <= 2", 
        "message": "Method no_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: ilisi\n  Best score: 0.149%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration_batch ilisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: ilisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration_batch ilisi", 
        "value": 0.0097, 
        "severity": 0, 
        "severity_value": 0.00485, 
        "code": "best_score <= 2", 
        "message": "Method no_integration_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: ilisi\n  Best score: 0.0097%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration ilisi", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: ilisi\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration ilisi", 
        "value": 1, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: ilisi\n  Best score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_batch ilisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: ilisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_batch ilisi", 
        "value": 0.1495, 
        "severity": 0, 
        "severity_value": 0.07475, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: ilisi\n  Best score: 0.1495%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_cell_type ilisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_cell_type performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: ilisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_cell_type ilisi", 
        "value": 0.9791, 
        "severity": 0, 
        "severity_value": 0.48955, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_cell_type performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: ilisi\n  Best score: 0.9791%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_fastmnn ilisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_fastmnn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: ilisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_fastmnn ilisi", 
        "value": 0.5626, 
        "severity": 0, 
        "severity_value": 0.2813, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_fastmnn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: ilisi\n  Best score: 0.5626%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_mnn_correct ilisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_mnn_correct performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: ilisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_mnn_correct ilisi", 
        "value": 0.6564, 
        "severity": 0, 
        "severity_value": 0.3282, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_mnn_correct performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: ilisi\n  Best score: 0.6564%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score bbknn ilisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method bbknn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: ilisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score bbknn ilisi", 
        "value": 35.8715, 
        "severity": 3, 
        "severity_value": 17.93575, 
        "code": "best_score <= 2", 
        "message": "Method bbknn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: ilisi\n  Best score: 35.8715%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score combat ilisi", 
        "value": -0.0681, 
        "severity": 0, 
        "severity_value": 0.0681, 
        "code": "worst_score >= -1", 
        "message": "Method combat performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: ilisi\n  Worst score: -0.0681%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score combat ilisi", 
        "value": 0.3338, 
        "severity": 0, 
        "severity_value": 0.1669, 
        "code": "best_score <= 2", 
        "message": "Method combat performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: ilisi\n  Best score: 0.3338%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmony ilisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method harmony performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: ilisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmony ilisi", 
        "value": 0.6925, 
        "severity": 0, 
        "severity_value": 0.34625, 
        "code": "best_score <= 2", 
        "message": "Method harmony performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: ilisi\n  Best score: 0.6925%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmonypy ilisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method harmonypy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: ilisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmonypy ilisi", 
        "value": 0.6952, 
        "severity": 0, 
        "severity_value": 0.3476, 
        "code": "best_score <= 2", 
        "message": "Method harmonypy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: ilisi\n  Best score: 0.6952%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score liger ilisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method liger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: ilisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score liger ilisi", 
        "value": 0.8842, 
        "severity": 0, 
        "severity_value": 0.4421, 
        "code": "best_score <= 2", 
        "message": "Method liger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: ilisi\n  Best score: 0.8842%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score mnnpy ilisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method mnnpy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: ilisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score mnnpy ilisi", 
        "value": 0.6162, 
        "severity": 0, 
        "severity_value": 0.3081, 
        "code": "best_score <= 2", 
        "message": "Method mnnpy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: ilisi\n  Best score: 0.6162%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score pyliger ilisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method pyliger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: ilisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score pyliger ilisi", 
        "value": 0.8867, 
        "severity": 0, 
        "severity_value": 0.44335, 
        "code": "best_score <= 2", 
        "message": "Method pyliger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: ilisi\n  Best score: 0.8867%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scalex ilisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scalex performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: ilisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scalex ilisi", 
        "value": 0.6438, 
        "severity": 0, 
        "severity_value": 0.3219, 
        "code": "best_score <= 2", 
        "message": "Method scalex performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: ilisi\n  Best score: 0.6438%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanorama ilisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scanorama performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: ilisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanorama ilisi", 
        "value": 0.9729, 
        "severity": 0, 
        "severity_value": 0.48645, 
        "code": "best_score <= 2", 
        "message": "Method scanorama performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: ilisi\n  Best score: 0.9729%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanvi ilisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scanvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: ilisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanvi ilisi", 
        "value": 0.6586, 
        "severity": 0, 
        "severity_value": 0.3293, 
        "code": "best_score <= 2", 
        "message": "Method scanvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: ilisi\n  Best score: 0.6586%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scimilarity ilisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scimilarity performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: ilisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scimilarity ilisi", 
        "value": 0.4731, 
        "severity": 0, 
        "severity_value": 0.23655, 
        "code": "best_score <= 2", 
        "message": "Method scimilarity performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: ilisi\n  Best score: 0.4731%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scvi ilisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: ilisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scvi ilisi", 
        "value": 0.6449, 
        "severity": 0, 
        "severity_value": 0.32245, 
        "code": "best_score <= 2", 
        "message": "Method scvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: ilisi\n  Best score: 0.6449%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types clisi", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: clisi\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types clisi", 
        "value": 1, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: clisi\n  Best score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types_jittered clisi", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types_jittered performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: clisi\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types_jittered clisi", 
        "value": 1, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types_jittered performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: clisi\n  Best score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration clisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: clisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration clisi", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method no_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: clisi\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration_batch clisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: clisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration_batch clisi", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method no_integration_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: clisi\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration clisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: clisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration clisi", 
        "value": 0.0019, 
        "severity": 0, 
        "severity_value": 0.00095, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: clisi\n  Best score: 0.0019%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_batch clisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: clisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_batch clisi", 
        "value": 0.4253, 
        "severity": 0, 
        "severity_value": 0.21265, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: clisi\n  Best score: 0.4253%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_cell_type clisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_cell_type performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: clisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_cell_type clisi", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_cell_type performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: clisi\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_fastmnn clisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_fastmnn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: clisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_fastmnn clisi", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_fastmnn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: clisi\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_mnn_correct clisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_mnn_correct performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: clisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_mnn_correct clisi", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_mnn_correct performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: clisi\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score bbknn clisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method bbknn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: clisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score bbknn clisi", 
        "value": 0.9856, 
        "severity": 0, 
        "severity_value": 0.4928, 
        "code": "best_score <= 2", 
        "message": "Method bbknn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: clisi\n  Best score: 0.9856%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score combat clisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method combat performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: clisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score combat clisi", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method combat performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: clisi\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmony clisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method harmony performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: clisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmony clisi", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method harmony performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: clisi\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmonypy clisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method harmonypy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: clisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmonypy clisi", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method harmonypy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: clisi\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score liger clisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method liger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: clisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score liger clisi", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method liger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: clisi\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score mnnpy clisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method mnnpy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: clisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score mnnpy clisi", 
        "value": 0.596, 
        "severity": 0, 
        "severity_value": 0.298, 
        "code": "best_score <= 2", 
        "message": "Method mnnpy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: clisi\n  Best score: 0.596%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score pyliger clisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method pyliger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: clisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score pyliger clisi", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method pyliger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: clisi\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scalex clisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scalex performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: clisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scalex clisi", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method scalex performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: clisi\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanorama clisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scanorama performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: clisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanorama clisi", 
        "value": 0.5744, 
        "severity": 0, 
        "severity_value": 0.2872, 
        "code": "best_score <= 2", 
        "message": "Method scanorama performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: clisi\n  Best score: 0.5744%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanvi clisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scanvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: clisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanvi clisi", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method scanvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: clisi\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scimilarity clisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scimilarity performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: clisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scimilarity clisi", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method scimilarity performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: clisi\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scvi clisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: clisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scvi clisi", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method scvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: clisi\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types pcr", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: pcr\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types pcr", 
        "value": 0.7116, 
        "severity": 0, 
        "severity_value": 0.3558, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: pcr\n  Best score: 0.7116%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types_jittered pcr", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types_jittered performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: pcr\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types_jittered pcr", 
        "value": 0.7115, 
        "severity": 0, 
        "severity_value": 0.35575, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types_jittered performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: pcr\n  Best score: 0.7115%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration pcr", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: pcr\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration pcr", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method no_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: pcr\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration_batch pcr", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: pcr\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration_batch pcr", 
        "value": 1, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method no_integration_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: pcr\n  Best score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration pcr", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: pcr\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration pcr", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: pcr\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_batch pcr", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: pcr\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_batch pcr", 
        "value": 0.0002, 
        "severity": 0, 
        "severity_value": 0.0001, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: pcr\n  Best score: 0.0002%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_cell_type pcr", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_cell_type performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: pcr\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_cell_type pcr", 
        "value": 0.7764, 
        "severity": 0, 
        "severity_value": 0.3882, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_cell_type performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: pcr\n  Best score: 0.7764%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_fastmnn pcr", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_fastmnn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: pcr\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_fastmnn pcr", 
        "value": 0.5603, 
        "severity": 0, 
        "severity_value": 0.28015, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_fastmnn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: pcr\n  Best score: 0.5603%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_mnn_correct pcr", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_mnn_correct performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: pcr\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_mnn_correct pcr", 
        "value": 0.5975, 
        "severity": 0, 
        "severity_value": 0.29875, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_mnn_correct performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: pcr\n  Best score: 0.5975%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score bbknn pcr", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method bbknn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: pcr\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score bbknn pcr", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method bbknn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: pcr\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score combat pcr", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method combat performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: pcr\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score combat pcr", 
        "value": 1.0007, 
        "severity": 0, 
        "severity_value": 0.50035, 
        "code": "best_score <= 2", 
        "message": "Method combat performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: pcr\n  Best score: 1.0007%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmony pcr", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method harmony performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: pcr\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmony pcr", 
        "value": 0.6879, 
        "severity": 0, 
        "severity_value": 0.34395, 
        "code": "best_score <= 2", 
        "message": "Method harmony performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: pcr\n  Best score: 0.6879%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmonypy pcr", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method harmonypy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: pcr\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmonypy pcr", 
        "value": 0.6897, 
        "severity": 0, 
        "severity_value": 0.34485, 
        "code": "best_score <= 2", 
        "message": "Method harmonypy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: pcr\n  Best score: 0.6897%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score liger pcr", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method liger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: pcr\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score liger pcr", 
        "value": 0.8768, 
        "severity": 0, 
        "severity_value": 0.4384, 
        "code": "best_score <= 2", 
        "message": "Method liger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: pcr\n  Best score: 0.8768%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score mnnpy pcr", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method mnnpy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: pcr\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score mnnpy pcr", 
        "value": 0.7488, 
        "severity": 0, 
        "severity_value": 0.3744, 
        "code": "best_score <= 2", 
        "message": "Method mnnpy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: pcr\n  Best score: 0.7488%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score pyliger pcr", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method pyliger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: pcr\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score pyliger pcr", 
        "value": 0.9193, 
        "severity": 0, 
        "severity_value": 0.45965, 
        "code": "best_score <= 2", 
        "message": "Method pyliger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: pcr\n  Best score: 0.9193%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scalex pcr", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scalex performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: pcr\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scalex pcr", 
        "value": 0.9999, 
        "severity": 0, 
        "severity_value": 0.49995, 
        "code": "best_score <= 2", 
        "message": "Method scalex performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: pcr\n  Best score: 0.9999%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanorama pcr", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scanorama performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: pcr\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanorama pcr", 
        "value": 0.9993, 
        "severity": 0, 
        "severity_value": 0.49965, 
        "code": "best_score <= 2", 
        "message": "Method scanorama performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: pcr\n  Best score: 0.9993%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanvi pcr", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scanvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: pcr\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanvi pcr", 
        "value": 0.7804, 
        "severity": 0, 
        "severity_value": 0.3902, 
        "code": "best_score <= 2", 
        "message": "Method scanvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: pcr\n  Best score: 0.7804%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scimilarity pcr", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scimilarity performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: pcr\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scimilarity pcr", 
        "value": 0.4923, 
        "severity": 0, 
        "severity_value": 0.24615, 
        "code": "best_score <= 2", 
        "message": "Method scimilarity performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: pcr\n  Best score: 0.4923%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scvi pcr", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: pcr\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scvi pcr", 
        "value": 0.9215, 
        "severity": 0, 
        "severity_value": 0.46075, 
        "code": "best_score <= 2", 
        "message": "Method scvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: pcr\n  Best score: 0.9215%\n"
    }
]