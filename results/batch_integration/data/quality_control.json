[
    {
        "task_id": "task_batch_integration", 
        "category": "Task info", 
        "name": "Pct 'task_id' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing([task_info], field)", 
        "message": "Task metadata field 'task_id' should be defined\n  Task id: task_batch_integration\n  Field: task_id\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Task info", 
        "name": "Pct 'task_name' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing([task_info], field)", 
        "message": "Task metadata field 'task_name' should be defined\n  Task id: task_batch_integration\n  Field: task_name\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Task info", 
        "name": "Pct 'task_summary' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing([task_info], field)", 
        "message": "Task metadata field 'task_summary' should be defined\n  Task id: task_batch_integration\n  Field: task_summary\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Task info", 
        "name": "Pct 'task_description' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing([task_info], field)", 
        "message": "Task metadata field 'task_description' should be defined\n  Task id: task_batch_integration\n  Field: task_description\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Method info", 
        "name": "Pct 'task_id' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(method_info, field)", 
        "message": "Method metadata field 'task_id' should be defined\n  Task id: task_batch_integration\n  Field: task_id\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Method info", 
        "name": "Pct 'commit_sha' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(method_info, field)", 
        "message": "Method metadata field 'commit_sha' should be defined\n  Task id: task_batch_integration\n  Field: commit_sha\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Method info", 
        "name": "Pct 'method_id' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(method_info, field)", 
        "message": "Method metadata field 'method_id' should be defined\n  Task id: task_batch_integration\n  Field: method_id\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Method info", 
        "name": "Pct 'method_name' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(method_info, field)", 
        "message": "Method metadata field 'method_name' should be defined\n  Task id: task_batch_integration\n  Field: method_name\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Method info", 
        "name": "Pct 'method_summary' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(method_info, field)", 
        "message": "Method metadata field 'method_summary' should be defined\n  Task id: task_batch_integration\n  Field: method_summary\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Method info", 
        "name": "Pct 'paper_reference' missing", 
        "value": 0.72, 
        "severity": 2, 
        "severity_value": 3.0, 
        "code": "percent_missing(method_info, field)", 
        "message": "Method metadata field 'paper_reference' should be defined\n  Task id: task_batch_integration\n  Field: paper_reference\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Method info", 
        "name": "Pct 'is_baseline' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(method_info, field)", 
        "message": "Method metadata field 'is_baseline' should be defined\n  Task id: task_batch_integration\n  Field: is_baseline\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Metric info", 
        "name": "Pct 'task_id' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(metric_info, field)", 
        "message": "Metric metadata field 'task_id' should be defined\n  Task id: task_batch_integration\n  Field: task_id\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Metric info", 
        "name": "Pct 'commit_sha' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(metric_info, field)", 
        "message": "Metric metadata field 'commit_sha' should be defined\n  Task id: task_batch_integration\n  Field: commit_sha\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Metric info", 
        "name": "Pct 'metric_id' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(metric_info, field)", 
        "message": "Metric metadata field 'metric_id' should be defined\n  Task id: task_batch_integration\n  Field: metric_id\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Metric info", 
        "name": "Pct 'metric_name' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(metric_info, field)", 
        "message": "Metric metadata field 'metric_name' should be defined\n  Task id: task_batch_integration\n  Field: metric_name\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Metric info", 
        "name": "Pct 'metric_summary' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(metric_info, field)", 
        "message": "Metric metadata field 'metric_summary' should be defined\n  Task id: task_batch_integration\n  Field: metric_summary\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Metric info", 
        "name": "Pct 'paper_reference' missing", 
        "value": 1.0, 
        "severity": 2, 
        "severity_value": 3.0, 
        "code": "percent_missing(metric_info, field)", 
        "message": "Metric metadata field 'paper_reference' should be defined\n  Task id: task_batch_integration\n  Field: paper_reference\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Metric info", 
        "name": "Pct 'maximize' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(metric_info, field)", 
        "message": "Metric metadata field 'maximize' should be defined\n  Task id: task_batch_integration\n  Field: maximize\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Dataset info", 
        "name": "Pct 'task_id' missing", 
        "value": 1.0, 
        "severity": 2, 
        "severity_value": 3.0, 
        "code": "percent_missing(dataset_info, field)", 
        "message": "Dataset metadata field 'task_id' should be defined\n  Task id: task_batch_integration\n  Field: task_id\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Dataset info", 
        "name": "Pct 'dataset_id' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(dataset_info, field)", 
        "message": "Dataset metadata field 'dataset_id' should be defined\n  Task id: task_batch_integration\n  Field: dataset_id\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Dataset info", 
        "name": "Pct 'dataset_name' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(dataset_info, field)", 
        "message": "Dataset metadata field 'dataset_name' should be defined\n  Task id: task_batch_integration\n  Field: dataset_name\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Dataset info", 
        "name": "Pct 'dataset_summary' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(dataset_info, field)", 
        "message": "Dataset metadata field 'dataset_summary' should be defined\n  Task id: task_batch_integration\n  Field: dataset_summary\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Dataset info", 
        "name": "Pct 'data_reference' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(dataset_info, field)", 
        "message": "Dataset metadata field 'data_reference' should be defined\n  Task id: task_batch_integration\n  Field: data_reference\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Dataset info", 
        "name": "Pct 'data_url' missing", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "percent_missing(dataset_info, field)", 
        "message": "Dataset metadata field 'data_url' should be defined\n  Task id: task_batch_integration\n  Field: data_url\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw data", 
        "name": "Number of results", 
        "value": 150, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "len(results) == len(method_info) * len(metric_info) * len(dataset_info)", 
        "message": "Number of results should be equal to #methods × #metrics × #datasets.\n  Task id: task_batch_integration\n  Number of results: 150\n  Number of methods: 25\n  Number of metrics: 13\n  Number of datasets: 6\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Metric 'asw_batch' %missing", 
        "value": 0.2466666666666667, 
        "severity": 2, 
        "severity_value": 2.466666666666667, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  Metric id: asw_batch\n  Percentage missing: 25%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Metric 'asw_label' %missing", 
        "value": 0.2733333333333333, 
        "severity": 2, 
        "severity_value": 2.733333333333333, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  Metric id: asw_label\n  Percentage missing: 27%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Metric 'cell_cycle_conservation' %missing", 
        "value": 0.64, 
        "severity": 3, 
        "severity_value": 6.3999999999999995, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  Metric id: cell_cycle_conservation\n  Percentage missing: 64%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Metric 'ari' %missing", 
        "value": 0.20666666666666667, 
        "severity": 2, 
        "severity_value": 2.0666666666666664, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  Metric id: ari\n  Percentage missing: 21%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Metric 'nmi' %missing", 
        "value": 0.20666666666666667, 
        "severity": 2, 
        "severity_value": 2.0666666666666664, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  Metric id: nmi\n  Percentage missing: 21%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Metric 'graph_connectivity' %missing", 
        "value": 0.20666666666666667, 
        "severity": 2, 
        "severity_value": 2.0666666666666664, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  Metric id: graph_connectivity\n  Percentage missing: 21%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Metric 'hvg_overlap' %missing", 
        "value": 0.76, 
        "severity": 3, 
        "severity_value": 7.6, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  Metric id: hvg_overlap\n  Percentage missing: 76%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Metric 'isolated_label_asw' %missing", 
        "value": 0.26, 
        "severity": 2, 
        "severity_value": 2.6, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  Metric id: isolated_label_asw\n  Percentage missing: 26%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Metric 'isolated_label_f1' %missing", 
        "value": 0.3666666666666667, 
        "severity": 3, 
        "severity_value": 3.666666666666667, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  Metric id: isolated_label_f1\n  Percentage missing: 37%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Metric 'kbet' %missing", 
        "value": 0.4733333333333334, 
        "severity": 3, 
        "severity_value": 4.733333333333333, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  Metric id: kbet\n  Percentage missing: 47%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Metric 'ilisi' %missing", 
        "value": 0.21999999999999997, 
        "severity": 2, 
        "severity_value": 2.1999999999999997, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  Metric id: ilisi\n  Percentage missing: 22%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Metric 'clisi' %missing", 
        "value": 0.21999999999999997, 
        "severity": 2, 
        "severity_value": 2.1999999999999997, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  Metric id: clisi\n  Percentage missing: 22%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Metric 'pcr' %missing", 
        "value": 0.26, 
        "severity": 2, 
        "severity_value": 2.6, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  Metric id: pcr\n  Percentage missing: 26%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'embed_cell_types' %missing", 
        "value": 0.15384615384615385, 
        "severity": 1, 
        "severity_value": 1.5384615384615385, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: embed_cell_types\n  Percentage missing: 15%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'embed_cell_types_jittered' %missing", 
        "value": 0.15384615384615385, 
        "severity": 1, 
        "severity_value": 1.5384615384615385, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: embed_cell_types_jittered\n  Percentage missing: 15%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'no_integration' %missing", 
        "value": 0.1923076923076923, 
        "severity": 1, 
        "severity_value": 1.923076923076923, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: no_integration\n  Percentage missing: 19%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'no_integration_batch' %missing", 
        "value": 0.3076923076923077, 
        "severity": 3, 
        "severity_value": 3.076923076923077, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: no_integration_batch\n  Percentage missing: 31%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'shuffle_integration' %missing", 
        "value": 0.07692307692307687, 
        "severity": 0, 
        "severity_value": 0.7692307692307687, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: shuffle_integration\n  Percentage missing: 8%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'shuffle_integration_by_batch' %missing", 
        "value": 0.11538461538461542, 
        "severity": 1, 
        "severity_value": 1.1538461538461542, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: shuffle_integration_by_batch\n  Percentage missing: 12%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'shuffle_integration_by_cell_type' %missing", 
        "value": 0.07692307692307687, 
        "severity": 0, 
        "severity_value": 0.7692307692307687, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: shuffle_integration_by_cell_type\n  Percentage missing: 8%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'batchelor_fastmnn' %missing", 
        "value": 0.15384615384615385, 
        "severity": 1, 
        "severity_value": 1.5384615384615385, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: batchelor_fastmnn\n  Percentage missing: 15%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'batchelor_mnn_correct' %missing", 
        "value": 0.858974358974359, 
        "severity": 3, 
        "severity_value": 8.58974358974359, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: batchelor_mnn_correct\n  Percentage missing: 86%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'bbknn' %missing", 
        "value": 0.5512820512820513, 
        "severity": 3, 
        "severity_value": 5.512820512820513, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: bbknn\n  Percentage missing: 55%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'combat' %missing", 
        "value": 0.07692307692307687, 
        "severity": 0, 
        "severity_value": 0.7692307692307687, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: combat\n  Percentage missing: 8%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'geneformer' %missing", 
        "value": 0.42307692307692313, 
        "severity": 3, 
        "severity_value": 4.230769230769231, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: geneformer\n  Percentage missing: 42%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'harmony' %missing", 
        "value": 0.15384615384615385, 
        "severity": 1, 
        "severity_value": 1.5384615384615385, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: harmony\n  Percentage missing: 15%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'harmonypy' %missing", 
        "value": 0.16666666666666663, 
        "severity": 1, 
        "severity_value": 1.6666666666666663, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: harmonypy\n  Percentage missing: 17%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'liger' %missing", 
        "value": 0.3076923076923077, 
        "severity": 3, 
        "severity_value": 3.076923076923077, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: liger\n  Percentage missing: 31%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'mnnpy' %missing", 
        "value": 0.858974358974359, 
        "severity": 3, 
        "severity_value": 8.58974358974359, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: mnnpy\n  Percentage missing: 86%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'pyliger' %missing", 
        "value": 0.15384615384615385, 
        "severity": 1, 
        "severity_value": 1.5384615384615385, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: pyliger\n  Percentage missing: 15%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'scalex' %missing", 
        "value": 0.23076923076923073, 
        "severity": 2, 
        "severity_value": 2.307692307692307, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: scalex\n  Percentage missing: 23%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'scanorama' %missing", 
        "value": 0.23076923076923073, 
        "severity": 2, 
        "severity_value": 2.307692307692307, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: scanorama\n  Percentage missing: 23%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'scanvi' %missing", 
        "value": 0.1923076923076923, 
        "severity": 1, 
        "severity_value": 1.923076923076923, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: scanvi\n  Percentage missing: 19%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'scgpt' %missing", 
        "value": 0.42307692307692313, 
        "severity": 3, 
        "severity_value": 4.230769230769231, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: scgpt\n  Percentage missing: 42%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'scimilarity' %missing", 
        "value": 0.42307692307692313, 
        "severity": 3, 
        "severity_value": 4.230769230769231, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: scimilarity\n  Percentage missing: 42%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'scprint' %missing", 
        "value": 1.0, 
        "severity": 3, 
        "severity_value": 10.0, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: scprint\n  Percentage missing: 100%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'scvi' %missing", 
        "value": 0.17948717948717952, 
        "severity": 1, 
        "severity_value": 1.7948717948717952, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: scvi\n  Percentage missing: 18%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Method 'uce' %missing", 
        "value": 0.8846153846153846, 
        "severity": 3, 
        "severity_value": 8.846153846153845, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  method id: uce\n  Percentage missing: 88%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Dataset 'cellxgene_census/dkd' %missing", 
        "value": 0.2553846153846153, 
        "severity": 2, 
        "severity_value": 2.553846153846153, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  dataset id: cellxgene_census/dkd\n  Percentage missing: 26%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Dataset 'cellxgene_census/hypomap' %missing", 
        "value": 0.44307692307692303, 
        "severity": 3, 
        "severity_value": 4.43076923076923, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  dataset id: cellxgene_census/hypomap\n  Percentage missing: 44%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Dataset 'cellxgene_census/tabula_sapiens' %missing", 
        "value": 0.3107692307692308, 
        "severity": 3, 
        "severity_value": 3.1076923076923078, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  dataset id: cellxgene_census/tabula_sapiens\n  Percentage missing: 31%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Dataset 'cellxgene_census/immune_cell_atlas' %missing", 
        "value": 0.23076923076923084, 
        "severity": 2, 
        "severity_value": 2.3076923076923084, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  dataset id: cellxgene_census/immune_cell_atlas\n  Percentage missing: 23%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Dataset 'cellxgene_census/gtex_v9' %missing", 
        "value": 0.3292307692307692, 
        "severity": 3, 
        "severity_value": 3.292307692307692, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  dataset id: cellxgene_census/gtex_v9\n  Percentage missing: 33%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Raw results", 
        "name": "Dataset 'cellxgene_census/mouse_pancreas_atlas' %missing", 
        "value": 0.4338461538461539, 
        "severity": 3, 
        "severity_value": 4.338461538461538, 
        "code": "pct_missing <= .1", 
        "message": "Percentage of missing results should be less than 10%.\n  Task id: task_batch_integration\n  dataset id: cellxgene_census/mouse_pancreas_atlas\n  Percentage missing: 43%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types asw_batch", 
        "value": 0.7694, 
        "severity": 0, 
        "severity_value": -0.7694, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: asw_batch\n  Worst score: 0.7694%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types asw_batch", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: asw_batch\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types_jittered asw_batch", 
        "value": 0.7516, 
        "severity": 0, 
        "severity_value": -0.7516, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types_jittered performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: asw_batch\n  Worst score: 0.7516%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types_jittered asw_batch", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types_jittered performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: asw_batch\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration asw_batch", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: asw_batch\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration asw_batch", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method no_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: asw_batch\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration_batch asw_batch", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: asw_batch\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration_batch asw_batch", 
        "value": 0.4317, 
        "severity": 0, 
        "severity_value": 0.21585, 
        "code": "best_score <= 2", 
        "message": "Method no_integration_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: asw_batch\n  Best score: 0.4317%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration asw_batch", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: asw_batch\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration asw_batch", 
        "value": 0.9204, 
        "severity": 0, 
        "severity_value": 0.4602, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: asw_batch\n  Best score: 0.9204%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_batch asw_batch", 
        "value": 0.3155, 
        "severity": 0, 
        "severity_value": -0.3155, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: asw_batch\n  Worst score: 0.3155%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_batch asw_batch", 
        "value": 0.7494, 
        "severity": 0, 
        "severity_value": 0.3747, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: asw_batch\n  Best score: 0.7494%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_cell_type asw_batch", 
        "value": 0.3124, 
        "severity": 0, 
        "severity_value": -0.3124, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_cell_type performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: asw_batch\n  Worst score: 0.3124%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_cell_type asw_batch", 
        "value": 0.9186, 
        "severity": 0, 
        "severity_value": 0.4593, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_cell_type performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: asw_batch\n  Best score: 0.9186%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_fastmnn asw_batch", 
        "value": 0.1334, 
        "severity": 0, 
        "severity_value": -0.1334, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_fastmnn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: asw_batch\n  Worst score: 0.1334%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_fastmnn asw_batch", 
        "value": 0.9406, 
        "severity": 0, 
        "severity_value": 0.4703, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_fastmnn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: asw_batch\n  Best score: 0.9406%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_mnn_correct asw_batch", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_mnn_correct performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: asw_batch\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_mnn_correct asw_batch", 
        "value": 0.3607, 
        "severity": 0, 
        "severity_value": 0.18035, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_mnn_correct performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: asw_batch\n  Best score: 0.3607%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score bbknn asw_batch", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method bbknn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: asw_batch\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score bbknn asw_batch", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method bbknn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: asw_batch\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score combat asw_batch", 
        "value": 0.0485, 
        "severity": 0, 
        "severity_value": -0.0485, 
        "code": "worst_score >= -1", 
        "message": "Method combat performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: asw_batch\n  Worst score: 0.0485%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score combat asw_batch", 
        "value": 1.1036, 
        "severity": 0, 
        "severity_value": 0.5518, 
        "code": "best_score <= 2", 
        "message": "Method combat performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: asw_batch\n  Best score: 1.1036%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score geneformer asw_batch", 
        "value": -3.4042, 
        "severity": 3, 
        "severity_value": 3.4042, 
        "code": "worst_score >= -1", 
        "message": "Method geneformer performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: asw_batch\n  Worst score: -3.4042%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score geneformer asw_batch", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method geneformer performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: asw_batch\n  Best score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmony asw_batch", 
        "value": 0.229, 
        "severity": 0, 
        "severity_value": -0.229, 
        "code": "worst_score >= -1", 
        "message": "Method harmony performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: asw_batch\n  Worst score: 0.229%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmony asw_batch", 
        "value": 0.7891, 
        "severity": 0, 
        "severity_value": 0.39455, 
        "code": "best_score <= 2", 
        "message": "Method harmony performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: asw_batch\n  Best score: 0.7891%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmonypy asw_batch", 
        "value": 0.209, 
        "severity": 0, 
        "severity_value": -0.209, 
        "code": "worst_score >= -1", 
        "message": "Method harmonypy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: asw_batch\n  Worst score: 0.209%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmonypy asw_batch", 
        "value": 0.7973, 
        "severity": 0, 
        "severity_value": 0.39865, 
        "code": "best_score <= 2", 
        "message": "Method harmonypy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: asw_batch\n  Best score: 0.7973%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score liger asw_batch", 
        "value": -0.6274, 
        "severity": 0, 
        "severity_value": 0.6274, 
        "code": "worst_score >= -1", 
        "message": "Method liger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: asw_batch\n  Worst score: -0.6274%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score liger asw_batch", 
        "value": 0.661, 
        "severity": 0, 
        "severity_value": 0.3305, 
        "code": "best_score <= 2", 
        "message": "Method liger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: asw_batch\n  Best score: 0.661%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score mnnpy asw_batch", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method mnnpy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: asw_batch\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score mnnpy asw_batch", 
        "value": 0.7022, 
        "severity": 0, 
        "severity_value": 0.3511, 
        "code": "best_score <= 2", 
        "message": "Method mnnpy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: asw_batch\n  Best score: 0.7022%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score pyliger asw_batch", 
        "value": -0.5354, 
        "severity": 0, 
        "severity_value": 0.5354, 
        "code": "worst_score >= -1", 
        "message": "Method pyliger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: asw_batch\n  Worst score: -0.5354%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score pyliger asw_batch", 
        "value": 0.7143, 
        "severity": 0, 
        "severity_value": 0.35715, 
        "code": "best_score <= 2", 
        "message": "Method pyliger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: asw_batch\n  Best score: 0.7143%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scalex asw_batch", 
        "value": -0.2247, 
        "severity": 0, 
        "severity_value": 0.2247, 
        "code": "worst_score >= -1", 
        "message": "Method scalex performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: asw_batch\n  Worst score: -0.2247%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scalex asw_batch", 
        "value": 0.7278, 
        "severity": 0, 
        "severity_value": 0.3639, 
        "code": "best_score <= 2", 
        "message": "Method scalex performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: asw_batch\n  Best score: 0.7278%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanorama asw_batch", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scanorama performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: asw_batch\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanorama asw_batch", 
        "value": 0.7862, 
        "severity": 0, 
        "severity_value": 0.3931, 
        "code": "best_score <= 2", 
        "message": "Method scanorama performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: asw_batch\n  Best score: 0.7862%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanvi asw_batch", 
        "value": 0.1309, 
        "severity": 0, 
        "severity_value": -0.1309, 
        "code": "worst_score >= -1", 
        "message": "Method scanvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: asw_batch\n  Worst score: 0.1309%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanvi asw_batch", 
        "value": 0.7913, 
        "severity": 0, 
        "severity_value": 0.39565, 
        "code": "best_score <= 2", 
        "message": "Method scanvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: asw_batch\n  Best score: 0.7913%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scgpt asw_batch", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scgpt performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt\n  Metric id: asw_batch\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scgpt asw_batch", 
        "value": 0.7323, 
        "severity": 0, 
        "severity_value": 0.36615, 
        "code": "best_score <= 2", 
        "message": "Method scgpt performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt\n  Metric id: asw_batch\n  Best score: 0.7323%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scimilarity asw_batch", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scimilarity performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: asw_batch\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scimilarity asw_batch", 
        "value": 0.5962, 
        "severity": 0, 
        "severity_value": 0.2981, 
        "code": "best_score <= 2", 
        "message": "Method scimilarity performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: asw_batch\n  Best score: 0.5962%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scprint asw_batch", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scprint performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scprint\n  Metric id: asw_batch\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scprint asw_batch", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method scprint performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scprint\n  Metric id: asw_batch\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scvi asw_batch", 
        "value": 0.3565, 
        "severity": 0, 
        "severity_value": -0.3565, 
        "code": "worst_score >= -1", 
        "message": "Method scvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: asw_batch\n  Worst score: 0.3565%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scvi asw_batch", 
        "value": 1.0065, 
        "severity": 0, 
        "severity_value": 0.50325, 
        "code": "best_score <= 2", 
        "message": "Method scvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: asw_batch\n  Best score: 1.0065%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score uce asw_batch", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method uce performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: asw_batch\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score uce asw_batch", 
        "value": 0.8795, 
        "severity": 0, 
        "severity_value": 0.43975, 
        "code": "best_score <= 2", 
        "message": "Method uce performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: asw_batch\n  Best score: 0.8795%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types asw_label", 
        "value": 1, 
        "severity": 0, 
        "severity_value": -1.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: asw_label\n  Worst score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types asw_label", 
        "value": 1, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: asw_label\n  Best score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types_jittered asw_label", 
        "value": 1, 
        "severity": 0, 
        "severity_value": -1.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types_jittered performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: asw_label\n  Worst score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types_jittered asw_label", 
        "value": 1, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types_jittered performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: asw_label\n  Best score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration asw_label", 
        "value": 0.1206, 
        "severity": 0, 
        "severity_value": -0.1206, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: asw_label\n  Worst score: 0.1206%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration asw_label", 
        "value": 0.277, 
        "severity": 0, 
        "severity_value": 0.1385, 
        "code": "best_score <= 2", 
        "message": "Method no_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: asw_label\n  Best score: 0.277%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration_batch asw_label", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: asw_label\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration_batch asw_label", 
        "value": 0.1895, 
        "severity": 0, 
        "severity_value": 0.09475, 
        "code": "best_score <= 2", 
        "message": "Method no_integration_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: asw_label\n  Best score: 0.1895%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration asw_label", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: asw_label\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration asw_label", 
        "value": 0.0625, 
        "severity": 0, 
        "severity_value": 0.03125, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: asw_label\n  Best score: 0.0625%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_batch asw_label", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: asw_label\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_batch asw_label", 
        "value": 0.0419, 
        "severity": 0, 
        "severity_value": 0.02095, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: asw_label\n  Best score: 0.0419%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_cell_type asw_label", 
        "value": 0.1206, 
        "severity": 0, 
        "severity_value": -0.1206, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_cell_type performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: asw_label\n  Worst score: 0.1206%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_cell_type asw_label", 
        "value": 0.277, 
        "severity": 0, 
        "severity_value": 0.1385, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_cell_type performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: asw_label\n  Best score: 0.277%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_fastmnn asw_label", 
        "value": 0.1051, 
        "severity": 0, 
        "severity_value": -0.1051, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_fastmnn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: asw_label\n  Worst score: 0.1051%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_fastmnn asw_label", 
        "value": 0.3531, 
        "severity": 0, 
        "severity_value": 0.17655, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_fastmnn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: asw_label\n  Best score: 0.3531%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_mnn_correct asw_label", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_mnn_correct performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: asw_label\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_mnn_correct asw_label", 
        "value": 0.3531, 
        "severity": 0, 
        "severity_value": 0.17655, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_mnn_correct performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: asw_label\n  Best score: 0.3531%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score bbknn asw_label", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method bbknn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: asw_label\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score bbknn asw_label", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method bbknn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: asw_label\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score combat asw_label", 
        "value": 0.0979, 
        "severity": 0, 
        "severity_value": -0.0979, 
        "code": "worst_score >= -1", 
        "message": "Method combat performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: asw_label\n  Worst score: 0.0979%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score combat asw_label", 
        "value": 0.2478, 
        "severity": 0, 
        "severity_value": 0.1239, 
        "code": "best_score <= 2", 
        "message": "Method combat performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: asw_label\n  Best score: 0.2478%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score geneformer asw_label", 
        "value": -0.5199, 
        "severity": 0, 
        "severity_value": 0.5199, 
        "code": "worst_score >= -1", 
        "message": "Method geneformer performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: asw_label\n  Worst score: -0.5199%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score geneformer asw_label", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method geneformer performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: asw_label\n  Best score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmony asw_label", 
        "value": 0.0835, 
        "severity": 0, 
        "severity_value": -0.0835, 
        "code": "worst_score >= -1", 
        "message": "Method harmony performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: asw_label\n  Worst score: 0.0835%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmony asw_label", 
        "value": 0.3151, 
        "severity": 0, 
        "severity_value": 0.15755, 
        "code": "best_score <= 2", 
        "message": "Method harmony performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: asw_label\n  Best score: 0.3151%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmonypy asw_label", 
        "value": 0.0952, 
        "severity": 0, 
        "severity_value": -0.0952, 
        "code": "worst_score >= -1", 
        "message": "Method harmonypy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: asw_label\n  Worst score: 0.0952%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmonypy asw_label", 
        "value": 0.3143, 
        "severity": 0, 
        "severity_value": 0.15715, 
        "code": "best_score <= 2", 
        "message": "Method harmonypy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: asw_label\n  Best score: 0.3143%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score liger asw_label", 
        "value": -0.022, 
        "severity": 0, 
        "severity_value": 0.022, 
        "code": "worst_score >= -1", 
        "message": "Method liger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: asw_label\n  Worst score: -0.022%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score liger asw_label", 
        "value": 0.2808, 
        "severity": 0, 
        "severity_value": 0.1404, 
        "code": "best_score <= 2", 
        "message": "Method liger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: asw_label\n  Best score: 0.2808%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score mnnpy asw_label", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method mnnpy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: asw_label\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score mnnpy asw_label", 
        "value": 0.0277, 
        "severity": 0, 
        "severity_value": 0.01385, 
        "code": "best_score <= 2", 
        "message": "Method mnnpy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: asw_label\n  Best score: 0.0277%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score pyliger asw_label", 
        "value": -0.043, 
        "severity": 0, 
        "severity_value": 0.043, 
        "code": "worst_score >= -1", 
        "message": "Method pyliger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: asw_label\n  Worst score: -0.043%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score pyliger asw_label", 
        "value": 0.2877, 
        "severity": 0, 
        "severity_value": 0.14385, 
        "code": "best_score <= 2", 
        "message": "Method pyliger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: asw_label\n  Best score: 0.2877%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scalex asw_label", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scalex performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: asw_label\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scalex asw_label", 
        "value": 0.2799, 
        "severity": 0, 
        "severity_value": 0.13995, 
        "code": "best_score <= 2", 
        "message": "Method scalex performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: asw_label\n  Best score: 0.2799%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanorama asw_label", 
        "value": -0.0152, 
        "severity": 0, 
        "severity_value": 0.0152, 
        "code": "worst_score >= -1", 
        "message": "Method scanorama performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: asw_label\n  Worst score: -0.0152%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanorama asw_label", 
        "value": 0.0326, 
        "severity": 0, 
        "severity_value": 0.0163, 
        "code": "best_score <= 2", 
        "message": "Method scanorama performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: asw_label\n  Best score: 0.0326%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanvi asw_label", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scanvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: asw_label\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanvi asw_label", 
        "value": 0.3293, 
        "severity": 0, 
        "severity_value": 0.16465, 
        "code": "best_score <= 2", 
        "message": "Method scanvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: asw_label\n  Best score: 0.3293%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scgpt asw_label", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scgpt performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt\n  Metric id: asw_label\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scgpt asw_label", 
        "value": 0.2855, 
        "severity": 0, 
        "severity_value": 0.14275, 
        "code": "best_score <= 2", 
        "message": "Method scgpt performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt\n  Metric id: asw_label\n  Best score: 0.2855%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scimilarity asw_label", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scimilarity performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: asw_label\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scimilarity asw_label", 
        "value": 0.4438, 
        "severity": 0, 
        "severity_value": 0.2219, 
        "code": "best_score <= 2", 
        "message": "Method scimilarity performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: asw_label\n  Best score: 0.4438%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scprint asw_label", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scprint performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scprint\n  Metric id: asw_label\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scprint asw_label", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method scprint performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scprint\n  Metric id: asw_label\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scvi asw_label", 
        "value": 0.1352, 
        "severity": 0, 
        "severity_value": -0.1352, 
        "code": "worst_score >= -1", 
        "message": "Method scvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: asw_label\n  Worst score: 0.1352%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scvi asw_label", 
        "value": 0.176, 
        "severity": 0, 
        "severity_value": 0.088, 
        "code": "best_score <= 2", 
        "message": "Method scvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: asw_label\n  Best score: 0.176%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score uce asw_label", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method uce performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: asw_label\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score uce asw_label", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method uce performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: asw_label\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types cell_cycle_conservation", 
        "value": 0.6592, 
        "severity": 0, 
        "severity_value": 0.3296, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: cell_cycle_conservation\n  Best score: 0.6592%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types_jittered cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types_jittered performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types_jittered cell_cycle_conservation", 
        "value": 0.6562, 
        "severity": 0, 
        "severity_value": 0.3281, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types_jittered performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: cell_cycle_conservation\n  Best score: 0.6562%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration cell_cycle_conservation", 
        "value": 0.9275, 
        "severity": 0, 
        "severity_value": 0.46375, 
        "code": "best_score <= 2", 
        "message": "Method no_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: cell_cycle_conservation\n  Best score: 0.9275%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration_batch cell_cycle_conservation", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: cell_cycle_conservation\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration_batch cell_cycle_conservation", 
        "value": 1, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method no_integration_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: cell_cycle_conservation\n  Best score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration cell_cycle_conservation", 
        "value": 0.0202, 
        "severity": 0, 
        "severity_value": 0.0101, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: cell_cycle_conservation\n  Best score: 0.0202%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_batch cell_cycle_conservation", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: cell_cycle_conservation\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_batch cell_cycle_conservation", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: cell_cycle_conservation\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_cell_type cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_cell_type performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_cell_type cell_cycle_conservation", 
        "value": 0.7224, 
        "severity": 0, 
        "severity_value": 0.3612, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_cell_type performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: cell_cycle_conservation\n  Best score: 0.7224%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_fastmnn cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_fastmnn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_fastmnn cell_cycle_conservation", 
        "value": 0.842, 
        "severity": 0, 
        "severity_value": 0.421, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_fastmnn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: cell_cycle_conservation\n  Best score: 0.842%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_mnn_correct cell_cycle_conservation", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_mnn_correct performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: cell_cycle_conservation\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_mnn_correct cell_cycle_conservation", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_mnn_correct performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: cell_cycle_conservation\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score bbknn cell_cycle_conservation", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method bbknn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: cell_cycle_conservation\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score bbknn cell_cycle_conservation", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method bbknn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: cell_cycle_conservation\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score combat cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method combat performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score combat cell_cycle_conservation", 
        "value": 0.8367, 
        "severity": 0, 
        "severity_value": 0.41835, 
        "code": "best_score <= 2", 
        "message": "Method combat performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: cell_cycle_conservation\n  Best score: 0.8367%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score geneformer cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method geneformer performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score geneformer cell_cycle_conservation", 
        "value": 0.2451, 
        "severity": 0, 
        "severity_value": 0.12255, 
        "code": "best_score <= 2", 
        "message": "Method geneformer performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: cell_cycle_conservation\n  Best score: 0.2451%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmony cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method harmony performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmony cell_cycle_conservation", 
        "value": 0.9013, 
        "severity": 0, 
        "severity_value": 0.45065, 
        "code": "best_score <= 2", 
        "message": "Method harmony performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: cell_cycle_conservation\n  Best score: 0.9013%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmonypy cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method harmonypy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmonypy cell_cycle_conservation", 
        "value": 0.901, 
        "severity": 0, 
        "severity_value": 0.4505, 
        "code": "best_score <= 2", 
        "message": "Method harmonypy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: cell_cycle_conservation\n  Best score: 0.901%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score liger cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method liger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score liger cell_cycle_conservation", 
        "value": 0.5915, 
        "severity": 0, 
        "severity_value": 0.29575, 
        "code": "best_score <= 2", 
        "message": "Method liger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: cell_cycle_conservation\n  Best score: 0.5915%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score mnnpy cell_cycle_conservation", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method mnnpy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: cell_cycle_conservation\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score mnnpy cell_cycle_conservation", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method mnnpy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: cell_cycle_conservation\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score pyliger cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method pyliger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score pyliger cell_cycle_conservation", 
        "value": 0.683, 
        "severity": 0, 
        "severity_value": 0.3415, 
        "code": "best_score <= 2", 
        "message": "Method pyliger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: cell_cycle_conservation\n  Best score: 0.683%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scalex cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scalex performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scalex cell_cycle_conservation", 
        "value": 0.808, 
        "severity": 0, 
        "severity_value": 0.404, 
        "code": "best_score <= 2", 
        "message": "Method scalex performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: cell_cycle_conservation\n  Best score: 0.808%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanorama cell_cycle_conservation", 
        "value": -0.0017, 
        "severity": 0, 
        "severity_value": 0.0017, 
        "code": "worst_score >= -1", 
        "message": "Method scanorama performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: cell_cycle_conservation\n  Worst score: -0.0017%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanorama cell_cycle_conservation", 
        "value": 0.0072, 
        "severity": 0, 
        "severity_value": 0.0036, 
        "code": "best_score <= 2", 
        "message": "Method scanorama performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: cell_cycle_conservation\n  Best score: 0.0072%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanvi cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scanvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanvi cell_cycle_conservation", 
        "value": 0.8154, 
        "severity": 0, 
        "severity_value": 0.4077, 
        "code": "best_score <= 2", 
        "message": "Method scanvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: cell_cycle_conservation\n  Best score: 0.8154%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scgpt cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scgpt performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scgpt cell_cycle_conservation", 
        "value": 0.8395, 
        "severity": 0, 
        "severity_value": 0.41975, 
        "code": "best_score <= 2", 
        "message": "Method scgpt performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt\n  Metric id: cell_cycle_conservation\n  Best score: 0.8395%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scimilarity cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scimilarity performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scimilarity cell_cycle_conservation", 
        "value": 0.6711, 
        "severity": 0, 
        "severity_value": 0.33555, 
        "code": "best_score <= 2", 
        "message": "Method scimilarity performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: cell_cycle_conservation\n  Best score: 0.6711%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scprint cell_cycle_conservation", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scprint performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scprint\n  Metric id: cell_cycle_conservation\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scprint cell_cycle_conservation", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method scprint performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scprint\n  Metric id: cell_cycle_conservation\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scvi cell_cycle_conservation", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: cell_cycle_conservation\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scvi cell_cycle_conservation", 
        "value": 0.7132, 
        "severity": 0, 
        "severity_value": 0.3566, 
        "code": "best_score <= 2", 
        "message": "Method scvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: cell_cycle_conservation\n  Best score: 0.7132%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score uce cell_cycle_conservation", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method uce performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: cell_cycle_conservation\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score uce cell_cycle_conservation", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method uce performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: cell_cycle_conservation\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types ari", 
        "value": 1, 
        "severity": 0, 
        "severity_value": -1.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: ari\n  Worst score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types ari", 
        "value": 1, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: ari\n  Best score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types_jittered ari", 
        "value": 1, 
        "severity": 0, 
        "severity_value": -1.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types_jittered performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: ari\n  Worst score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types_jittered ari", 
        "value": 1, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types_jittered performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: ari\n  Best score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration ari", 
        "value": 0.2566, 
        "severity": 0, 
        "severity_value": -0.2566, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: ari\n  Worst score: 0.2566%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration ari", 
        "value": 0.6958, 
        "severity": 0, 
        "severity_value": 0.3479, 
        "code": "best_score <= 2", 
        "message": "Method no_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: ari\n  Best score: 0.6958%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration_batch ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration_batch ari", 
        "value": 0.2907, 
        "severity": 0, 
        "severity_value": 0.14535, 
        "code": "best_score <= 2", 
        "message": "Method no_integration_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: ari\n  Best score: 0.2907%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration ari", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: ari\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration ari", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: ari\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_batch ari", 
        "value": 4.2032e-06, 
        "severity": 0, 
        "severity_value": -4.2032e-06, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: ari\n  Worst score: 4.2032e-06%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_batch ari", 
        "value": 0.0881, 
        "severity": 0, 
        "severity_value": 0.04405, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: ari\n  Best score: 0.0881%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_cell_type ari", 
        "value": 0.2726, 
        "severity": 0, 
        "severity_value": -0.2726, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_cell_type performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: ari\n  Worst score: 0.2726%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_cell_type ari", 
        "value": 0.6854, 
        "severity": 0, 
        "severity_value": 0.3427, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_cell_type performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: ari\n  Best score: 0.6854%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_fastmnn ari", 
        "value": 0.3831, 
        "severity": 0, 
        "severity_value": -0.3831, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_fastmnn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: ari\n  Worst score: 0.3831%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_fastmnn ari", 
        "value": 0.7684, 
        "severity": 0, 
        "severity_value": 0.3842, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_fastmnn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: ari\n  Best score: 0.7684%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_mnn_correct ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_mnn_correct performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_mnn_correct ari", 
        "value": 0.757, 
        "severity": 0, 
        "severity_value": 0.3785, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_mnn_correct performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: ari\n  Best score: 0.757%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score bbknn ari", 
        "value": 0.4055, 
        "severity": 0, 
        "severity_value": -0.4055, 
        "code": "worst_score >= -1", 
        "message": "Method bbknn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: ari\n  Worst score: 0.4055%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score bbknn ari", 
        "value": 0.7916, 
        "severity": 0, 
        "severity_value": 0.3958, 
        "code": "best_score <= 2", 
        "message": "Method bbknn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: ari\n  Best score: 0.7916%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score combat ari", 
        "value": 0.218, 
        "severity": 0, 
        "severity_value": -0.218, 
        "code": "worst_score >= -1", 
        "message": "Method combat performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: ari\n  Worst score: 0.218%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score combat ari", 
        "value": 0.7674, 
        "severity": 0, 
        "severity_value": 0.3837, 
        "code": "best_score <= 2", 
        "message": "Method combat performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: ari\n  Best score: 0.7674%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score geneformer ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method geneformer performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score geneformer ari", 
        "value": 0.0731, 
        "severity": 0, 
        "severity_value": 0.03655, 
        "code": "best_score <= 2", 
        "message": "Method geneformer performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: ari\n  Best score: 0.0731%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmony ari", 
        "value": 0.378, 
        "severity": 0, 
        "severity_value": -0.378, 
        "code": "worst_score >= -1", 
        "message": "Method harmony performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: ari\n  Worst score: 0.378%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmony ari", 
        "value": 0.8157, 
        "severity": 0, 
        "severity_value": 0.40785, 
        "code": "best_score <= 2", 
        "message": "Method harmony performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: ari\n  Best score: 0.8157%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmonypy ari", 
        "value": 0.4129, 
        "severity": 0, 
        "severity_value": -0.4129, 
        "code": "worst_score >= -1", 
        "message": "Method harmonypy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: ari\n  Worst score: 0.4129%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmonypy ari", 
        "value": 0.8206, 
        "severity": 0, 
        "severity_value": 0.4103, 
        "code": "best_score <= 2", 
        "message": "Method harmonypy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: ari\n  Best score: 0.8206%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score liger ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method liger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score liger ari", 
        "value": 0.7464, 
        "severity": 0, 
        "severity_value": 0.3732, 
        "code": "best_score <= 2", 
        "message": "Method liger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: ari\n  Best score: 0.7464%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score mnnpy ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method mnnpy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score mnnpy ari", 
        "value": 0.1663, 
        "severity": 0, 
        "severity_value": 0.08315, 
        "code": "best_score <= 2", 
        "message": "Method mnnpy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: ari\n  Best score: 0.1663%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score pyliger ari", 
        "value": 0.3097, 
        "severity": 0, 
        "severity_value": -0.3097, 
        "code": "worst_score >= -1", 
        "message": "Method pyliger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: ari\n  Worst score: 0.3097%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score pyliger ari", 
        "value": 0.6634, 
        "severity": 0, 
        "severity_value": 0.3317, 
        "code": "best_score <= 2", 
        "message": "Method pyliger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: ari\n  Best score: 0.6634%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scalex ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scalex performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scalex ari", 
        "value": 0.6178, 
        "severity": 0, 
        "severity_value": 0.3089, 
        "code": "best_score <= 2", 
        "message": "Method scalex performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: ari\n  Best score: 0.6178%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanorama ari", 
        "value": -0.0001, 
        "severity": 0, 
        "severity_value": 0.0001, 
        "code": "worst_score >= -1", 
        "message": "Method scanorama performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: ari\n  Worst score: -0.0001%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanorama ari", 
        "value": 0.1729, 
        "severity": 0, 
        "severity_value": 0.08645, 
        "code": "best_score <= 2", 
        "message": "Method scanorama performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: ari\n  Best score: 0.1729%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanvi ari", 
        "value": 0.2287, 
        "severity": 0, 
        "severity_value": -0.2287, 
        "code": "worst_score >= -1", 
        "message": "Method scanvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: ari\n  Worst score: 0.2287%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanvi ari", 
        "value": 0.8676, 
        "severity": 0, 
        "severity_value": 0.4338, 
        "code": "best_score <= 2", 
        "message": "Method scanvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: ari\n  Best score: 0.8676%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scgpt ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scgpt performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scgpt ari", 
        "value": 0.7594, 
        "severity": 0, 
        "severity_value": 0.3797, 
        "code": "best_score <= 2", 
        "message": "Method scgpt performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt\n  Metric id: ari\n  Best score: 0.7594%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scimilarity ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scimilarity performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scimilarity ari", 
        "value": 0.7104, 
        "severity": 0, 
        "severity_value": 0.3552, 
        "code": "best_score <= 2", 
        "message": "Method scimilarity performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: ari\n  Best score: 0.7104%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scprint ari", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scprint performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scprint\n  Metric id: ari\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scprint ari", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method scprint performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scprint\n  Metric id: ari\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scvi ari", 
        "value": 0.2527, 
        "severity": 0, 
        "severity_value": -0.2527, 
        "code": "worst_score >= -1", 
        "message": "Method scvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: ari\n  Worst score: 0.2527%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scvi ari", 
        "value": 0.8708, 
        "severity": 0, 
        "severity_value": 0.4354, 
        "code": "best_score <= 2", 
        "message": "Method scvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: ari\n  Best score: 0.8708%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score uce ari", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method uce performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: ari\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score uce ari", 
        "value": 0.5043, 
        "severity": 0, 
        "severity_value": 0.25215, 
        "code": "best_score <= 2", 
        "message": "Method uce performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: ari\n  Best score: 0.5043%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types nmi", 
        "value": 1, 
        "severity": 0, 
        "severity_value": -1.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: nmi\n  Worst score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types nmi", 
        "value": 1, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: nmi\n  Best score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types_jittered nmi", 
        "value": 1, 
        "severity": 0, 
        "severity_value": -1.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types_jittered performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: nmi\n  Worst score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types_jittered nmi", 
        "value": 1, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types_jittered performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: nmi\n  Best score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration nmi", 
        "value": 0.6017, 
        "severity": 0, 
        "severity_value": -0.6017, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: nmi\n  Worst score: 0.6017%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration nmi", 
        "value": 0.8291, 
        "severity": 0, 
        "severity_value": 0.41455, 
        "code": "best_score <= 2", 
        "message": "Method no_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: nmi\n  Best score: 0.8291%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration_batch nmi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: nmi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration_batch nmi", 
        "value": 0.6883, 
        "severity": 0, 
        "severity_value": 0.34415, 
        "code": "best_score <= 2", 
        "message": "Method no_integration_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: nmi\n  Best score: 0.6883%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration nmi", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: nmi\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration nmi", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: nmi\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_batch nmi", 
        "value": 0.0028, 
        "severity": 0, 
        "severity_value": -0.0028, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: nmi\n  Worst score: 0.0028%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_batch nmi", 
        "value": 0.2066, 
        "severity": 0, 
        "severity_value": 0.1033, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: nmi\n  Best score: 0.2066%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_cell_type nmi", 
        "value": 0.6109, 
        "severity": 0, 
        "severity_value": -0.6109, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_cell_type performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: nmi\n  Worst score: 0.6109%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_cell_type nmi", 
        "value": 0.8273, 
        "severity": 0, 
        "severity_value": 0.41365, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_cell_type performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: nmi\n  Best score: 0.8273%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_fastmnn nmi", 
        "value": 0.6734, 
        "severity": 0, 
        "severity_value": -0.6734, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_fastmnn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: nmi\n  Worst score: 0.6734%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_fastmnn nmi", 
        "value": 0.8311, 
        "severity": 0, 
        "severity_value": 0.41555, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_fastmnn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: nmi\n  Best score: 0.8311%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_mnn_correct nmi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_mnn_correct performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: nmi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_mnn_correct nmi", 
        "value": 0.8245, 
        "severity": 0, 
        "severity_value": 0.41225, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_mnn_correct performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: nmi\n  Best score: 0.8245%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score bbknn nmi", 
        "value": 0.7083, 
        "severity": 0, 
        "severity_value": -0.7083, 
        "code": "worst_score >= -1", 
        "message": "Method bbknn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: nmi\n  Worst score: 0.7083%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score bbknn nmi", 
        "value": 0.8255, 
        "severity": 0, 
        "severity_value": 0.41275, 
        "code": "best_score <= 2", 
        "message": "Method bbknn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: nmi\n  Best score: 0.8255%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score combat nmi", 
        "value": 0.5927, 
        "severity": 0, 
        "severity_value": -0.5927, 
        "code": "worst_score >= -1", 
        "message": "Method combat performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: nmi\n  Worst score: 0.5927%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score combat nmi", 
        "value": 0.8303, 
        "severity": 0, 
        "severity_value": 0.41515, 
        "code": "best_score <= 2", 
        "message": "Method combat performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: nmi\n  Best score: 0.8303%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score geneformer nmi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method geneformer performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: nmi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score geneformer nmi", 
        "value": 0.4666, 
        "severity": 0, 
        "severity_value": 0.2333, 
        "code": "best_score <= 2", 
        "message": "Method geneformer performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: nmi\n  Best score: 0.4666%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmony nmi", 
        "value": 0.645, 
        "severity": 0, 
        "severity_value": -0.645, 
        "code": "worst_score >= -1", 
        "message": "Method harmony performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: nmi\n  Worst score: 0.645%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmony nmi", 
        "value": 0.8292, 
        "severity": 0, 
        "severity_value": 0.4146, 
        "code": "best_score <= 2", 
        "message": "Method harmony performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: nmi\n  Best score: 0.8292%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmonypy nmi", 
        "value": 0.6785, 
        "severity": 0, 
        "severity_value": -0.6785, 
        "code": "worst_score >= -1", 
        "message": "Method harmonypy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: nmi\n  Worst score: 0.6785%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmonypy nmi", 
        "value": 0.8231, 
        "severity": 0, 
        "severity_value": 0.41155, 
        "code": "best_score <= 2", 
        "message": "Method harmonypy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: nmi\n  Best score: 0.8231%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score liger nmi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method liger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: nmi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score liger nmi", 
        "value": 0.7999, 
        "severity": 0, 
        "severity_value": 0.39995, 
        "code": "best_score <= 2", 
        "message": "Method liger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: nmi\n  Best score: 0.7999%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score mnnpy nmi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method mnnpy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: nmi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score mnnpy nmi", 
        "value": 0.2289, 
        "severity": 0, 
        "severity_value": 0.11445, 
        "code": "best_score <= 2", 
        "message": "Method mnnpy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: nmi\n  Best score: 0.2289%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score pyliger nmi", 
        "value": 0.6329, 
        "severity": 0, 
        "severity_value": -0.6329, 
        "code": "worst_score >= -1", 
        "message": "Method pyliger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: nmi\n  Worst score: 0.6329%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score pyliger nmi", 
        "value": 0.7615, 
        "severity": 0, 
        "severity_value": 0.38075, 
        "code": "best_score <= 2", 
        "message": "Method pyliger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: nmi\n  Best score: 0.7615%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scalex nmi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scalex performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: nmi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scalex nmi", 
        "value": 0.6987, 
        "severity": 0, 
        "severity_value": 0.34935, 
        "code": "best_score <= 2", 
        "message": "Method scalex performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: nmi\n  Best score: 0.6987%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanorama nmi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scanorama performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: nmi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanorama nmi", 
        "value": 0.225, 
        "severity": 0, 
        "severity_value": 0.1125, 
        "code": "best_score <= 2", 
        "message": "Method scanorama performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: nmi\n  Best score: 0.225%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanvi nmi", 
        "value": 0.6001, 
        "severity": 0, 
        "severity_value": -0.6001, 
        "code": "worst_score >= -1", 
        "message": "Method scanvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: nmi\n  Worst score: 0.6001%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanvi nmi", 
        "value": 0.8914, 
        "severity": 0, 
        "severity_value": 0.4457, 
        "code": "best_score <= 2", 
        "message": "Method scanvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: nmi\n  Best score: 0.8914%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scgpt nmi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scgpt performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt\n  Metric id: nmi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scgpt nmi", 
        "value": 0.7979, 
        "severity": 0, 
        "severity_value": 0.39895, 
        "code": "best_score <= 2", 
        "message": "Method scgpt performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt\n  Metric id: nmi\n  Best score: 0.7979%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scimilarity nmi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scimilarity performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: nmi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scimilarity nmi", 
        "value": 0.7974, 
        "severity": 0, 
        "severity_value": 0.3987, 
        "code": "best_score <= 2", 
        "message": "Method scimilarity performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: nmi\n  Best score: 0.7974%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scprint nmi", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scprint performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scprint\n  Metric id: nmi\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scprint nmi", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method scprint performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scprint\n  Metric id: nmi\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scvi nmi", 
        "value": 0.6024, 
        "severity": 0, 
        "severity_value": -0.6024, 
        "code": "worst_score >= -1", 
        "message": "Method scvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: nmi\n  Worst score: 0.6024%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scvi nmi", 
        "value": 0.8552, 
        "severity": 0, 
        "severity_value": 0.4276, 
        "code": "best_score <= 2", 
        "message": "Method scvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: nmi\n  Best score: 0.8552%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score uce nmi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method uce performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: nmi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score uce nmi", 
        "value": 0.7217, 
        "severity": 0, 
        "severity_value": 0.36085, 
        "code": "best_score <= 2", 
        "message": "Method uce performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: nmi\n  Best score: 0.7217%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types graph_connectivity", 
        "value": 1, 
        "severity": 0, 
        "severity_value": -1.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: graph_connectivity\n  Worst score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types graph_connectivity", 
        "value": 1, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: graph_connectivity\n  Best score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types_jittered graph_connectivity", 
        "value": 0.9966, 
        "severity": 0, 
        "severity_value": -0.9966, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types_jittered performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: graph_connectivity\n  Worst score: 0.9966%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types_jittered graph_connectivity", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types_jittered performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: graph_connectivity\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration graph_connectivity", 
        "value": 0.8771, 
        "severity": 0, 
        "severity_value": -0.8771, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: graph_connectivity\n  Worst score: 0.8771%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration graph_connectivity", 
        "value": 0.9758, 
        "severity": 0, 
        "severity_value": 0.4879, 
        "code": "best_score <= 2", 
        "message": "Method no_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: graph_connectivity\n  Best score: 0.9758%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration_batch graph_connectivity", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: graph_connectivity\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration_batch graph_connectivity", 
        "value": 0.8326, 
        "severity": 0, 
        "severity_value": 0.4163, 
        "code": "best_score <= 2", 
        "message": "Method no_integration_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: graph_connectivity\n  Best score: 0.8326%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration graph_connectivity", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: graph_connectivity\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration graph_connectivity", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: graph_connectivity\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_batch graph_connectivity", 
        "value": 0.003, 
        "severity": 0, 
        "severity_value": -0.003, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: graph_connectivity\n  Worst score: 0.003%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_batch graph_connectivity", 
        "value": 0.2019, 
        "severity": 0, 
        "severity_value": 0.10095, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: graph_connectivity\n  Best score: 0.2019%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_cell_type graph_connectivity", 
        "value": 0.8746, 
        "severity": 0, 
        "severity_value": -0.8746, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_cell_type performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: graph_connectivity\n  Worst score: 0.8746%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_cell_type graph_connectivity", 
        "value": 0.9751, 
        "severity": 0, 
        "severity_value": 0.48755, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_cell_type performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: graph_connectivity\n  Best score: 0.9751%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_fastmnn graph_connectivity", 
        "value": 0.8085, 
        "severity": 0, 
        "severity_value": -0.8085, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_fastmnn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: graph_connectivity\n  Worst score: 0.8085%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_fastmnn graph_connectivity", 
        "value": 0.9679, 
        "severity": 0, 
        "severity_value": 0.48395, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_fastmnn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: graph_connectivity\n  Best score: 0.9679%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_mnn_correct graph_connectivity", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_mnn_correct performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: graph_connectivity\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_mnn_correct graph_connectivity", 
        "value": 0.9596, 
        "severity": 0, 
        "severity_value": 0.4798, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_mnn_correct performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: graph_connectivity\n  Best score: 0.9596%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score bbknn graph_connectivity", 
        "value": 0.8456, 
        "severity": 0, 
        "severity_value": -0.8456, 
        "code": "worst_score >= -1", 
        "message": "Method bbknn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: graph_connectivity\n  Worst score: 0.8456%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score bbknn graph_connectivity", 
        "value": 0.9972, 
        "severity": 0, 
        "severity_value": 0.4986, 
        "code": "best_score <= 2", 
        "message": "Method bbknn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: graph_connectivity\n  Best score: 0.9972%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score combat graph_connectivity", 
        "value": 0.8761, 
        "severity": 0, 
        "severity_value": -0.8761, 
        "code": "worst_score >= -1", 
        "message": "Method combat performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: graph_connectivity\n  Worst score: 0.8761%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score combat graph_connectivity", 
        "value": 0.9669, 
        "severity": 0, 
        "severity_value": 0.48345, 
        "code": "best_score <= 2", 
        "message": "Method combat performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: graph_connectivity\n  Best score: 0.9669%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score geneformer graph_connectivity", 
        "value": -0.3144, 
        "severity": 0, 
        "severity_value": 0.3144, 
        "code": "worst_score >= -1", 
        "message": "Method geneformer performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: graph_connectivity\n  Worst score: -0.3144%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score geneformer graph_connectivity", 
        "value": 0.0828, 
        "severity": 0, 
        "severity_value": 0.0414, 
        "code": "best_score <= 2", 
        "message": "Method geneformer performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: graph_connectivity\n  Best score: 0.0828%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmony graph_connectivity", 
        "value": 0.8412, 
        "severity": 0, 
        "severity_value": -0.8412, 
        "code": "worst_score >= -1", 
        "message": "Method harmony performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: graph_connectivity\n  Worst score: 0.8412%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmony graph_connectivity", 
        "value": 0.9708, 
        "severity": 0, 
        "severity_value": 0.4854, 
        "code": "best_score <= 2", 
        "message": "Method harmony performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: graph_connectivity\n  Best score: 0.9708%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmonypy graph_connectivity", 
        "value": 0.8322, 
        "severity": 0, 
        "severity_value": -0.8322, 
        "code": "worst_score >= -1", 
        "message": "Method harmonypy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: graph_connectivity\n  Worst score: 0.8322%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmonypy graph_connectivity", 
        "value": 0.9695, 
        "severity": 0, 
        "severity_value": 0.48475, 
        "code": "best_score <= 2", 
        "message": "Method harmonypy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: graph_connectivity\n  Best score: 0.9695%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score liger graph_connectivity", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method liger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: graph_connectivity\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score liger graph_connectivity", 
        "value": 0.9506, 
        "severity": 0, 
        "severity_value": 0.4753, 
        "code": "best_score <= 2", 
        "message": "Method liger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: graph_connectivity\n  Best score: 0.9506%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score mnnpy graph_connectivity", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method mnnpy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: graph_connectivity\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score mnnpy graph_connectivity", 
        "value": 0.3955, 
        "severity": 0, 
        "severity_value": 0.19775, 
        "code": "best_score <= 2", 
        "message": "Method mnnpy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: graph_connectivity\n  Best score: 0.3955%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score pyliger graph_connectivity", 
        "value": 0.4956, 
        "severity": 0, 
        "severity_value": -0.4956, 
        "code": "worst_score >= -1", 
        "message": "Method pyliger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: graph_connectivity\n  Worst score: 0.4956%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score pyliger graph_connectivity", 
        "value": 0.9575, 
        "severity": 0, 
        "severity_value": 0.47875, 
        "code": "best_score <= 2", 
        "message": "Method pyliger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: graph_connectivity\n  Best score: 0.9575%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scalex graph_connectivity", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scalex performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: graph_connectivity\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scalex graph_connectivity", 
        "value": 0.9041, 
        "severity": 0, 
        "severity_value": 0.45205, 
        "code": "best_score <= 2", 
        "message": "Method scalex performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: graph_connectivity\n  Best score: 0.9041%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanorama graph_connectivity", 
        "value": -0.0124, 
        "severity": 0, 
        "severity_value": 0.0124, 
        "code": "worst_score >= -1", 
        "message": "Method scanorama performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: graph_connectivity\n  Worst score: -0.0124%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanorama graph_connectivity", 
        "value": 0.3953, 
        "severity": 0, 
        "severity_value": 0.19765, 
        "code": "best_score <= 2", 
        "message": "Method scanorama performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: graph_connectivity\n  Best score: 0.3953%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanvi graph_connectivity", 
        "value": 0.8696, 
        "severity": 0, 
        "severity_value": -0.8696, 
        "code": "worst_score >= -1", 
        "message": "Method scanvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: graph_connectivity\n  Worst score: 0.8696%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanvi graph_connectivity", 
        "value": 0.9929, 
        "severity": 0, 
        "severity_value": 0.49645, 
        "code": "best_score <= 2", 
        "message": "Method scanvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: graph_connectivity\n  Best score: 0.9929%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scgpt graph_connectivity", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scgpt performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt\n  Metric id: graph_connectivity\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scgpt graph_connectivity", 
        "value": 0.9693, 
        "severity": 0, 
        "severity_value": 0.48465, 
        "code": "best_score <= 2", 
        "message": "Method scgpt performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt\n  Metric id: graph_connectivity\n  Best score: 0.9693%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scimilarity graph_connectivity", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scimilarity performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: graph_connectivity\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scimilarity graph_connectivity", 
        "value": 0.9703, 
        "severity": 0, 
        "severity_value": 0.48515, 
        "code": "best_score <= 2", 
        "message": "Method scimilarity performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: graph_connectivity\n  Best score: 0.9703%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scprint graph_connectivity", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scprint performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scprint\n  Metric id: graph_connectivity\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scprint graph_connectivity", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method scprint performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scprint\n  Metric id: graph_connectivity\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scvi graph_connectivity", 
        "value": 0.8924, 
        "severity": 0, 
        "severity_value": -0.8924, 
        "code": "worst_score >= -1", 
        "message": "Method scvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: graph_connectivity\n  Worst score: 0.8924%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scvi graph_connectivity", 
        "value": 0.9806, 
        "severity": 0, 
        "severity_value": 0.4903, 
        "code": "best_score <= 2", 
        "message": "Method scvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: graph_connectivity\n  Best score: 0.9806%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score uce graph_connectivity", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method uce performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: graph_connectivity\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score uce graph_connectivity", 
        "value": 0.9495, 
        "severity": 0, 
        "severity_value": 0.47475, 
        "code": "best_score <= 2", 
        "message": "Method uce performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: graph_connectivity\n  Best score: 0.9495%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types_jittered hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types_jittered performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types_jittered hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types_jittered performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method no_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration_batch hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration_batch hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method no_integration_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_batch hvg_overlap", 
        "value": 1, 
        "severity": 0, 
        "severity_value": -1.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: hvg_overlap\n  Worst score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_batch hvg_overlap", 
        "value": 1, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: hvg_overlap\n  Best score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_cell_type hvg_overlap", 
        "value": 0.0767, 
        "severity": 0, 
        "severity_value": -0.0767, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_cell_type performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: hvg_overlap\n  Worst score: 0.0767%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_cell_type hvg_overlap", 
        "value": 0.2683, 
        "severity": 0, 
        "severity_value": 0.13415, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_cell_type performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: hvg_overlap\n  Best score: 0.2683%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_fastmnn hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_fastmnn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_fastmnn hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_fastmnn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_mnn_correct hvg_overlap", 
        "value": -0.6164, 
        "severity": 0, 
        "severity_value": 0.6164, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_mnn_correct performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: hvg_overlap\n  Worst score: -0.6164%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_mnn_correct hvg_overlap", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_mnn_correct performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: hvg_overlap\n  Best score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score bbknn hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method bbknn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score bbknn hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method bbknn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score combat hvg_overlap", 
        "value": 0.0496, 
        "severity": 0, 
        "severity_value": -0.0496, 
        "code": "worst_score >= -1", 
        "message": "Method combat performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: hvg_overlap\n  Worst score: 0.0496%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score combat hvg_overlap", 
        "value": 0.1139, 
        "severity": 0, 
        "severity_value": 0.05695, 
        "code": "best_score <= 2", 
        "message": "Method combat performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: hvg_overlap\n  Best score: 0.1139%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score geneformer hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method geneformer performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score geneformer hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method geneformer performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmony hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method harmony performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmony hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method harmony performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmonypy hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method harmonypy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmonypy hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method harmonypy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score liger hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method liger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score liger hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method liger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score mnnpy hvg_overlap", 
        "value": -0.6833, 
        "severity": 0, 
        "severity_value": 0.6833, 
        "code": "worst_score >= -1", 
        "message": "Method mnnpy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: hvg_overlap\n  Worst score: -0.6833%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score mnnpy hvg_overlap", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method mnnpy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: hvg_overlap\n  Best score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score pyliger hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method pyliger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score pyliger hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method pyliger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scalex hvg_overlap", 
        "value": -1.247, 
        "severity": 1, 
        "severity_value": 1.247, 
        "code": "worst_score >= -1", 
        "message": "Method scalex performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: hvg_overlap\n  Worst score: -1.247%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scalex hvg_overlap", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method scalex performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: hvg_overlap\n  Best score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanorama hvg_overlap", 
        "value": -1.5215, 
        "severity": 1, 
        "severity_value": 1.5215, 
        "code": "worst_score >= -1", 
        "message": "Method scanorama performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: hvg_overlap\n  Worst score: -1.5215%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanorama hvg_overlap", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method scanorama performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: hvg_overlap\n  Best score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanvi hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scanvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanvi hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method scanvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scgpt hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scgpt performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scgpt hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method scgpt performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scimilarity hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scimilarity performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scimilarity hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method scimilarity performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scprint hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scprint performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scprint\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scprint hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method scprint performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scprint\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scvi hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scvi hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method scvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score uce hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method uce performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: hvg_overlap\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score uce hvg_overlap", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method uce performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: hvg_overlap\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types isolated_label_asw", 
        "value": 0.9996, 
        "severity": 0, 
        "severity_value": -0.9996, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: isolated_label_asw\n  Worst score: 0.9996%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types isolated_label_asw", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: isolated_label_asw\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types_jittered isolated_label_asw", 
        "value": 0.9994, 
        "severity": 0, 
        "severity_value": -0.9994, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types_jittered performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: isolated_label_asw\n  Worst score: 0.9994%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types_jittered isolated_label_asw", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types_jittered performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: isolated_label_asw\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration isolated_label_asw", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: isolated_label_asw\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration isolated_label_asw", 
        "value": 0.6459, 
        "severity": 0, 
        "severity_value": 0.32295, 
        "code": "best_score <= 2", 
        "message": "Method no_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: isolated_label_asw\n  Best score: 0.6459%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration_batch isolated_label_asw", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: isolated_label_asw\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration_batch isolated_label_asw", 
        "value": 0.3908, 
        "severity": 0, 
        "severity_value": 0.1954, 
        "code": "best_score <= 2", 
        "message": "Method no_integration_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: isolated_label_asw\n  Best score: 0.3908%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration isolated_label_asw", 
        "value": 0.0222, 
        "severity": 0, 
        "severity_value": -0.0222, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: isolated_label_asw\n  Worst score: 0.0222%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration isolated_label_asw", 
        "value": 0.2253, 
        "severity": 0, 
        "severity_value": 0.11265, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: isolated_label_asw\n  Best score: 0.2253%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_batch isolated_label_asw", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: isolated_label_asw\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_batch isolated_label_asw", 
        "value": 0.2304, 
        "severity": 0, 
        "severity_value": 0.1152, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: isolated_label_asw\n  Best score: 0.2304%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_cell_type isolated_label_asw", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_cell_type performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: isolated_label_asw\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_cell_type isolated_label_asw", 
        "value": 0.6459, 
        "severity": 0, 
        "severity_value": 0.32295, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_cell_type performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: isolated_label_asw\n  Best score: 0.6459%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_fastmnn isolated_label_asw", 
        "value": -0.0998, 
        "severity": 0, 
        "severity_value": 0.0998, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_fastmnn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: isolated_label_asw\n  Worst score: -0.0998%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_fastmnn isolated_label_asw", 
        "value": 0.6401, 
        "severity": 0, 
        "severity_value": 0.32005, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_fastmnn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: isolated_label_asw\n  Best score: 0.6401%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_mnn_correct isolated_label_asw", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_mnn_correct performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: isolated_label_asw\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_mnn_correct isolated_label_asw", 
        "value": 0.3688, 
        "severity": 0, 
        "severity_value": 0.1844, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_mnn_correct performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: isolated_label_asw\n  Best score: 0.3688%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score bbknn isolated_label_asw", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method bbknn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: isolated_label_asw\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score bbknn isolated_label_asw", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method bbknn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: isolated_label_asw\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score combat isolated_label_asw", 
        "value": 0.0018, 
        "severity": 0, 
        "severity_value": -0.0018, 
        "code": "worst_score >= -1", 
        "message": "Method combat performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: isolated_label_asw\n  Worst score: 0.0018%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score combat isolated_label_asw", 
        "value": 0.4662, 
        "severity": 0, 
        "severity_value": 0.2331, 
        "code": "best_score <= 2", 
        "message": "Method combat performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: isolated_label_asw\n  Best score: 0.4662%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score geneformer isolated_label_asw", 
        "value": -0.3878, 
        "severity": 0, 
        "severity_value": 0.3878, 
        "code": "worst_score >= -1", 
        "message": "Method geneformer performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: isolated_label_asw\n  Worst score: -0.3878%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score geneformer isolated_label_asw", 
        "value": 0.4118, 
        "severity": 0, 
        "severity_value": 0.2059, 
        "code": "best_score <= 2", 
        "message": "Method geneformer performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: isolated_label_asw\n  Best score: 0.4118%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmony isolated_label_asw", 
        "value": -0.0086, 
        "severity": 0, 
        "severity_value": 0.0086, 
        "code": "worst_score >= -1", 
        "message": "Method harmony performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: isolated_label_asw\n  Worst score: -0.0086%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmony isolated_label_asw", 
        "value": 0.5439, 
        "severity": 0, 
        "severity_value": 0.27195, 
        "code": "best_score <= 2", 
        "message": "Method harmony performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: isolated_label_asw\n  Best score: 0.5439%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmonypy isolated_label_asw", 
        "value": -0.016, 
        "severity": 0, 
        "severity_value": 0.016, 
        "code": "worst_score >= -1", 
        "message": "Method harmonypy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: isolated_label_asw\n  Worst score: -0.016%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmonypy isolated_label_asw", 
        "value": 0.5261, 
        "severity": 0, 
        "severity_value": 0.26305, 
        "code": "best_score <= 2", 
        "message": "Method harmonypy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: isolated_label_asw\n  Best score: 0.5261%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score liger isolated_label_asw", 
        "value": -0.1994, 
        "severity": 0, 
        "severity_value": 0.1994, 
        "code": "worst_score >= -1", 
        "message": "Method liger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: isolated_label_asw\n  Worst score: -0.1994%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score liger isolated_label_asw", 
        "value": 0.3926, 
        "severity": 0, 
        "severity_value": 0.1963, 
        "code": "best_score <= 2", 
        "message": "Method liger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: isolated_label_asw\n  Best score: 0.3926%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score mnnpy isolated_label_asw", 
        "value": -0.0035, 
        "severity": 0, 
        "severity_value": 0.0035, 
        "code": "worst_score >= -1", 
        "message": "Method mnnpy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: isolated_label_asw\n  Worst score: -0.0035%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score mnnpy isolated_label_asw", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method mnnpy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: isolated_label_asw\n  Best score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score pyliger isolated_label_asw", 
        "value": -0.1034, 
        "severity": 0, 
        "severity_value": 0.1034, 
        "code": "worst_score >= -1", 
        "message": "Method pyliger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: isolated_label_asw\n  Worst score: -0.1034%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score pyliger isolated_label_asw", 
        "value": 0.3958, 
        "severity": 0, 
        "severity_value": 0.1979, 
        "code": "best_score <= 2", 
        "message": "Method pyliger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: isolated_label_asw\n  Best score: 0.3958%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scalex isolated_label_asw", 
        "value": -0.1204, 
        "severity": 0, 
        "severity_value": 0.1204, 
        "code": "worst_score >= -1", 
        "message": "Method scalex performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: isolated_label_asw\n  Worst score: -0.1204%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scalex isolated_label_asw", 
        "value": 0.241, 
        "severity": 0, 
        "severity_value": 0.1205, 
        "code": "best_score <= 2", 
        "message": "Method scalex performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: isolated_label_asw\n  Best score: 0.241%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanorama isolated_label_asw", 
        "value": -0.0062, 
        "severity": 0, 
        "severity_value": 0.0062, 
        "code": "worst_score >= -1", 
        "message": "Method scanorama performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: isolated_label_asw\n  Worst score: -0.0062%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanorama isolated_label_asw", 
        "value": 0.1952, 
        "severity": 0, 
        "severity_value": 0.0976, 
        "code": "best_score <= 2", 
        "message": "Method scanorama performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: isolated_label_asw\n  Best score: 0.1952%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanvi isolated_label_asw", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scanvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: isolated_label_asw\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanvi isolated_label_asw", 
        "value": 0.5684, 
        "severity": 0, 
        "severity_value": 0.2842, 
        "code": "best_score <= 2", 
        "message": "Method scanvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: isolated_label_asw\n  Best score: 0.5684%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scgpt isolated_label_asw", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scgpt performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt\n  Metric id: isolated_label_asw\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scgpt isolated_label_asw", 
        "value": 0.2484, 
        "severity": 0, 
        "severity_value": 0.1242, 
        "code": "best_score <= 2", 
        "message": "Method scgpt performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt\n  Metric id: isolated_label_asw\n  Best score: 0.2484%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scimilarity isolated_label_asw", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scimilarity performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: isolated_label_asw\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scimilarity isolated_label_asw", 
        "value": 0.3896, 
        "severity": 0, 
        "severity_value": 0.1948, 
        "code": "best_score <= 2", 
        "message": "Method scimilarity performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: isolated_label_asw\n  Best score: 0.3896%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scprint isolated_label_asw", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scprint performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scprint\n  Metric id: isolated_label_asw\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scprint isolated_label_asw", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method scprint performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scprint\n  Metric id: isolated_label_asw\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scvi isolated_label_asw", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: isolated_label_asw\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scvi isolated_label_asw", 
        "value": 0.5033, 
        "severity": 0, 
        "severity_value": 0.25165, 
        "code": "best_score <= 2", 
        "message": "Method scvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: isolated_label_asw\n  Best score: 0.5033%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score uce isolated_label_asw", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method uce performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: isolated_label_asw\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score uce isolated_label_asw", 
        "value": 0.1542, 
        "severity": 0, 
        "severity_value": 0.0771, 
        "code": "best_score <= 2", 
        "message": "Method uce performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: isolated_label_asw\n  Best score: 0.1542%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types isolated_label_f1", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: isolated_label_f1\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types isolated_label_f1", 
        "value": 1, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: isolated_label_f1\n  Best score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types_jittered isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types_jittered performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types_jittered isolated_label_f1", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types_jittered performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: isolated_label_f1\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration isolated_label_f1", 
        "value": 0.8922, 
        "severity": 0, 
        "severity_value": 0.4461, 
        "code": "best_score <= 2", 
        "message": "Method no_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: isolated_label_f1\n  Best score: 0.8922%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration_batch isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration_batch isolated_label_f1", 
        "value": 0.1702, 
        "severity": 0, 
        "severity_value": 0.0851, 
        "code": "best_score <= 2", 
        "message": "Method no_integration_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: isolated_label_f1\n  Best score: 0.1702%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration isolated_label_f1", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: isolated_label_f1\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration isolated_label_f1", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: isolated_label_f1\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_batch isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_batch isolated_label_f1", 
        "value": 0.0075, 
        "severity": 0, 
        "severity_value": 0.00375, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: isolated_label_f1\n  Best score: 0.0075%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_cell_type isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_cell_type performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_cell_type isolated_label_f1", 
        "value": 0.893, 
        "severity": 0, 
        "severity_value": 0.4465, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_cell_type performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: isolated_label_f1\n  Best score: 0.893%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_fastmnn isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_fastmnn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_fastmnn isolated_label_f1", 
        "value": 0.8456, 
        "severity": 0, 
        "severity_value": 0.4228, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_fastmnn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: isolated_label_f1\n  Best score: 0.8456%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_mnn_correct isolated_label_f1", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_mnn_correct performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: isolated_label_f1\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_mnn_correct isolated_label_f1", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_mnn_correct performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: isolated_label_f1\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score bbknn isolated_label_f1", 
        "value": -0.0007, 
        "severity": 0, 
        "severity_value": 0.0007, 
        "code": "worst_score >= -1", 
        "message": "Method bbknn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: isolated_label_f1\n  Worst score: -0.0007%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score bbknn isolated_label_f1", 
        "value": 0.0731, 
        "severity": 0, 
        "severity_value": 0.03655, 
        "code": "best_score <= 2", 
        "message": "Method bbknn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: isolated_label_f1\n  Best score: 0.0731%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score combat isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method combat performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score combat isolated_label_f1", 
        "value": 0.7861, 
        "severity": 0, 
        "severity_value": 0.39305, 
        "code": "best_score <= 2", 
        "message": "Method combat performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: isolated_label_f1\n  Best score: 0.7861%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score geneformer isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method geneformer performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score geneformer isolated_label_f1", 
        "value": 0.0985, 
        "severity": 0, 
        "severity_value": 0.04925, 
        "code": "best_score <= 2", 
        "message": "Method geneformer performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: isolated_label_f1\n  Best score: 0.0985%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmony isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method harmony performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmony isolated_label_f1", 
        "value": 0.0805, 
        "severity": 0, 
        "severity_value": 0.04025, 
        "code": "best_score <= 2", 
        "message": "Method harmony performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: isolated_label_f1\n  Best score: 0.0805%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmonypy isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method harmonypy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmonypy isolated_label_f1", 
        "value": 0.084, 
        "severity": 0, 
        "severity_value": 0.042, 
        "code": "best_score <= 2", 
        "message": "Method harmonypy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: isolated_label_f1\n  Best score: 0.084%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score liger isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method liger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score liger isolated_label_f1", 
        "value": 0.1189, 
        "severity": 0, 
        "severity_value": 0.05945, 
        "code": "best_score <= 2", 
        "message": "Method liger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: isolated_label_f1\n  Best score: 0.1189%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score mnnpy isolated_label_f1", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method mnnpy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: isolated_label_f1\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score mnnpy isolated_label_f1", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method mnnpy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: isolated_label_f1\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score pyliger isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method pyliger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score pyliger isolated_label_f1", 
        "value": 0.1259, 
        "severity": 0, 
        "severity_value": 0.06295, 
        "code": "best_score <= 2", 
        "message": "Method pyliger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: isolated_label_f1\n  Best score: 0.1259%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scalex isolated_label_f1", 
        "value": -0.0007, 
        "severity": 0, 
        "severity_value": 0.0007, 
        "code": "worst_score >= -1", 
        "message": "Method scalex performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: isolated_label_f1\n  Worst score: -0.0007%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scalex isolated_label_f1", 
        "value": 0.0235, 
        "severity": 0, 
        "severity_value": 0.01175, 
        "code": "best_score <= 2", 
        "message": "Method scalex performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: isolated_label_f1\n  Best score: 0.0235%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanorama isolated_label_f1", 
        "value": -0.0006, 
        "severity": 0, 
        "severity_value": 0.0006, 
        "code": "worst_score >= -1", 
        "message": "Method scanorama performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: isolated_label_f1\n  Worst score: -0.0006%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanorama isolated_label_f1", 
        "value": 0.0072, 
        "severity": 0, 
        "severity_value": 0.0036, 
        "code": "best_score <= 2", 
        "message": "Method scanorama performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: isolated_label_f1\n  Best score: 0.0072%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanvi isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scanvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanvi isolated_label_f1", 
        "value": 0.9587, 
        "severity": 0, 
        "severity_value": 0.47935, 
        "code": "best_score <= 2", 
        "message": "Method scanvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: isolated_label_f1\n  Best score: 0.9587%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scgpt isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scgpt performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scgpt isolated_label_f1", 
        "value": 0.1643, 
        "severity": 0, 
        "severity_value": 0.08215, 
        "code": "best_score <= 2", 
        "message": "Method scgpt performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt\n  Metric id: isolated_label_f1\n  Best score: 0.1643%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scimilarity isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scimilarity performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scimilarity isolated_label_f1", 
        "value": 0.842, 
        "severity": 0, 
        "severity_value": 0.421, 
        "code": "best_score <= 2", 
        "message": "Method scimilarity performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: isolated_label_f1\n  Best score: 0.842%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scprint isolated_label_f1", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scprint performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scprint\n  Metric id: isolated_label_f1\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scprint isolated_label_f1", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method scprint performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scprint\n  Metric id: isolated_label_f1\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scvi isolated_label_f1", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: isolated_label_f1\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scvi isolated_label_f1", 
        "value": 0.9094, 
        "severity": 0, 
        "severity_value": 0.4547, 
        "code": "best_score <= 2", 
        "message": "Method scvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: isolated_label_f1\n  Best score: 0.9094%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score uce isolated_label_f1", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method uce performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: isolated_label_f1\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score uce isolated_label_f1", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method uce performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: isolated_label_f1\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types kbet", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: kbet\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types_jittered kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types_jittered performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types_jittered kbet", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types_jittered performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: kbet\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration kbet", 
        "value": 0.3269, 
        "severity": 0, 
        "severity_value": 0.16345, 
        "code": "best_score <= 2", 
        "message": "Method no_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: kbet\n  Best score: 0.3269%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration_batch kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration_batch kbet", 
        "value": 0.2264, 
        "severity": 0, 
        "severity_value": 0.1132, 
        "code": "best_score <= 2", 
        "message": "Method no_integration_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: kbet\n  Best score: 0.2264%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration kbet", 
        "value": 0.3657, 
        "severity": 0, 
        "severity_value": 0.18285, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: kbet\n  Best score: 0.3657%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_batch kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_batch kbet", 
        "value": 0.0511, 
        "severity": 0, 
        "severity_value": 0.02555, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: kbet\n  Best score: 0.0511%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_cell_type kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_cell_type performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_cell_type kbet", 
        "value": 0.996, 
        "severity": 0, 
        "severity_value": 0.498, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_cell_type performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: kbet\n  Best score: 0.996%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_fastmnn kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_fastmnn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_fastmnn kbet", 
        "value": 0.4208, 
        "severity": 0, 
        "severity_value": 0.2104, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_fastmnn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: kbet\n  Best score: 0.4208%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_mnn_correct kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_mnn_correct performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_mnn_correct kbet", 
        "value": 0.2521, 
        "severity": 0, 
        "severity_value": 0.12605, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_mnn_correct performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: kbet\n  Best score: 0.2521%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score bbknn kbet", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method bbknn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: kbet\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score bbknn kbet", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method bbknn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: kbet\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score combat kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method combat performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score combat kbet", 
        "value": 0.2956, 
        "severity": 0, 
        "severity_value": 0.1478, 
        "code": "best_score <= 2", 
        "message": "Method combat performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: kbet\n  Best score: 0.2956%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score geneformer kbet", 
        "value": -0.1301, 
        "severity": 0, 
        "severity_value": 0.1301, 
        "code": "worst_score >= -1", 
        "message": "Method geneformer performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: kbet\n  Worst score: -0.1301%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score geneformer kbet", 
        "value": 0.0547, 
        "severity": 0, 
        "severity_value": 0.02735, 
        "code": "best_score <= 2", 
        "message": "Method geneformer performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: kbet\n  Best score: 0.0547%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmony kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method harmony performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmony kbet", 
        "value": 0.4373, 
        "severity": 0, 
        "severity_value": 0.21865, 
        "code": "best_score <= 2", 
        "message": "Method harmony performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: kbet\n  Best score: 0.4373%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmonypy kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method harmonypy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmonypy kbet", 
        "value": 0.4334, 
        "severity": 0, 
        "severity_value": 0.2167, 
        "code": "best_score <= 2", 
        "message": "Method harmonypy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: kbet\n  Best score: 0.4334%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score liger kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method liger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score liger kbet", 
        "value": 0.7872, 
        "severity": 0, 
        "severity_value": 0.3936, 
        "code": "best_score <= 2", 
        "message": "Method liger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: kbet\n  Best score: 0.7872%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score mnnpy kbet", 
        "value": -0.0096, 
        "severity": 0, 
        "severity_value": 0.0096, 
        "code": "worst_score >= -1", 
        "message": "Method mnnpy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: kbet\n  Worst score: -0.0096%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score mnnpy kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method mnnpy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: kbet\n  Best score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score pyliger kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method pyliger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score pyliger kbet", 
        "value": 0.8043, 
        "severity": 0, 
        "severity_value": 0.40215, 
        "code": "best_score <= 2", 
        "message": "Method pyliger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: kbet\n  Best score: 0.8043%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scalex kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scalex performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scalex kbet", 
        "value": 0.3294, 
        "severity": 0, 
        "severity_value": 0.1647, 
        "code": "best_score <= 2", 
        "message": "Method scalex performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: kbet\n  Best score: 0.3294%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanorama kbet", 
        "value": -0.1132, 
        "severity": 0, 
        "severity_value": 0.1132, 
        "code": "worst_score >= -1", 
        "message": "Method scanorama performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: kbet\n  Worst score: -0.1132%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanorama kbet", 
        "value": 0.0222, 
        "severity": 0, 
        "severity_value": 0.0111, 
        "code": "best_score <= 2", 
        "message": "Method scanorama performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: kbet\n  Best score: 0.0222%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanvi kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scanvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanvi kbet", 
        "value": 0.3877, 
        "severity": 0, 
        "severity_value": 0.19385, 
        "code": "best_score <= 2", 
        "message": "Method scanvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: kbet\n  Best score: 0.3877%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scgpt kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scgpt performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scgpt kbet", 
        "value": 0.3653, 
        "severity": 0, 
        "severity_value": 0.18265, 
        "code": "best_score <= 2", 
        "message": "Method scgpt performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt\n  Metric id: kbet\n  Best score: 0.3653%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scimilarity kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scimilarity performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scimilarity kbet", 
        "value": 0.3703, 
        "severity": 0, 
        "severity_value": 0.18515, 
        "code": "best_score <= 2", 
        "message": "Method scimilarity performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: kbet\n  Best score: 0.3703%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scprint kbet", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scprint performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scprint\n  Metric id: kbet\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scprint kbet", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method scprint performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scprint\n  Metric id: kbet\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scvi kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scvi kbet", 
        "value": 0.3615, 
        "severity": 0, 
        "severity_value": 0.18075, 
        "code": "best_score <= 2", 
        "message": "Method scvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: kbet\n  Best score: 0.3615%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score uce kbet", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method uce performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: kbet\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score uce kbet", 
        "value": 0.2216, 
        "severity": 0, 
        "severity_value": 0.1108, 
        "code": "best_score <= 2", 
        "message": "Method uce performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: kbet\n  Best score: 0.2216%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types ilisi", 
        "value": 0.3068, 
        "severity": 0, 
        "severity_value": -0.3068, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: ilisi\n  Worst score: 0.3068%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types ilisi", 
        "value": 0.9436, 
        "severity": 0, 
        "severity_value": 0.4718, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: ilisi\n  Best score: 0.9436%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types_jittered ilisi", 
        "value": 0.3068, 
        "severity": 0, 
        "severity_value": -0.3068, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types_jittered performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: ilisi\n  Worst score: 0.3068%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types_jittered ilisi", 
        "value": 0.9412, 
        "severity": 0, 
        "severity_value": 0.4706, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types_jittered performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: ilisi\n  Best score: 0.9412%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration ilisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: ilisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration ilisi", 
        "value": 0.1445, 
        "severity": 0, 
        "severity_value": 0.07225, 
        "code": "best_score <= 2", 
        "message": "Method no_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: ilisi\n  Best score: 0.1445%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration_batch ilisi", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: ilisi\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration_batch ilisi", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method no_integration_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: ilisi\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration ilisi", 
        "value": 1, 
        "severity": 0, 
        "severity_value": -1.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: ilisi\n  Worst score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration ilisi", 
        "value": 1, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: ilisi\n  Best score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_batch ilisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: ilisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_batch ilisi", 
        "value": 0.1454, 
        "severity": 0, 
        "severity_value": 0.0727, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: ilisi\n  Best score: 0.1454%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_cell_type ilisi", 
        "value": 0.335, 
        "severity": 0, 
        "severity_value": -0.335, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_cell_type performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: ilisi\n  Worst score: 0.335%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_cell_type ilisi", 
        "value": 0.9229, 
        "severity": 0, 
        "severity_value": 0.46145, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_cell_type performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: ilisi\n  Best score: 0.9229%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_fastmnn ilisi", 
        "value": 0.1057, 
        "severity": 0, 
        "severity_value": -0.1057, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_fastmnn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: ilisi\n  Worst score: 0.1057%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_fastmnn ilisi", 
        "value": 0.5621, 
        "severity": 0, 
        "severity_value": 0.28105, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_fastmnn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: ilisi\n  Best score: 0.5621%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_mnn_correct ilisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_mnn_correct performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: ilisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_mnn_correct ilisi", 
        "value": 0.6006, 
        "severity": 0, 
        "severity_value": 0.3003, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_mnn_correct performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: ilisi\n  Best score: 0.6006%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score bbknn ilisi", 
        "value": 0.7215, 
        "severity": 0, 
        "severity_value": -0.7215, 
        "code": "worst_score >= -1", 
        "message": "Method bbknn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: ilisi\n  Worst score: 0.7215%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score bbknn ilisi", 
        "value": 35.6399, 
        "severity": 3, 
        "severity_value": 17.81995, 
        "code": "best_score <= 2", 
        "message": "Method bbknn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: ilisi\n  Best score: 35.6399%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score combat ilisi", 
        "value": -0.0679, 
        "severity": 0, 
        "severity_value": 0.0679, 
        "code": "worst_score >= -1", 
        "message": "Method combat performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: ilisi\n  Worst score: -0.0679%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score combat ilisi", 
        "value": 0.3343, 
        "severity": 0, 
        "severity_value": 0.16715, 
        "code": "best_score <= 2", 
        "message": "Method combat performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: ilisi\n  Best score: 0.3343%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score geneformer ilisi", 
        "value": -0.1149, 
        "severity": 0, 
        "severity_value": 0.1149, 
        "code": "worst_score >= -1", 
        "message": "Method geneformer performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: ilisi\n  Worst score: -0.1149%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score geneformer ilisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method geneformer performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: ilisi\n  Best score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmony ilisi", 
        "value": 0.1272, 
        "severity": 0, 
        "severity_value": -0.1272, 
        "code": "worst_score >= -1", 
        "message": "Method harmony performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: ilisi\n  Worst score: 0.1272%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmony ilisi", 
        "value": 0.6914, 
        "severity": 0, 
        "severity_value": 0.3457, 
        "code": "best_score <= 2", 
        "message": "Method harmony performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: ilisi\n  Best score: 0.6914%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmonypy ilisi", 
        "value": 0.1378, 
        "severity": 0, 
        "severity_value": -0.1378, 
        "code": "worst_score >= -1", 
        "message": "Method harmonypy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: ilisi\n  Worst score: 0.1378%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmonypy ilisi", 
        "value": 0.6934, 
        "severity": 0, 
        "severity_value": 0.3467, 
        "code": "best_score <= 2", 
        "message": "Method harmonypy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: ilisi\n  Best score: 0.6934%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score liger ilisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method liger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: ilisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score liger ilisi", 
        "value": 0.8842, 
        "severity": 0, 
        "severity_value": 0.4421, 
        "code": "best_score <= 2", 
        "message": "Method liger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: ilisi\n  Best score: 0.8842%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score mnnpy ilisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method mnnpy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: ilisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score mnnpy ilisi", 
        "value": 0.3546, 
        "severity": 0, 
        "severity_value": 0.1773, 
        "code": "best_score <= 2", 
        "message": "Method mnnpy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: ilisi\n  Best score: 0.3546%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score pyliger ilisi", 
        "value": 0.4627, 
        "severity": 0, 
        "severity_value": -0.4627, 
        "code": "worst_score >= -1", 
        "message": "Method pyliger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: ilisi\n  Worst score: 0.4627%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score pyliger ilisi", 
        "value": 0.8868, 
        "severity": 0, 
        "severity_value": 0.4434, 
        "code": "best_score <= 2", 
        "message": "Method pyliger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: ilisi\n  Best score: 0.8868%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scalex ilisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scalex performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: ilisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scalex ilisi", 
        "value": 0.6441, 
        "severity": 0, 
        "severity_value": 0.32205, 
        "code": "best_score <= 2", 
        "message": "Method scalex performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: ilisi\n  Best score: 0.6441%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanorama ilisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scanorama performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: ilisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanorama ilisi", 
        "value": 0.9714, 
        "severity": 0, 
        "severity_value": 0.4857, 
        "code": "best_score <= 2", 
        "message": "Method scanorama performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: ilisi\n  Best score: 0.9714%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanvi ilisi", 
        "value": 3.7928e-15, 
        "severity": 0, 
        "severity_value": -3.7928e-15, 
        "code": "worst_score >= -1", 
        "message": "Method scanvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: ilisi\n  Worst score: 3.7928e-15%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanvi ilisi", 
        "value": 0.6572, 
        "severity": 0, 
        "severity_value": 0.3286, 
        "code": "best_score <= 2", 
        "message": "Method scanvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: ilisi\n  Best score: 0.6572%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scgpt ilisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scgpt performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt\n  Metric id: ilisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scgpt ilisi", 
        "value": 0.4733, 
        "severity": 0, 
        "severity_value": 0.23665, 
        "code": "best_score <= 2", 
        "message": "Method scgpt performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt\n  Metric id: ilisi\n  Best score: 0.4733%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scimilarity ilisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scimilarity performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: ilisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scimilarity ilisi", 
        "value": 0.4734, 
        "severity": 0, 
        "severity_value": 0.2367, 
        "code": "best_score <= 2", 
        "message": "Method scimilarity performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: ilisi\n  Best score: 0.4734%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scprint ilisi", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scprint performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scprint\n  Metric id: ilisi\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scprint ilisi", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method scprint performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scprint\n  Metric id: ilisi\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scvi ilisi", 
        "value": 3.7928e-15, 
        "severity": 0, 
        "severity_value": -3.7928e-15, 
        "code": "worst_score >= -1", 
        "message": "Method scvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: ilisi\n  Worst score: 3.7928e-15%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scvi ilisi", 
        "value": 0.6456, 
        "severity": 0, 
        "severity_value": 0.3228, 
        "code": "best_score <= 2", 
        "message": "Method scvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: ilisi\n  Best score: 0.6456%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score uce ilisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method uce performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: ilisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score uce ilisi", 
        "value": 0.4609, 
        "severity": 0, 
        "severity_value": 0.23045, 
        "code": "best_score <= 2", 
        "message": "Method uce performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: ilisi\n  Best score: 0.4609%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types clisi", 
        "value": 1, 
        "severity": 0, 
        "severity_value": -1.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: clisi\n  Worst score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types clisi", 
        "value": 1, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: clisi\n  Best score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types_jittered clisi", 
        "value": 1, 
        "severity": 0, 
        "severity_value": -1.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types_jittered performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: clisi\n  Worst score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types_jittered clisi", 
        "value": 1, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types_jittered performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: clisi\n  Best score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration clisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: clisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration clisi", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method no_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: clisi\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration_batch clisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: clisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration_batch clisi", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method no_integration_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: clisi\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration clisi", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: clisi\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration clisi", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: clisi\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_batch clisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: clisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_batch clisi", 
        "value": 0.4289, 
        "severity": 0, 
        "severity_value": 0.21445, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: clisi\n  Best score: 0.4289%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_cell_type clisi", 
        "value": 0.9787, 
        "severity": 0, 
        "severity_value": -0.9787, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_cell_type performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: clisi\n  Worst score: 0.9787%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_cell_type clisi", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_cell_type performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: clisi\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_fastmnn clisi", 
        "value": 0.9546, 
        "severity": 0, 
        "severity_value": -0.9546, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_fastmnn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: clisi\n  Worst score: 0.9546%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_fastmnn clisi", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_fastmnn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: clisi\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_mnn_correct clisi", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_mnn_correct performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: clisi\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_mnn_correct clisi", 
        "value": 1, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_mnn_correct performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: clisi\n  Best score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score bbknn clisi", 
        "value": 0.4005, 
        "severity": 0, 
        "severity_value": -0.4005, 
        "code": "worst_score >= -1", 
        "message": "Method bbknn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: clisi\n  Worst score: 0.4005%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score bbknn clisi", 
        "value": 0.9911, 
        "severity": 0, 
        "severity_value": 0.49555, 
        "code": "best_score <= 2", 
        "message": "Method bbknn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: clisi\n  Best score: 0.9911%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score combat clisi", 
        "value": 0.9765, 
        "severity": 0, 
        "severity_value": -0.9765, 
        "code": "worst_score >= -1", 
        "message": "Method combat performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: clisi\n  Worst score: 0.9765%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score combat clisi", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method combat performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: clisi\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score geneformer clisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method geneformer performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: clisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score geneformer clisi", 
        "value": 0.7596, 
        "severity": 0, 
        "severity_value": 0.3798, 
        "code": "best_score <= 2", 
        "message": "Method geneformer performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: clisi\n  Best score: 0.7596%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmony clisi", 
        "value": 0.956, 
        "severity": 0, 
        "severity_value": -0.956, 
        "code": "worst_score >= -1", 
        "message": "Method harmony performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: clisi\n  Worst score: 0.956%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmony clisi", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method harmony performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: clisi\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmonypy clisi", 
        "value": 0.954, 
        "severity": 0, 
        "severity_value": -0.954, 
        "code": "worst_score >= -1", 
        "message": "Method harmonypy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: clisi\n  Worst score: 0.954%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmonypy clisi", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method harmonypy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: clisi\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score liger clisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method liger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: clisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score liger clisi", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method liger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: clisi\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score mnnpy clisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method mnnpy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: clisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score mnnpy clisi", 
        "value": 0.5924, 
        "severity": 0, 
        "severity_value": 0.2962, 
        "code": "best_score <= 2", 
        "message": "Method mnnpy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: clisi\n  Best score: 0.5924%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score pyliger clisi", 
        "value": 0.8535, 
        "severity": 0, 
        "severity_value": -0.8535, 
        "code": "worst_score >= -1", 
        "message": "Method pyliger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: clisi\n  Worst score: 0.8535%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score pyliger clisi", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method pyliger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: clisi\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scalex clisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scalex performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: clisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scalex clisi", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method scalex performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: clisi\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanorama clisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scanorama performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: clisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanorama clisi", 
        "value": 0.5735, 
        "severity": 0, 
        "severity_value": 0.28675, 
        "code": "best_score <= 2", 
        "message": "Method scanorama performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: clisi\n  Best score: 0.5735%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanvi clisi", 
        "value": 0.9983, 
        "severity": 0, 
        "severity_value": -0.9983, 
        "code": "worst_score >= -1", 
        "message": "Method scanvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: clisi\n  Worst score: 0.9983%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanvi clisi", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method scanvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: clisi\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scgpt clisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scgpt performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt\n  Metric id: clisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scgpt clisi", 
        "value": 0.9975, 
        "severity": 0, 
        "severity_value": 0.49875, 
        "code": "best_score <= 2", 
        "message": "Method scgpt performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt\n  Metric id: clisi\n  Best score: 0.9975%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scimilarity clisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scimilarity performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: clisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scimilarity clisi", 
        "value": 0.9989, 
        "severity": 0, 
        "severity_value": 0.49945, 
        "code": "best_score <= 2", 
        "message": "Method scimilarity performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: clisi\n  Best score: 0.9989%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scprint clisi", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scprint performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scprint\n  Metric id: clisi\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scprint clisi", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method scprint performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scprint\n  Metric id: clisi\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scvi clisi", 
        "value": 0.9849, 
        "severity": 0, 
        "severity_value": -0.9849, 
        "code": "worst_score >= -1", 
        "message": "Method scvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: clisi\n  Worst score: 0.9849%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scvi clisi", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method scvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: clisi\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score uce clisi", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method uce performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: clisi\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score uce clisi", 
        "value": 0.9953, 
        "severity": 0, 
        "severity_value": 0.49765, 
        "code": "best_score <= 2", 
        "message": "Method uce performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: clisi\n  Best score: 0.9953%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types pcr", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: pcr\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types pcr", 
        "value": 0.7116, 
        "severity": 0, 
        "severity_value": 0.3558, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types\n  Metric id: pcr\n  Best score: 0.7116%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score embed_cell_types_jittered pcr", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method embed_cell_types_jittered performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: pcr\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score embed_cell_types_jittered pcr", 
        "value": 0.7116, 
        "severity": 0, 
        "severity_value": 0.3558, 
        "code": "best_score <= 2", 
        "message": "Method embed_cell_types_jittered performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: embed_cell_types_jittered\n  Metric id: pcr\n  Best score: 0.7116%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration pcr", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: pcr\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration pcr", 
        "value": 2.308e-07, 
        "severity": 0, 
        "severity_value": 1.154e-07, 
        "code": "best_score <= 2", 
        "message": "Method no_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration\n  Metric id: pcr\n  Best score: 2.308e-07%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score no_integration_batch pcr", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method no_integration_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: pcr\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score no_integration_batch pcr", 
        "value": 1, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method no_integration_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: no_integration_batch\n  Metric id: pcr\n  Best score: 1%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration pcr", 
        "value": 0.9966, 
        "severity": 0, 
        "severity_value": -0.9966, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: pcr\n  Worst score: 0.9966%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration pcr", 
        "value": 1.0, 
        "severity": 0, 
        "severity_value": 0.5, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration\n  Metric id: pcr\n  Best score: 1.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_batch pcr", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_batch performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: pcr\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_batch pcr", 
        "value": 1.7259e-07, 
        "severity": 0, 
        "severity_value": 8.6295e-08, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_batch performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_batch\n  Metric id: pcr\n  Best score: 1.7259e-07%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score shuffle_integration_by_cell_type pcr", 
        "value": 0.2367, 
        "severity": 0, 
        "severity_value": -0.2367, 
        "code": "worst_score >= -1", 
        "message": "Method shuffle_integration_by_cell_type performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: pcr\n  Worst score: 0.2367%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score shuffle_integration_by_cell_type pcr", 
        "value": 0.7831, 
        "severity": 0, 
        "severity_value": 0.39155, 
        "code": "best_score <= 2", 
        "message": "Method shuffle_integration_by_cell_type performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: shuffle_integration_by_cell_type\n  Metric id: pcr\n  Best score: 0.7831%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_fastmnn pcr", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_fastmnn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: pcr\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_fastmnn pcr", 
        "value": 0.5339, 
        "severity": 0, 
        "severity_value": 0.26695, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_fastmnn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_fastmnn\n  Metric id: pcr\n  Best score: 0.5339%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score batchelor_mnn_correct pcr", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method batchelor_mnn_correct performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: pcr\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score batchelor_mnn_correct pcr", 
        "value": 0.5344, 
        "severity": 0, 
        "severity_value": 0.2672, 
        "code": "best_score <= 2", 
        "message": "Method batchelor_mnn_correct performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: batchelor_mnn_correct\n  Metric id: pcr\n  Best score: 0.5344%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score bbknn pcr", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method bbknn performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: pcr\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score bbknn pcr", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method bbknn performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: bbknn\n  Metric id: pcr\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score combat pcr", 
        "value": 0.9996, 
        "severity": 0, 
        "severity_value": -0.9996, 
        "code": "worst_score >= -1", 
        "message": "Method combat performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: pcr\n  Worst score: 0.9996%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score combat pcr", 
        "value": 1.0008, 
        "severity": 0, 
        "severity_value": 0.5004, 
        "code": "best_score <= 2", 
        "message": "Method combat performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: combat\n  Metric id: pcr\n  Best score: 1.0008%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score geneformer pcr", 
        "value": -1.466e-08, 
        "severity": 0, 
        "severity_value": 1.466e-08, 
        "code": "worst_score >= -1", 
        "message": "Method geneformer performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: pcr\n  Worst score: -1.466e-08%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score geneformer pcr", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method geneformer performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: geneformer\n  Metric id: pcr\n  Best score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmony pcr", 
        "value": 0.4456, 
        "severity": 0, 
        "severity_value": -0.4456, 
        "code": "worst_score >= -1", 
        "message": "Method harmony performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: pcr\n  Worst score: 0.4456%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmony pcr", 
        "value": 0.6827, 
        "severity": 0, 
        "severity_value": 0.34135, 
        "code": "best_score <= 2", 
        "message": "Method harmony performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmony\n  Metric id: pcr\n  Best score: 0.6827%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score harmonypy pcr", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method harmonypy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: pcr\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score harmonypy pcr", 
        "value": 0.6897, 
        "severity": 0, 
        "severity_value": 0.34485, 
        "code": "best_score <= 2", 
        "message": "Method harmonypy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: harmonypy\n  Metric id: pcr\n  Best score: 0.6897%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score liger pcr", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method liger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: pcr\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score liger pcr", 
        "value": 0.8296, 
        "severity": 0, 
        "severity_value": 0.4148, 
        "code": "best_score <= 2", 
        "message": "Method liger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: liger\n  Metric id: pcr\n  Best score: 0.8296%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score mnnpy pcr", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method mnnpy performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: pcr\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score mnnpy pcr", 
        "value": 0.6494, 
        "severity": 0, 
        "severity_value": 0.3247, 
        "code": "best_score <= 2", 
        "message": "Method mnnpy performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: mnnpy\n  Metric id: pcr\n  Best score: 0.6494%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score pyliger pcr", 
        "value": 0.5255, 
        "severity": 0, 
        "severity_value": -0.5255, 
        "code": "worst_score >= -1", 
        "message": "Method pyliger performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: pcr\n  Worst score: 0.5255%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score pyliger pcr", 
        "value": 0.8038, 
        "severity": 0, 
        "severity_value": 0.4019, 
        "code": "best_score <= 2", 
        "message": "Method pyliger performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: pyliger\n  Metric id: pcr\n  Best score: 0.8038%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scalex pcr", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scalex performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: pcr\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scalex pcr", 
        "value": 0.9998, 
        "severity": 0, 
        "severity_value": 0.4999, 
        "code": "best_score <= 2", 
        "message": "Method scalex performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scalex\n  Metric id: pcr\n  Best score: 0.9998%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanorama pcr", 
        "value": -9.8068e-08, 
        "severity": 0, 
        "severity_value": 9.8068e-08, 
        "code": "worst_score >= -1", 
        "message": "Method scanorama performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: pcr\n  Worst score: -9.8068e-08%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanorama pcr", 
        "value": 0.9994, 
        "severity": 0, 
        "severity_value": 0.4997, 
        "code": "best_score <= 2", 
        "message": "Method scanorama performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanorama\n  Metric id: pcr\n  Best score: 0.9994%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scanvi pcr", 
        "value": 0.1265, 
        "severity": 0, 
        "severity_value": -0.1265, 
        "code": "worst_score >= -1", 
        "message": "Method scanvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: pcr\n  Worst score: 0.1265%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scanvi pcr", 
        "value": 0.648, 
        "severity": 0, 
        "severity_value": 0.324, 
        "code": "best_score <= 2", 
        "message": "Method scanvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scanvi\n  Metric id: pcr\n  Best score: 0.648%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scgpt pcr", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scgpt performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt\n  Metric id: pcr\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scgpt pcr", 
        "value": 0.1901, 
        "severity": 0, 
        "severity_value": 0.09505, 
        "code": "best_score <= 2", 
        "message": "Method scgpt performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scgpt\n  Metric id: pcr\n  Best score: 0.1901%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scimilarity pcr", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scimilarity performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: pcr\n  Worst score: 0.0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scimilarity pcr", 
        "value": 0.3969, 
        "severity": 0, 
        "severity_value": 0.19845, 
        "code": "best_score <= 2", 
        "message": "Method scimilarity performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scimilarity\n  Metric id: pcr\n  Best score: 0.3969%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scprint pcr", 
        "value": 0, 
        "severity": 0, 
        "severity_value": -0.0, 
        "code": "worst_score >= -1", 
        "message": "Method scprint performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scprint\n  Metric id: pcr\n  Worst score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scprint pcr", 
        "value": 0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method scprint performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scprint\n  Metric id: pcr\n  Best score: 0%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score scvi pcr", 
        "value": 0.2172, 
        "severity": 0, 
        "severity_value": -0.2172, 
        "code": "worst_score >= -1", 
        "message": "Method scvi performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: pcr\n  Worst score: 0.2172%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score scvi pcr", 
        "value": 0.6701, 
        "severity": 0, 
        "severity_value": 0.33505, 
        "code": "best_score <= 2", 
        "message": "Method scvi performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: scvi\n  Metric id: pcr\n  Best score: 0.6701%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Worst score uce pcr", 
        "value": -1.466e-08, 
        "severity": 0, 
        "severity_value": 1.466e-08, 
        "code": "worst_score >= -1", 
        "message": "Method uce performs much worse than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: pcr\n  Worst score: -1.466e-08%\n"
    }, 
    {
        "task_id": "task_batch_integration", 
        "category": "Scaling", 
        "name": "Best score uce pcr", 
        "value": 0.0, 
        "severity": 0, 
        "severity_value": 0.0, 
        "code": "best_score <= 2", 
        "message": "Method uce performs a lot better than baselines.\n  Task id: task_batch_integration\n  Method id: uce\n  Metric id: pcr\n  Best score: 0.0%\n"
    }
]