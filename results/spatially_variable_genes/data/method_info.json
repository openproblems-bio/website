[
  {
    "task_id": "spatially_variable_genes",
    "method_id": "random_ranking",
    "method_name": "Random Ranking",
    "method_summary": "Negative control method that randomly rank genes.",
    "method_description": "A negative control method with random ranking of genes.\n",
    "is_baseline": true,
    "paper_reference": null,
    "code_url": null,
    "implementation_url": "https://github.com/openproblems-bio/openproblems-v2/blob/0b474ff9f32069b0a6d5b4945656f53f78c1918f/src/tasks/spatially_variable_genes/control_methods/random_ranking/config.vsh.yaml",
    "code_version": null,
    "commit_sha": "0b474ff9f32069b0a6d5b4945656f53f78c1918f"
  },
  {
    "task_id": "spatially_variable_genes",
    "method_id": "true_ranking",
    "method_name": "True Ranking",
    "method_summary": "Positive control method that correctly rank genes.",
    "method_description": "A positive control method with correct ranking of genes.\n",
    "is_baseline": true,
    "paper_reference": null,
    "code_url": null,
    "implementation_url": "https://github.com/openproblems-bio/openproblems-v2/blob/0b474ff9f32069b0a6d5b4945656f53f78c1918f/src/tasks/spatially_variable_genes/control_methods/true_ranking/config.vsh.yaml",
    "code_version": null,
    "commit_sha": "0b474ff9f32069b0a6d5b4945656f53f78c1918f"
  },
  {
    "task_id": "spatially_variable_genes",
    "method_id": "boostgp",
    "method_name": "BOOST-GP",
    "method_summary": "Bayesian modeling of spatial molecular profiling data via Gaussian process",
    "method_description": "BOOST-GP a novel Bayesian hierarchical model to analyze spatial transcriptomics data, \nwith several unique characteristics. It models the zero-inflated and over-dispersed \ncounts by deploying a zero-inflated negative binomial model that greatly increases \nmodel stability and robustness. Besides, the Bayesian inference framework allows us \nto borrow strength in parameter estimation in a de novo fashion. As a result, \nthe proposed model shows competitive performances in accuracy and robustness \nover existing methods in both simulation studies and two real data applications.\n",
    "is_baseline": false,
    "paper_reference": "li2021bayesian",
    "code_url": "https://github.com/Minzhe/BOOST-GP",
    "implementation_url": "https://github.com/openproblems-bio/openproblems-v2/blob/0b474ff9f32069b0a6d5b4945656f53f78c1918f/src/tasks/spatially_variable_genes/methods/boostgp/config.vsh.yaml",
    "code_version": null,
    "commit_sha": "0b474ff9f32069b0a6d5b4945656f53f78c1918f"
  },
  {
    "task_id": "spatially_variable_genes",
    "method_id": "gpcounts",
    "method_name": "GPcounts",
    "method_summary": "GPcounts is non-parametric modelling of temporal and spatial counts data from RNA-seq experiments.",
    "method_description": "The GPcounts package implements GP regression methods for modelling counts data using a \nnegative binomial likelihood function. Computational efficiency is achieved through the use of \nvariational Bayesian inference. The GP function models changes in the mean of the negative binomial \nlikelihood through a logarithmic link function and the dispersion parameter is fitted by maximum \nlikelihood. We validate the method on simulated time course data, showing better performance to identify \nchanges in over-dispersed counts data than methods based on Gaussian or Poisson likelihoods. \n",
    "is_baseline": false,
    "paper_reference": "bintayyash2021non",
    "code_url": "https://github.com/ManchesterBioinference/GPcounts",
    "implementation_url": "https://github.com/openproblems-bio/openproblems-v2/blob/0b474ff9f32069b0a6d5b4945656f53f78c1918f/src/tasks/spatially_variable_genes/methods/gpcounts/config.vsh.yaml",
    "code_version": null,
    "commit_sha": "0b474ff9f32069b0a6d5b4945656f53f78c1918f"
  },
  {
    "task_id": "spatially_variable_genes",
    "method_id": "moran_i",
    "method_name": "Moran's I",
    "method_summary": "Moran's I is a measurement of spatial autocorrelation.",
    "method_description": "The MoranI global spatial auto-correlation statistics evaluates whether features (i.e. genes) \nshows a pattern that is clustered, dispersed or random in the tissue are under consideration.\n",
    "is_baseline": false,
    "paper_reference": "palla2022squidpy",
    "code_url": "https://github.com/scverse/squidpy",
    "implementation_url": "https://github.com/openproblems-bio/openproblems-v2/blob/0b474ff9f32069b0a6d5b4945656f53f78c1918f/src/tasks/spatially_variable_genes/methods/moran_i/config.vsh.yaml",
    "code_version": null,
    "commit_sha": "0b474ff9f32069b0a6d5b4945656f53f78c1918f"
  },
  {
    "task_id": "spatially_variable_genes",
    "method_id": "nnsvg",
    "method_name": "nnSVG",
    "method_summary": "nnSVG is based on nearest-neighbor Gaussian process (NNGP) models to estimate parameters in GPs",
    "method_description": "nnSVG identifies genes that vary in expression continuously across the entire tissue or within a priori defined \nspatial domains. It uses gene-specific estimates of length scale parameters within the Gaussian process models, \nand scales linearly with the number of spatial locations.\n",
    "is_baseline": false,
    "paper_reference": "weber2023nnsvg",
    "code_url": "https://github.com/lmweber/nnSVG",
    "implementation_url": "https://github.com/openproblems-bio/openproblems-v2/blob/0b474ff9f32069b0a6d5b4945656f53f78c1918f/src/tasks/spatially_variable_genes/methods/nnsvg/config.vsh.yaml",
    "code_version": null,
    "commit_sha": "0b474ff9f32069b0a6d5b4945656f53f78c1918f"
  },
  {
    "task_id": "spatially_variable_genes",
    "method_id": "scgco",
    "method_name": "scGCO",
    "method_summary": "Identification of spatially variable genes with graph cuts.",
    "method_description": "Single-cell gene expression data with positional information is critical to dissect \nmechanisms and architectures of multicellular organisms, but the potential is limited \nby the scalability of current data analysis strategies. Here, we present scGCO, \na method based on fast optimization of hidden Markov Random Fields with graph cuts \nto identify spatially variable genes. Comparing to existing methods, scGCO delivers \na superior performance with lower false positive rate and improved specificity, \nwhile demonstrates a more robust performance in the presence of noises. \nCritically, scGCO scales near linearly with inputs and demonstrates orders of \nmagnitude better running time and memory requirement than existing methods, \nand could represent a valuable solution when spatial transcriptomics data grows \ninto millions of data points and beyond..\n",
    "is_baseline": false,
    "paper_reference": "zhang2022identification",
    "code_url": "https://github.com/WangPeng-Lab/scGCO",
    "implementation_url": "https://github.com/openproblems-bio/openproblems-v2/blob/0b474ff9f32069b0a6d5b4945656f53f78c1918f/src/tasks/spatially_variable_genes/methods/scgco/config.vsh.yaml",
    "code_version": null,
    "commit_sha": "0b474ff9f32069b0a6d5b4945656f53f78c1918f"
  },
  {
    "task_id": "spatially_variable_genes",
    "method_id": "sepal",
    "method_name": "Sepal",
    "method_summary": "Sepal simulates diffusion of individual transcripts to extract genes with spatial patterns.",
    "method_description": "This method assesses the degree of randomness exhibited by each transcript profile and rank them accordingly.\n",
    "is_baseline": false,
    "paper_reference": "andersson2021sepal",
    "code_url": "https://github.com/scverse/squidpy",
    "implementation_url": "https://github.com/openproblems-bio/openproblems-v2/blob/0b474ff9f32069b0a6d5b4945656f53f78c1918f/src/tasks/spatially_variable_genes/methods/sepal/config.vsh.yaml",
    "code_version": null,
    "commit_sha": "0b474ff9f32069b0a6d5b4945656f53f78c1918f"
  },
  {
    "task_id": "spatially_variable_genes",
    "method_id": "somde",
    "method_name": "SOMDE",
    "method_summary": "SOMDE is a scalable method for identifying spatially variable genes with self-organizing map.",
    "method_description": "SOMDE uses self-organizing map to cluster neighboring cells into nodes, and then uses a Gaussian process \nto fit the node-level spatial gene expression to identify SVgenes. Experiments show that SOMDE is about \n5 to 50 times faster than existing methods with comparable results. \nThe adjustable resolution of SOMDE makes it the only method that can give results in about \n5 min in large datasets of more than 20 000 sequencing sites.\n",
    "is_baseline": false,
    "paper_reference": "hao2021somde",
    "code_url": "https://github.com/XuegongLab/somde",
    "implementation_url": "https://github.com/openproblems-bio/openproblems-v2/blob/0b474ff9f32069b0a6d5b4945656f53f78c1918f/src/tasks/spatially_variable_genes/methods/somde/config.vsh.yaml",
    "code_version": null,
    "commit_sha": "0b474ff9f32069b0a6d5b4945656f53f78c1918f"
  },
  {
    "task_id": "spatially_variable_genes",
    "method_id": "spagcn",
    "method_name": "SpaGCN",
    "method_summary": "Integrating gene expression, spatial location and histology to identify spatial domains and spatially variable genes by graph convolutional network.",
    "method_description": "To elucidate spatial gene expression variation, we present SpaGCN, a graph convolutional \nnetwork approach that integrates gene expression, spatial location and histology in SRT data analysis. \nThrough graph convolution, SpaGCN aggregates gene expression of each spot from its neighboring spots, \nwhich enables the identification of spatial domains with coherent expression and histology. \nThe subsequent domain guided differential expression (DE) analysis then detects genes with \nenriched expression patterns in the identified domains. Analyzing seven SRT datasets using \nSpaGCN, we show it can detect genes with much more enriched spatial expression patterns than competing methods. Furthermore, genes detected by SpaGCN are transferrable and can be utilized to study spatial variation of gene expression in other datasets. SpaGCN is computationally \nfast, platform independent, making it a desirable tool for diverse SRT studies.\n",
    "is_baseline": false,
    "paper_reference": "hu2021spagcn",
    "code_url": "https://github.com/jianhuupenn/SpaGCN",
    "implementation_url": "https://github.com/openproblems-bio/openproblems-v2/blob/0b474ff9f32069b0a6d5b4945656f53f78c1918f/src/tasks/spatially_variable_genes/methods/spagcn/config.vsh.yaml",
    "code_version": null,
    "commit_sha": "0b474ff9f32069b0a6d5b4945656f53f78c1918f"
  },
  {
    "task_id": "spatially_variable_genes",
    "method_id": "spagft",
    "method_name": "SpaGFT",
    "method_summary": "SpaGFT is a graph Fourier transform for tissue module identification from spatially resolved transcriptomics",
    "method_description": "The tissue module (TM) was defined as an architectural area containing recurrent cellular \ncommunities executing specific biological functions at different tissue sites. \nHowever, the computational identification of TMs poses challenges owing to their various \nlength scales, convoluted biological processes, not well-defined molecular features, and \nirregular spatial patterns. Here, we present a hypothesis-free graph Fourier transform model, \nSpaGFT, to characterize TMs. For the first time, SpaGFT transforms complex gene expression \npatterns into simple, but informative signals, leading to the accurate identification of \nspatially variable genes (SVGs) at a fast computational speed. Based on clustering the \ntransformed signals of the SVGs, SpaGFT provides a novel computational framework for TM \ncharacterization. Three case studies were used to illustrate TM identities, the biological \nprocesses of convoluted TMs in the lymph node, and conserved TMs across multiple samples constituting \nthe complex organ. The superior accuracy, scalability, and interpretability of SpaGFT indicate \nthat it is a novel and powerful tool for the investigation of TMs to gain new insights into a variety \nof biological questions.\n",
    "is_baseline": false,
    "paper_reference": "chang2022spatial",
    "code_url": "https://github.com/jxLiu-bio/SpaGFT",
    "implementation_url": "https://github.com/openproblems-bio/openproblems-v2/blob/0b474ff9f32069b0a6d5b4945656f53f78c1918f/src/tasks/spatially_variable_genes/methods/spagft/config.vsh.yaml",
    "code_version": null,
    "commit_sha": "0b474ff9f32069b0a6d5b4945656f53f78c1918f"
  },
  {
    "task_id": "spatially_variable_genes",
    "method_id": "spanve",
    "method_name": "Spanve",
    "method_summary": "Spanve is a non-parametric statistical approach based on modeling space dependence as a distance of two distributions for detecting SV genes.",
    "method_description": "The depiction of in situ gene expression through spatial transcriptomics facilitates the inference of cell \nfunction mechanisms. To build spatial maps of transcriptomes, the first and crucial step is to \nidentify spatially variable (SV) genes. However, current methods fall short in dealing with \nlarge-scale spatial transcriptomics data and may result in a high false positive rate due to the \nmodeling of gene expression into parametric distributions. \nThis paper introduces Spanve (https://github.com/zjupgx/Spanve), a non-parametric statistical approach \nbased on modeling space dependence as a distance of two distributions for detecting SV genes. \nThe high computing efficiency and accuracy of Spanve is demonstrated through comprehensive benchmarking. \nAdditionally, Spanve can detect clustering-friendly SV genes and spatially variable co-expression, \nfacilitating the identification of spatial tissue domains by an imputation.   \n",
    "is_baseline": false,
    "paper_reference": "cai2023spanve",
    "code_url": "https://github.com/zjupgx/Spanve",
    "implementation_url": "https://github.com/openproblems-bio/openproblems-v2/blob/0b474ff9f32069b0a6d5b4945656f53f78c1918f/src/tasks/spatially_variable_genes/methods/spanve/config.vsh.yaml",
    "code_version": null,
    "commit_sha": "0b474ff9f32069b0a6d5b4945656f53f78c1918f"
  },
  {
    "task_id": "spatially_variable_genes",
    "method_id": "spark",
    "method_name": "SPARK",
    "method_summary": "Spatial PAttern Recognition via Kernels",
    "method_description": "SPARK builds upon a generalized linear spatial model (GLSM) with a variety of spatial kernels to accommodate count data.\nWith a newly developed penalized quasi-likelihood (PQL) algorithm, SPARK is scalable to analyzing tens of \nthousands of genes across tens of thousands spatial locations.\n",
    "is_baseline": false,
    "paper_reference": "sun2020statistical",
    "code_url": "https://github.com/xzhoulab/SPARK",
    "implementation_url": "https://github.com/openproblems-bio/openproblems-v2/blob/0b474ff9f32069b0a6d5b4945656f53f78c1918f/src/tasks/spatially_variable_genes/methods/spark/config.vsh.yaml",
    "code_version": null,
    "commit_sha": "0b474ff9f32069b0a6d5b4945656f53f78c1918f"
  },
  {
    "task_id": "spatially_variable_genes",
    "method_id": "spark_x",
    "method_name": "SPARK-X",
    "method_summary": "SPARK-X is a non-parametric method for rapid and effective detection of spatially expressed genes in large spatial transcriptomic studies.",
    "method_description": "Spatial transcriptomic studies are becoming increasingly common and large, posing important \nstatistical and computational challenges for many analytic tasks. Here, we present SPARK-X, \na non-parametric method for rapid and effective detection of spatially expressed genes in large \nspatial transcriptomic studies. SPARK-X not only produces effective type I error control and \nhigh power but also brings orders of magnitude computational savings. We apply SPARK-X to \nanalyze three large datasets, one of which is only analyzable by SPARK-X. In these data, \nSPARK-X identifies many spatially expressed genes including those that are spatially \nexpressed within the same cell type, revealing new biological insights.\n",
    "is_baseline": false,
    "paper_reference": "zhu2021spark",
    "code_url": "https://github.com/xzhoulab/SPARK",
    "implementation_url": "https://github.com/openproblems-bio/openproblems-v2/blob/0b474ff9f32069b0a6d5b4945656f53f78c1918f/src/tasks/spatially_variable_genes/methods/spark_x/config.vsh.yaml",
    "code_version": null,
    "commit_sha": "0b474ff9f32069b0a6d5b4945656f53f78c1918f"
  },
  {
    "task_id": "spatially_variable_genes",
    "method_id": "spatialde",
    "method_name": "SpatialDE",
    "method_summary": "SpatialDE is a method for identify spatially variable genes based on Gaussian Process model ",
    "method_description": "SpatialDE decomposes expression variability into spatial and nonspatial components using two random effect terms: a spatial variance term that parametrizes gene expression covariance by pairwise distances of samples, and a noise term that models nonspatial variability.\n",
    "is_baseline": false,
    "paper_reference": "svensson2018spatialde",
    "code_url": "https://github.com/Teichlab/SpatialDE",
    "implementation_url": "https://github.com/openproblems-bio/openproblems-v2/blob/0b474ff9f32069b0a6d5b4945656f53f78c1918f/src/tasks/spatially_variable_genes/methods/spatialde/config.vsh.yaml",
    "code_version": null,
    "commit_sha": "0b474ff9f32069b0a6d5b4945656f53f78c1918f"
  },
  {
    "task_id": "spatially_variable_genes",
    "method_id": "spatialde2",
    "method_name": "SpatialDE2",
    "method_summary": "SpatialDE2: Fast and localized variance component analysis of spatial transcriptomics",
    "method_description": "Spatial transcriptomics is now a mature technology, allowing to assay gene expression changes \nin the histological context of complex tissues. A canonical analysis workflow starts with the \nidentification of tissue zones that share similar expression profiles, followed by the detection \nof highly variable or spatially variable genes. Rapid increases in the scale and complexity of \nspatial transcriptomic datasets demand that these analysis steps are conducted in a consistent \nand integrated manner, a requirement that is not met by current methods. To address this, we \nhere present SpatialDE2, which unifies the mapping of tissue zones and spatial variable gene \ndetection as integrated software framework, while at the same time advancing current algorithms \nfor both of these steps. Formulated in a Bayesian framework, the model accounts for the Poisson \ncount noise, while simultaneously offering superior computational speed compared to previous methods. \nWe validate SpatialDE2 using simulated data and illustrate its utility in the context of two real-world \napplications to the spatial transcriptomics profiles of the mouse brain and human endometrium.\n",
    "is_baseline": false,
    "paper_reference": "kats2021spatialde2",
    "code_url": "https://github.com/PMBio/SpatialDE",
    "implementation_url": "https://github.com/openproblems-bio/openproblems-v2/blob/0b474ff9f32069b0a6d5b4945656f53f78c1918f/src/tasks/spatially_variable_genes/methods/spatialde2/config.vsh.yaml",
    "code_version": null,
    "commit_sha": "0b474ff9f32069b0a6d5b4945656f53f78c1918f"
  }
]
