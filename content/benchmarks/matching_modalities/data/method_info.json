[
    {
        "method_name": "Harmonic Alignment (log scran)",
        "paper_name": "Harmonic Alignment",
        "paper_reference": "stanley2020harmonic",
        "paper_year": 2020,
        "code_url": "https://github.com/KrishnaswamyLab/harmonic-alignment",
        "image": "openproblems-r-extras",
        "is_baseline": false,
        "code_version": null,
        "task_id": "matching_modalities",
        "commit_sha": "6a6ddc706cff9ff9b6d2085c9d3ff87d0bcd88be",
        "method_id": "harmonic_alignment_log_scran_pooling"
    },
    {
        "method_name": "Harmonic Alignment (sqrt CP10k)",
        "paper_name": "Harmonic Alignment",
        "paper_reference": "stanley2020harmonic",
        "paper_year": 2020,
        "code_url": "https://github.com/KrishnaswamyLab/harmonic-alignment",
        "image": "openproblems-python-extras",
        "is_baseline": false,
        "code_version": null,
        "task_id": "matching_modalities",
        "commit_sha": "6a6ddc706cff9ff9b6d2085c9d3ff87d0bcd88be",
        "method_id": "harmonic_alignment_sqrt_cp10k"
    },
    {
        "method_name": "Mutual Nearest Neighbors (log CP10k)",
        "paper_name": "Batch effects in single-cell RNA-sequencing data are corrected by matching mutual nearest neighbors",
        "paper_reference": "haghverdi2018batch",
        "paper_year": 2018,
        "code_url": "https://github.com/LTLA/batchelor",
        "image": "openproblems-r-extras",
        "is_baseline": false,
        "code_version": null,
        "task_id": "matching_modalities",
        "commit_sha": "6a6ddc706cff9ff9b6d2085c9d3ff87d0bcd88be",
        "method_id": "mnn_log_cp10k"
    },
    {
        "method_name": "Mutual Nearest Neighbors (log scran)",
        "paper_name": "Batch effects in single-cell RNA-sequencing data are corrected by matching mutual nearest neighbors",
        "paper_reference": "haghverdi2018batch",
        "paper_year": 2018,
        "code_url": "https://github.com/LTLA/batchelor",
        "image": "openproblems-r-extras",
        "is_baseline": false,
        "code_version": null,
        "task_id": "matching_modalities",
        "commit_sha": "6a6ddc706cff9ff9b6d2085c9d3ff87d0bcd88be",
        "method_id": "mnn_log_scran_pooling"
    },
    {
        "method_name": "Procrustes superimposition",
        "paper_name": "Generalized Procrustes analysis",
        "paper_reference": "gower1975generalized",
        "paper_year": 1975,
        "code_url": "https://docs.scipy.org/doc/scipy/reference/generated/scipy.spatial.procrustes.html",
        "image": "openproblems",
        "is_baseline": false,
        "code_version": null,
        "task_id": "matching_modalities",
        "commit_sha": "6a6ddc706cff9ff9b6d2085c9d3ff87d0bcd88be",
        "method_id": "procrustes"
    },
    {
        "method_name": "Random Features",
        "paper_name": "Random Features (baseline)",
        "paper_reference": "openproblems",
        "paper_year": 2022,
        "code_url": "https://github.com/openproblems-bio/openproblems",
        "image": "openproblems",
        "is_baseline": true,
        "code_version": null,
        "task_id": "matching_modalities",
        "commit_sha": "6a6ddc706cff9ff9b6d2085c9d3ff87d0bcd88be",
        "method_id": "random_features"
    },
    {
        "method_name": "True Features",
        "paper_name": "True Features (baseline)",
        "paper_reference": "openproblems",
        "paper_year": 2022,
        "code_url": "https://github.com/openproblems-bio/openproblems",
        "image": "openproblems",
        "is_baseline": true,
        "code_version": null,
        "task_id": "matching_modalities",
        "commit_sha": "6a6ddc706cff9ff9b6d2085c9d3ff87d0bcd88be",
        "method_id": "true_features"
    }
]