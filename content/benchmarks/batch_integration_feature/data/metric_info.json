[
    {
        "metric_name": "ARI",
        "metric_summary": "ARI (Adjusted Rand Index) compares the overlap of two clusterings. It considers both correct clustering overlaps while also counting correct disagreements between two clustering.",
        "paper_reference": "luecken2022benchmarking",
        "maximize": true,
        "image": "openproblems-r-pytorch",
        "task_id": "batch_integration_feature",
        "commit_sha": "49b96d8332797b8b1fe34ba1f998162bb4b18e83",
        "metric_id": "ari"
    },
    {
        "metric_name": "Cell Cycle Score",
        "metric_summary": "The cell-cycle conservation score evaluates how well the cell-cycle effect can be captured before and after integration.",
        "paper_reference": "luecken2022benchmarking",
        "maximize": true,
        "image": "openproblems-r-pytorch",
        "task_id": "batch_integration_feature",
        "commit_sha": "49b96d8332797b8b1fe34ba1f998162bb4b18e83",
        "metric_id": "cc_score"
    },
    {
        "metric_name": "Graph connectivity",
        "metric_summary": "The graph connectivity metric assesses whether the kNN graph representation, G, of the integrated data connects all cells with the same cell identity label.",
        "paper_reference": "luecken2022benchmarking",
        "maximize": true,
        "image": "openproblems-r-pytorch",
        "task_id": "batch_integration_feature",
        "commit_sha": "49b96d8332797b8b1fe34ba1f998162bb4b18e83",
        "metric_id": "graph_connectivity"
    },
    {
        "metric_name": "HVG conservation",
        "metric_summary": "This metric computes the average percentage of overlapping highly variable genes per batch before and after integration.",
        "paper_reference": "luecken2022benchmarking",
        "maximize": true,
        "image": "openproblems-r-pytorch",
        "task_id": "batch_integration_feature",
        "commit_sha": "49b96d8332797b8b1fe34ba1f998162bb4b18e83",
        "metric_id": "hvg_conservation"
    },
    {
        "metric_name": "Isolated label F1",
        "metric_summary": "Isolated cell labels are identified as the labels present in the least number of batches in the integration task. The score evaluates how well these isolated labels separate from other cell identities based on clustering.",
        "paper_reference": "luecken2022benchmarking",
        "maximize": true,
        "image": "openproblems-r-pytorch",
        "task_id": "batch_integration_feature",
        "commit_sha": "49b96d8332797b8b1fe34ba1f998162bb4b18e83",
        "metric_id": "isolated_labels_f1"
    },
    {
        "metric_name": "Isolated label Silhouette",
        "metric_summary": "This score evaluates the compactness for the label(s) that is(are) shared by fewest batches. It indicates how well rare cell types can be preserved after integration.",
        "paper_reference": "luecken2022benchmarking",
        "maximize": true,
        "image": "openproblems-r-pytorch",
        "task_id": "batch_integration_feature",
        "commit_sha": "49b96d8332797b8b1fe34ba1f998162bb4b18e83",
        "metric_id": "isolated_labels_sil"
    },
    {
        "metric_name": "kBET",
        "metric_summary": "kBET determines whether the label composition of a k nearest neighborhood of a cell is similar to the expected (global) label composition. The test is repeated for a random subset of cells, and the results are summarized as a rejection rate over all tested neighborhoods.",
        "paper_reference": "bttner2018test",
        "maximize": true,
        "image": "openproblems-r-extras",
        "task_id": "batch_integration_feature",
        "commit_sha": "49b96d8332797b8b1fe34ba1f998162bb4b18e83",
        "metric_id": "kBET"
    },
    {
        "metric_name": "NMI",
        "metric_summary": "NMI compares the overlap of two clusterings. We used NMI to compare the cell-type labels with Louvain clusters computed on the integrated dataset.",
        "paper_reference": "luecken2022benchmarking",
        "maximize": true,
        "image": "openproblems-r-pytorch",
        "task_id": "batch_integration_feature",
        "commit_sha": "49b96d8332797b8b1fe34ba1f998162bb4b18e83",
        "metric_id": "nmi"
    },
    {
        "metric_name": "PC Regression",
        "metric_summary": "This compares the explained variance by batch before and after integration. It returns a score between 0 and 1 (scaled=True) with 0 if the variance contribution hasn\u2019t changed. The larger the score, the more different the variance contributions are before and after integration.",
        "paper_reference": "luecken2022benchmarking",
        "maximize": true,
        "image": "openproblems-r-pytorch",
        "task_id": "batch_integration_feature",
        "commit_sha": "49b96d8332797b8b1fe34ba1f998162bb4b18e83",
        "metric_id": "pcr"
    },
    {
        "metric_name": "Silhouette",
        "metric_summary": "The absolute silhouette with is computed on cell identity labels, measuring their compactness.",
        "paper_reference": "luecken2022benchmarking",
        "maximize": true,
        "image": "openproblems-r-pytorch",
        "task_id": "batch_integration_feature",
        "commit_sha": "49b96d8332797b8b1fe34ba1f998162bb4b18e83",
        "metric_id": "silhouette"
    },
    {
        "metric_name": "Batch ASW",
        "metric_summary": "The absolute silhouette width is computed over batch labels per cell. As 0 then indicates that batches are well mixed and any deviation from 0 indicates a batch effect, we use the 1-abs(ASW) to map the score to the scale [0;1].",
        "paper_reference": "luecken2022benchmarking",
        "maximize": true,
        "image": "openproblems-r-pytorch",
        "task_id": "batch_integration_feature",
        "commit_sha": "49b96d8332797b8b1fe34ba1f998162bb4b18e83",
        "metric_id": "silhouette_batch"
    }
]