---
title: "Multimodal Data Integration"
summary: "Alignment of cellular profiles from two different modalities"
bibliography: "../../../static/bibliography/main.bib"
---


```{r}
#| include: false
params <- list(data_dir = "content/benchmarks/label_projection/data")
params <- list(data_dir = "./data")
```

{{< include ../_blocks/_setup.qmd >}}

:::{.content-hidden}
`r num_methods` methods • `r num_metrics` metrics • `r num_datasets` datasets
:::

## Description 
`r task_info$task_description %|% "Missing 'task_description'"`

## Summary

{{< include ../_blocks/_summary_figure.qmd >}}

## Scaled scores

{{< include ../_blocks/_results_table.qmd >}}

## Downloads

<a href="data/task_info.json" class="btn btn-secondary">Task info</a>
<a href="data/method_info.json" class="btn btn-secondary">Method info</a>
<a href="data/metric_info.json" class="btn btn-secondary">Metric info</a>
<a href="data/dataset_info.json" class="btn btn-secondary">Dataset info</a>
<a href="data/results.json" class="btn btn-secondary">Results</a>
<a href="data/quality_control.json" class="btn btn-secondary">Quality control</a>

## Details

<details><summary>Method descriptions</summary>

```{r}
#| echo: false
# show each method just once
lines <- pmap_chr(method_info, function(method_name, method_description, paper_reference, code_url, ...) {
  if (!is.na(code_url)) {
    method_name <- glue::glue("[{method_name}]({code_url})")
  }
  ref <- 
    if (!is.na(paper_reference)) {
      glue::glue(" [[{paper_reference}]](/bibliography#{paper_reference})")
    } else {
      ""
    }
  summ <- (method_description %|% "Missing 'method_description'") %>% str_replace_all("\\. *$", "")
  glue::glue("* **{method_name}**: {summ}.{ref}")
})
knitr::asis_output(lines)
```
</details>

<details><summary>Metric descriptions</summary>

```{r}
#| echo: false
lines <- pmap_chr(metric_info, function(metric_name, metric_description, paper_reference, ...) {
  ref <- 
    if (!is.na(paper_reference)) {
      glue::glue(" [[{paper_reference}]](/bibliography#{paper_reference})")
    } else {
      ""
    }
  summ <- (metric_description %|% "Missing 'metric_description'") %>% str_replace_all("\\. *$", "")
  glue::glue("* **{metric_name}**: {summ}.{ref}")
})
knitr::asis_output(lines)
```
</details>

<details><summary>Dataset descriptions</summary>

```{r}
#| echo: false
lines <- pmap_chr(dataset_info, function(dataset_name, dataset_description, data_reference, ...) {
  ref <- 
    if (!is.na(data_reference)) {
      glue::glue(" [[{data_reference}]](/bibliography#{data_reference})")
    } else {
      ""
    }
  summ <- (dataset_description %|% "Missing 'dataset_description'") %>% str_replace_all("\\. *$", "")
  glue::glue("* **{dataset_name}**: {summ}.{ref}")
})
knitr::asis_output(lines)
```
</details>

<details><summary>Baseline descriptions</summary>

```{r}
#| echo: false
baselines <- method_info %>% filter(is_baseline)
lines <- pmap_chr(baselines, function(method_name, method_description, reference, code_url, ...) {
  summ <- (method_description %|% "Missing 'method_description'") %>% str_replace_all("\\. *$", "")
  glue::glue("* **{method_name}**: {summ}.")
})
knitr::asis_output(lines)
```
</details>

<details><summary>Quality control</summary>

```{r quality_control}
#| echo: false
qc_print <- qc %>% 
  filter(severity > 0) %>%
  mutate(
    test = case_when(
      severity == 0 ~ "✓",
      severity == 1 ~ "✗",
      severity == 2 ~ "✗✗",
      TRUE ~ "✗✗✗"
    ),
    color = ifelse(severity == 0, "green", "red")
  ) %>%
  arrange(desc(severity_value), category, name)

if (nrow(qc_print) > 0) {
  qc_print %>% 
    transmute(
      Category = category,
      Name = name,
      Value = value,
      Condition = code,
      Severity = test
    ) %>%
    kbl(format = "html") %>%
    kable_styling() %>%
    kable_paper() %>%
    column_spec(
      5, 
      color = qc_print$color
    ) %>%
    column_spec(
      1:5,
      tooltip = qc_print$message
    )
} else {
  knitr::asis_output("✓ All checks succeeded!")
}
```

</details>

<details><summary>Visualization of raw results</summary>

```{r}
#| include: false
knitr::opts_chunk$set(
  fig.width = 10,
  fig.height = nrow(method_info) * nrow(metric_info) / 4
)
```

```{r raw_results, echo=FALSE}
ggplot(results_long %>% arrange(method_id)) +
  geom_vline(aes(xintercept = x), tibble(x = c(0, 1)), linetype = "dashed", alpha = .5, colour = "red") +
  geom_path(aes(score, method_id, group = dataset_id), alpha = .25) +
  geom_point(aes(score, method_id, colour = is_baseline)) +
  facet_wrap(~metric_id, ncol = 1, scales = "free") +
  theme_bw() +
  labs(x = NULL, y = NULL)
```

</details>





