[
    {
        "task_id": "batch_integration_graph", 
        "method_id": "batch_random_integration", 
        "method_name": "Random Integration by Batch", 
        "paper_name": "Random Integration by Batch (baseline)", 
        "paper_url": "https://openproblems.bio", 
        "paper_year": 2022, 
        "code_url": "https://github.com/openproblems-bio/openproblems", 
        "image": "openproblems", 
        "is_baseline": true, 
        "code_version": null
    }, 
    {
        "task_id": "batch_integration_graph", 
        "method_id": "bbknn_full_scaled", 
        "method_name": "BBKNN (full/scaled)", 
        "paper_name": "BBKNN: fast batch alignment of single cell transcriptomes", 
        "paper_url": "https://academic.oup.com/bioinformatics/article/36/3/964/5545955", 
        "paper_year": 2020, 
        "code_url": "https://github.com/Teichlab/bbknn", 
        "image": "openproblems-r-pytorch", 
        "is_baseline": false, 
        "code_version": null
    }, 
    {
        "task_id": "batch_integration_graph", 
        "method_id": "bbknn_full_unscaled", 
        "method_name": "BBKNN (full/unscaled)", 
        "paper_name": "BBKNN: fast batch alignment of single cell transcriptomes", 
        "paper_url": "https://academic.oup.com/bioinformatics/article/36/3/964/5545955", 
        "paper_year": 2020, 
        "code_url": "https://github.com/Teichlab/bbknn", 
        "image": "openproblems-r-pytorch", 
        "is_baseline": false, 
        "code_version": null
    }, 
    {
        "task_id": "batch_integration_graph", 
        "method_id": "bbknn_hvg_scaled", 
        "method_name": "BBKNN (hvg/scaled)", 
        "paper_name": "BBKNN: fast batch alignment of single cell transcriptomes", 
        "paper_url": "https://academic.oup.com/bioinformatics/article/36/3/964/5545955", 
        "paper_year": 2020, 
        "code_url": "https://github.com/Teichlab/bbknn", 
        "image": "openproblems-r-pytorch", 
        "is_baseline": false, 
        "code_version": null
    }, 
    {
        "task_id": "batch_integration_graph", 
        "method_id": "bbknn_hvg_unscaled", 
        "method_name": "BBKNN (hvg/unscaled)", 
        "paper_name": "BBKNN: fast batch alignment of single cell transcriptomes", 
        "paper_url": "https://academic.oup.com/bioinformatics/article/36/3/964/5545955", 
        "paper_year": 2020, 
        "code_url": "https://github.com/Teichlab/bbknn", 
        "image": "openproblems-r-pytorch", 
        "is_baseline": false, 
        "code_version": null
    }, 
    {
        "task_id": "batch_integration_graph", 
        "method_id": "celltype_random_graph", 
        "method_name": "Random Graph by Celltype", 
        "paper_name": "Random Graph by Celltype (baseline)", 
        "paper_url": "https://openproblems.bio", 
        "paper_year": 2022, 
        "code_url": "https://github.com/openproblems-bio/openproblems", 
        "image": "openproblems", 
        "is_baseline": true, 
        "code_version": null
    }, 
    {
        "task_id": "batch_integration_graph", 
        "method_id": "celltype_random_integration", 
        "method_name": "Random Integration by Celltype", 
        "paper_name": "Random Integration by Celltype (baseline)", 
        "paper_url": "https://openproblems.bio", 
        "paper_year": 2022, 
        "code_url": "https://github.com/openproblems-bio/openproblems", 
        "image": "openproblems", 
        "is_baseline": true, 
        "code_version": null
    }, 
    {
        "task_id": "batch_integration_graph", 
        "method_id": "combat_full_scaled", 
        "method_name": "Combat (full/scaled)", 
        "paper_name": "Adjusting batch effects in microarray expression data using empirical Bayes methods", 
        "paper_url": "https://academic.oup.com/biostatistics/article/8/1/118/252073", 
        "paper_year": 2007, 
        "code_url": "https://scanpy.readthedocs.io/en/stable/api/scanpy.pp.combat.html", 
        "image": "openproblems-r-pytorch", 
        "is_baseline": false, 
        "code_version": null
    }, 
    {
        "task_id": "batch_integration_graph", 
        "method_id": "combat_full_unscaled", 
        "method_name": "Combat (full/unscaled)", 
        "paper_name": "Adjusting batch effects in microarray expression data using empirical Bayes methods", 
        "paper_url": "https://academic.oup.com/biostatistics/article/8/1/118/252073", 
        "paper_year": 2007, 
        "code_url": "https://scanpy.readthedocs.io/en/stable/api/scanpy.pp.combat.html", 
        "image": "openproblems-r-pytorch", 
        "is_baseline": false, 
        "code_version": null
    }, 
    {
        "task_id": "batch_integration_graph", 
        "method_id": "combat_hvg_scaled", 
        "method_name": "Combat (hvg/scaled)", 
        "paper_name": "Adjusting batch effects in microarray expression data using empirical Bayes methods", 
        "paper_url": "https://academic.oup.com/biostatistics/article/8/1/118/252073", 
        "paper_year": 2007, 
        "code_url": "https://scanpy.readthedocs.io/en/stable/api/scanpy.pp.combat.html", 
        "image": "openproblems-r-pytorch", 
        "is_baseline": false, 
        "code_version": null
    }, 
    {
        "task_id": "batch_integration_graph", 
        "method_id": "combat_hvg_unscaled", 
        "method_name": "Combat (hvg/unscaled)", 
        "paper_name": "Adjusting batch effects in microarray expression data using empirical Bayes methods", 
        "paper_url": "https://academic.oup.com/biostatistics/article/8/1/118/252073", 
        "paper_year": 2007, 
        "code_url": "https://scanpy.readthedocs.io/en/stable/api/scanpy.pp.combat.html", 
        "image": "openproblems-r-pytorch", 
        "is_baseline": false, 
        "code_version": null
    }, 
    {
        "task_id": "batch_integration_graph", 
        "method_id": "fastmnn_embed_full_scaled", 
        "method_name": "FastMNN embed (full/scaled)", 
        "paper_name": "A description of the theory behind the fastMNN algorithm", 
        "paper_url": "https://marionilab.github.io/FurtherMNN2018/theory/description.html", 
        "paper_year": 2019, 
        "code_url": "https://doi.org/doi:10.18129/B9.bioc.batchelor", 
        "image": "openproblems-r-extras", 
        "is_baseline": false, 
        "code_version": null
    }, 
    {
        "task_id": "batch_integration_graph", 
        "method_id": "fastmnn_embed_full_unscaled", 
        "method_name": "FastMNN embed (full/unscaled)", 
        "paper_name": "A description of the theory behind the fastMNN algorithm", 
        "paper_url": "https://marionilab.github.io/FurtherMNN2018/theory/description.html", 
        "paper_year": 2019, 
        "code_url": "https://doi.org/doi:10.18129/B9.bioc.batchelor", 
        "image": "openproblems-r-extras", 
        "is_baseline": false, 
        "code_version": null
    }, 
    {
        "task_id": "batch_integration_graph", 
        "method_id": "fastmnn_embed_hvg_scaled", 
        "method_name": "FastMNN embed (hvg/scaled)", 
        "paper_name": "A description of the theory behind the fastMNN algorithm", 
        "paper_url": "https://marionilab.github.io/FurtherMNN2018/theory/description.html", 
        "paper_year": 2019, 
        "code_url": "https://doi.org/doi:10.18129/B9.bioc.batchelor", 
        "image": "openproblems-r-extras", 
        "is_baseline": false, 
        "code_version": null
    }, 
    {
        "task_id": "batch_integration_graph", 
        "method_id": "fastmnn_embed_hvg_unscaled", 
        "method_name": "FastMNN embed (hvg/unscaled)", 
        "paper_name": "A description of the theory behind the fastMNN algorithm", 
        "paper_url": "https://marionilab.github.io/FurtherMNN2018/theory/description.html", 
        "paper_year": 2019, 
        "code_url": "https://doi.org/doi:10.18129/B9.bioc.batchelor", 
        "image": "openproblems-r-extras", 
        "is_baseline": false, 
        "code_version": null
    }, 
    {
        "task_id": "batch_integration_graph", 
        "method_id": "fastmnn_feature_full_scaled", 
        "method_name": "FastMNN feature (full/scaled)", 
        "paper_name": "A description of the theory behind the fastMNN algorithm", 
        "paper_url": "https://marionilab.github.io/FurtherMNN2018/theory/description.html", 
        "paper_year": 2019, 
        "code_url": "https://doi.org/doi:10.18129/B9.bioc.batchelor", 
        "image": "openproblems-r-extras", 
        "is_baseline": false, 
        "code_version": null
    }, 
    {
        "task_id": "batch_integration_graph", 
        "method_id": "fastmnn_feature_full_unscaled", 
        "method_name": "FastMNN feature (full/unscaled)", 
        "paper_name": "A description of the theory behind the fastMNN algorithm", 
        "paper_url": "https://marionilab.github.io/FurtherMNN2018/theory/description.html", 
        "paper_year": 2019, 
        "code_url": "https://doi.org/doi:10.18129/B9.bioc.batchelor", 
        "image": "openproblems-r-extras", 
        "is_baseline": false, 
        "code_version": null
    }, 
    {
        "task_id": "batch_integration_graph", 
        "method_id": "fastmnn_feature_hvg_scaled", 
        "method_name": "FastMNN feature (hvg/scaled)", 
        "paper_name": "A description of the theory behind the fastMNN algorithm", 
        "paper_url": "https://marionilab.github.io/FurtherMNN2018/theory/description.html", 
        "paper_year": 2019, 
        "code_url": "https://doi.org/doi:10.18129/B9.bioc.batchelor", 
        "image": "openproblems-r-extras", 
        "is_baseline": false, 
        "code_version": null
    }, 
    {
        "task_id": "batch_integration_graph", 
        "method_id": "fastmnn_feature_hvg_unscaled", 
        "method_name": "FastMNN feature (hvg/unscaled)", 
        "paper_name": "A description of the theory behind the fastMNN algorithm", 
        "paper_url": "https://marionilab.github.io/FurtherMNN2018/theory/description.html", 
        "paper_year": 2019, 
        "code_url": "https://doi.org/doi:10.18129/B9.bioc.batchelor", 
        "image": "openproblems-r-extras", 
        "is_baseline": false, 
        "code_version": null
    }, 
    {
        "task_id": "batch_integration_graph", 
        "method_id": "harmony_full_scaled", 
        "method_name": "Harmony (full/scaled)", 
        "paper_name": "Fast, sensitive and accurate integration of single-cell data with Harmony", 
        "paper_url": "https://www.nature.com/articles/s41592-019-0619-0", 
        "paper_year": 2019, 
        "code_url": "https://github.com/lilab-bcb/harmony-pytorch", 
        "image": "openproblems-r-pytorch", 
        "is_baseline": false, 
        "code_version": null
    }, 
    {
        "task_id": "batch_integration_graph", 
        "method_id": "harmony_full_unscaled", 
        "method_name": "Harmony (full/unscaled)", 
        "paper_name": "Fast, sensitive and accurate integration of single-cell data with Harmony", 
        "paper_url": "https://www.nature.com/articles/s41592-019-0619-0", 
        "paper_year": 2019, 
        "code_url": "https://github.com/lilab-bcb/harmony-pytorch", 
        "image": "openproblems-r-pytorch", 
        "is_baseline": false, 
        "code_version": null
    }, 
    {
        "task_id": "batch_integration_graph", 
        "method_id": "harmony_hvg_scaled", 
        "method_name": "Harmony (hvg/scaled)", 
        "paper_name": "Fast, sensitive and accurate integration of single-cell data with Harmony", 
        "paper_url": "https://www.nature.com/articles/s41592-019-0619-0", 
        "paper_year": 2019, 
        "code_url": "https://github.com/lilab-bcb/harmony-pytorch", 
        "image": "openproblems-r-pytorch", 
        "is_baseline": false, 
        "code_version": null
    }, 
    {
        "task_id": "batch_integration_graph", 
        "method_id": "harmony_hvg_unscaled", 
        "method_name": "Harmony (hvg/unscaled)", 
        "paper_name": "Fast, sensitive and accurate integration of single-cell data with Harmony", 
        "paper_url": "https://www.nature.com/articles/s41592-019-0619-0", 
        "paper_year": 2019, 
        "code_url": "https://github.com/lilab-bcb/harmony-pytorch", 
        "image": "openproblems-r-pytorch", 
        "is_baseline": false, 
        "code_version": null
    }, 
    {
        "task_id": "batch_integration_graph", 
        "method_id": "liger_full_unscaled", 
        "method_name": "Liger (full/unscaled)", 
        "paper_name": "Single-Cell Multi-omic Integration Compares and Contrasts Features of Brain Cell Identity", 
        "paper_url": "https://doi.org/10.1016/j.cell.2019.05.006", 
        "paper_year": 2019, 
        "code_url": "https://github.com/welch-lab/liger", 
        "image": "openproblems-r-extras", 
        "is_baseline": false, 
        "code_version": null
    }, 
    {
        "task_id": "batch_integration_graph", 
        "method_id": "liger_hvg_unscaled", 
        "method_name": "Liger (hvg/unscaled)", 
        "paper_name": "Single-Cell Multi-omic Integration Compares and Contrasts Features of Brain Cell Identity", 
        "paper_url": "https://doi.org/10.1016/j.cell.2019.05.006", 
        "paper_year": 2019, 
        "code_url": "https://github.com/welch-lab/liger", 
        "image": "openproblems-r-extras", 
        "is_baseline": false, 
        "code_version": null
    }, 
    {
        "task_id": "batch_integration_graph", 
        "method_id": "mnn_full_scaled", 
        "method_name": "MNN (full/scaled)", 
        "paper_name": "Batch effects in single-cell RNA-sequencing data are corrected by matching mutual nearest neighbors", 
        "paper_url": "https://www.nature.com/articles/nbt.4091", 
        "paper_year": 2018, 
        "code_url": "https://github.com/chriscainx/mnnpy", 
        "image": "openproblems-r-pytorch", 
        "is_baseline": false, 
        "code_version": null
    }, 
    {
        "task_id": "batch_integration_graph", 
        "method_id": "mnn_full_unscaled", 
        "method_name": "MNN (full/unscaled)", 
        "paper_name": "Batch effects in single-cell RNA-sequencing data are corrected by matching mutual nearest neighbors", 
        "paper_url": "https://www.nature.com/articles/nbt.4091", 
        "paper_year": 2018, 
        "code_url": "https://github.com/chriscainx/mnnpy", 
        "image": "openproblems-r-pytorch", 
        "is_baseline": false, 
        "code_version": null
    }, 
    {
        "task_id": "batch_integration_graph", 
        "method_id": "mnn_hvg_scaled", 
        "method_name": "MNN (hvg/scaled)", 
        "paper_name": "Batch effects in single-cell RNA-sequencing data are corrected by matching mutual nearest neighbors", 
        "paper_url": "https://www.nature.com/articles/nbt.4091", 
        "paper_year": 2018, 
        "code_url": "https://github.com/chriscainx/mnnpy", 
        "image": "openproblems-r-pytorch", 
        "is_baseline": false, 
        "code_version": null
    }, 
    {
        "task_id": "batch_integration_graph", 
        "method_id": "mnn_hvg_unscaled", 
        "method_name": "MNN (hvg/unscaled)", 
        "paper_name": "Batch effects in single-cell RNA-sequencing data are corrected by matching mutual nearest neighbors", 
        "paper_url": "https://www.nature.com/articles/nbt.4091", 
        "paper_year": 2018, 
        "code_url": "https://github.com/chriscainx/mnnpy", 
        "image": "openproblems-r-pytorch", 
        "is_baseline": false, 
        "code_version": null
    }, 
    {
        "task_id": "batch_integration_graph", 
        "method_id": "no_integration", 
        "method_name": "No Integration", 
        "paper_name": "No Integration (baseline)", 
        "paper_url": "https://openproblems.bio", 
        "paper_year": 2022, 
        "code_url": "https://github.com/openproblems-bio/openproblems", 
        "image": "openproblems", 
        "is_baseline": true, 
        "code_version": null
    }, 
    {
        "task_id": "batch_integration_graph", 
        "method_id": "random_integration", 
        "method_name": "Random Integration", 
        "paper_name": "Random Integration (baseline)", 
        "paper_url": "https://openproblems.bio", 
        "paper_year": 2022, 
        "code_url": "https://github.com/openproblems-bio/openproblems", 
        "image": "openproblems", 
        "is_baseline": true, 
        "code_version": null
    }, 
    {
        "task_id": "batch_integration_graph", 
        "method_id": "scalex_full", 
        "method_name": "SCALEX (full)", 
        "paper_name": "Online single-cell data integration through projecting heterogeneous datasets into a common cell-embedding space", 
        "paper_url": "https://doi.org/10.1038/s41467-022-33758-z", 
        "paper_year": 2022, 
        "code_url": "https://github.com/jsxlei/SCALEX", 
        "image": "openproblems-python-pytorch", 
        "is_baseline": false, 
        "code_version": null
    }, 
    {
        "task_id": "batch_integration_graph", 
        "method_id": "scalex_hvg", 
        "method_name": "SCALEX (hvg)", 
        "paper_name": "Online single-cell data integration through projecting heterogeneous datasets into a common cell-embedding space", 
        "paper_url": "https://doi.org/10.1038/s41467-022-33758-z", 
        "paper_year": 2022, 
        "code_url": "https://github.com/jsxlei/SCALEX", 
        "image": "openproblems-python-pytorch", 
        "is_baseline": false, 
        "code_version": null
    }, 
    {
        "task_id": "batch_integration_graph", 
        "method_id": "scanorama_embed_full_scaled", 
        "method_name": "Scanorama (full/scaled)", 
        "paper_name": "Efficient integration of heterogeneous single-cell transcriptomes using Scanorama", 
        "paper_url": "https://www.nature.com/articles/s41587-019-0113-3", 
        "paper_year": 2019, 
        "code_url": "https://github.com/brianhie/scanorama", 
        "image": "openproblems-r-pytorch", 
        "is_baseline": false, 
        "code_version": null
    }, 
    {
        "task_id": "batch_integration_graph", 
        "method_id": "scanorama_embed_full_unscaled", 
        "method_name": "Scanorama (full/unscaled)", 
        "paper_name": "Efficient integration of heterogeneous single-cell transcriptomes using Scanorama", 
        "paper_url": "https://www.nature.com/articles/s41587-019-0113-3", 
        "paper_year": 2019, 
        "code_url": "https://github.com/brianhie/scanorama", 
        "image": "openproblems-r-pytorch", 
        "is_baseline": false, 
        "code_version": null
    }, 
    {
        "task_id": "batch_integration_graph", 
        "method_id": "scanorama_embed_hvg_scaled", 
        "method_name": "Scanorama (hvg/scaled)", 
        "paper_name": "Efficient integration of heterogeneous single-cell transcriptomes using Scanorama", 
        "paper_url": "https://www.nature.com/articles/s41587-019-0113-3", 
        "paper_year": 2019, 
        "code_url": "https://github.com/brianhie/scanorama", 
        "image": "openproblems-r-pytorch", 
        "is_baseline": false, 
        "code_version": null
    }, 
    {
        "task_id": "batch_integration_graph", 
        "method_id": "scanorama_embed_hvg_unscaled", 
        "method_name": "Scanorama (hvg/unscaled)", 
        "paper_name": "Efficient integration of heterogeneous single-cell transcriptomes using Scanorama", 
        "paper_url": "https://www.nature.com/articles/s41587-019-0113-3", 
        "paper_year": 2019, 
        "code_url": "https://github.com/brianhie/scanorama", 
        "image": "openproblems-r-pytorch", 
        "is_baseline": false, 
        "code_version": null
    }, 
    {
        "task_id": "batch_integration_graph", 
        "method_id": "scanorama_feature_full_scaled", 
        "method_name": "Scanorama gene output (full/scaled)", 
        "paper_name": "Efficient integration of heterogeneous single-cell transcriptomes using Scanorama", 
        "paper_url": "https://www.nature.com/articles/s41587-019-0113-3", 
        "paper_year": 2019, 
        "code_url": "https://github.com/brianhie/scanorama", 
        "image": "openproblems-r-pytorch", 
        "is_baseline": false, 
        "code_version": null
    }, 
    {
        "task_id": "batch_integration_graph", 
        "method_id": "scanorama_feature_full_unscaled", 
        "method_name": "Scanorama gene output (full/unscaled)", 
        "paper_name": "Efficient integration of heterogeneous single-cell transcriptomes using Scanorama", 
        "paper_url": "https://www.nature.com/articles/s41587-019-0113-3", 
        "paper_year": 2019, 
        "code_url": "https://github.com/brianhie/scanorama", 
        "image": "openproblems-r-pytorch", 
        "is_baseline": false, 
        "code_version": null
    }, 
    {
        "task_id": "batch_integration_graph", 
        "method_id": "scanorama_feature_hvg_scaled", 
        "method_name": "Scanorama gene output (hvg/scaled)", 
        "paper_name": "Efficient integration of heterogeneous single-cell transcriptomes using Scanorama", 
        "paper_url": "https://www.nature.com/articles/s41587-019-0113-3", 
        "paper_year": 2019, 
        "code_url": "https://github.com/brianhie/scanorama", 
        "image": "openproblems-r-pytorch", 
        "is_baseline": false, 
        "code_version": null
    }, 
    {
        "task_id": "batch_integration_graph", 
        "method_id": "scanorama_feature_hvg_unscaled", 
        "method_name": "Scanorama gene output (hvg/unscaled)", 
        "paper_name": "Efficient integration of heterogeneous single-cell transcriptomes using Scanorama", 
        "paper_url": "https://www.nature.com/articles/s41587-019-0113-3", 
        "paper_year": 2019, 
        "code_url": "https://github.com/brianhie/scanorama", 
        "image": "openproblems-r-pytorch", 
        "is_baseline": false, 
        "code_version": null
    }, 
    {
        "task_id": "batch_integration_graph", 
        "method_id": "scanvi_full_unscaled", 
        "method_name": "scANVI (full/unscaled)", 
        "paper_name": "Probabilistic harmonization and annotation of single‐cell transcriptomics data with deep generative models", 
        "paper_url": "https://doi.org/10.15252/msb.20209620", 
        "paper_year": 2021, 
        "code_url": "https://github.com/YosefLab/scvi-tools", 
        "image": "openproblems-r-pytorch", 
        "is_baseline": false, 
        "code_version": null
    }, 
    {
        "task_id": "batch_integration_graph", 
        "method_id": "scanvi_hvg_unscaled", 
        "method_name": "scANVI (hvg/unscaled)", 
        "paper_name": "Probabilistic harmonization and annotation of single‐cell transcriptomics data with deep generative models", 
        "paper_url": "https://doi.org/10.15252/msb.20209620", 
        "paper_year": 2021, 
        "code_url": "https://github.com/YosefLab/scvi-tools", 
        "image": "openproblems-r-pytorch", 
        "is_baseline": false, 
        "code_version": null
    }, 
    {
        "task_id": "batch_integration_graph", 
        "method_id": "scvi_full_unscaled", 
        "method_name": "scVI (full/unscaled)", 
        "paper_name": "Deep generative modeling for single-cell transcriptomics", 
        "paper_url": "https://www.nature.com/articles/s41592-018-0229-2", 
        "paper_year": 2018, 
        "code_url": "https://github.com/YosefLab/scvi-tools", 
        "image": "openproblems-r-pytorch", 
        "is_baseline": false, 
        "code_version": null
    }, 
    {
        "task_id": "batch_integration_graph", 
        "method_id": "scvi_hvg_unscaled", 
        "method_name": "scVI (hvg/unscaled)", 
        "paper_name": "Deep generative modeling for single-cell transcriptomics", 
        "paper_url": "https://www.nature.com/articles/s41592-018-0229-2", 
        "paper_year": 2018, 
        "code_url": "https://github.com/YosefLab/scvi-tools", 
        "image": "openproblems-r-pytorch", 
        "is_baseline": false, 
        "code_version": null
    }
]