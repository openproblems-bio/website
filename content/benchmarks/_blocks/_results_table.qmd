
```{r}
#| echo: false
res_tib0 <- results %>%
  unnest(scaled_scores) %>%
  unnest(resources) %>%
  left_join(method_info %>% select(-commit_sha, -code_version, -task_id), by = "method_id") %>%
  filter(!is_baseline) %>%
  left_join(dataset_info %>% select(dataset_id, dataset_name, data_reference), by = "dataset_id")

res_tib1 <- res_tib0 %>% 
  group_by(method_id, method_name, paper_reference, code_url, code_version) %>%
  summarise_if(is.numeric, mean) %>%
  ungroup() %>%
  mutate(
    dataset_name = "Overall mean"
  ) %>%
  bind_rows(res_tib0)
  
res_tib <- res_tib1 %>%
  mutate(
    method_label = ifelse(is.na(paper_reference), method_name, glue::glue("<a href=\"/bibliography#{paper_reference}\">{method_name}</a>")),
    dataset_label = ifelse(is.na(data_reference), dataset_name, glue::glue("<a href=\"/bibliography#{data_reference}\">{dataset_name}</a>")),
    package_label = glue::glue("<a href=\"{code_url}\">v{code_version}</a>"),
    peak_memory_gb = peak_memory_mb / 1024
  ) %>%
  select(
    method_label,
    dataset_label,
    mean_score,
    any_of(metric_info$metric_id),
    duration_sec,
    cpu_pct,
    peak_memory_gb,
    package_label
  ) %>%
  arrange(desc(mean_score))

res_cn <- c(
  "Method",
  "Dataset",
  "Mean score",
  metric_info$metric_name,
  "Runtime (s)",
  "CPU (%)",
  "Memory (GB)",
  "Library"
)

DT::datatable(
  res_tib,
  colnames = res_cn,
  options = list(
    dom = "Bt",
    paging = FALSE,
    columnDefs = list(
      list(
        searchPanes = list(show = FALSE),
        targets = seq(2, ncol(res_tib)-1)
      ),
      list(
        searchPanes = list(
          preSelect = "Overall mean"
        ),
        targets = 1
      )
    ),
    buttons = list(
      "searchPanes",
      "csv",
      "excel"
    ),
    language = list(
      searchPanes = list(collapse = "Filters")
    )
  ),
  escape = FALSE,
  class = "stripe compact",
  rownames = FALSE,
  extensions = c("Select", "SearchPanes", "Buttons", "Responsive")
) %>%
  DT::formatRound(c("peak_memory_gb", "mean_score", metric_info$metric_id), digits = 2) %>%
  DT::formatRound(c("cpu_pct", "duration_sec"), digits = 0)
```
