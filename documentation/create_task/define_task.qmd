---
title: Define the task
order: 10
engine: knitr
---


{{< include /_include/_clone_repo.qmd >}}
{{< include /_include/_evaluate_code.qmd >}}
{{< include /_include/_read_api.qmd >}}

Before writing any code, it's essential to carefully plan and document your task to ensure its relevance, feasibility, and compatibility with the OpenProblems framework. 

## Step 1: Check whether a similar task already exists

Please check the [OpenProblems tasks](https://github.com/openproblems-bio/openproblems-v2/issues?q=label%3Atask+) to see whether a similar task has already been created.

## Step 2: Create a GitHub issue

If not, [create a new issue](https://github.com/openproblems-bio/openproblems-v2/issues/new?assignees=&labels=task&projects=&template=new_task.yml) and fill in the required information.

This collaborative process will help ensure that your task is well-defined, relevant, and compatible with the OpenProblems framework. Additionally, it informs others of your ongoing work in this area and establishes a foundation for potential collaboration. Check out [some examples](https://github.com/openproblems-bio/openproblems-v2/labels/task) by filtering on the 'task' label on GitHub.

```{r echo=FALSE, warning=FALSE, error=FALSE}
new_task_yml <- yaml::read_yaml(".github/ISSUE_TEMPLATE/new_task.yml")
md <- paste(sapply(new_task_yml$body, function(section) {
  if (section$type == "textarea") {
    paste0("### ", section$attributes$label, "\n\n", section$attributes$description, "\n")
  } else {
    ""
  }
}), collapse = "\n")

knitr::asis_output(md)
```

## Step 3: Create task info

Now create a task info metadata file in the `src/tasks/<task_id>/api` directory. This file will be part of the automatic "readme" creation in the repo directory of this task. The task info file should be named `task_info.yaml` and should contain the following information:


```{r echo=FALSE, warning=FALSE, error=FALSE}
json_schema <- read_and_merge_yaml("src/common/schemas/task_info.yaml")
yaml_example <- render_example(json_schema)

knitr::asis_output(paste0(
  "```yaml\n",
  yaml_example, "\n",
  "```\n"
))
```


## Next steps

You are now well-equipped to begin [designing the API](design_api.qmd) for the new benchmarking task.