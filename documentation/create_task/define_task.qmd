---
title: Define the task
order: 10
engine: knitr
---


{{< include /_include/_clone_repo.qmd >}}
{{< include /_include/_evaluate_code.qmd >}}
{{< include /_include/_read_api.qmd >}}

Before writing any code, it's essential to carefully plan and document your task to ensure its relevance, feasibility, and compatibility with the OpenProblems framework. 

## Step 1: Check whether a similar task already exists

Please check the [OpenProblems tasks](https://github.com/openproblems-bio/openproblems-v2/issues?q=label%3Atask+) to see whether a similar task has already been created.

## Step 2: Create a GitHub issue

If not, [create a new issue](https://github.com/openproblems-bio/openproblems-v2/issues/new?assignees=&labels=task&projects=&template=new_task.yml) and fill in the required information.

This collaborative process will help ensure that your task is well-defined, relevant, and compatible with the OpenProblems framework. Additionally, it informs others of your ongoing work in this area and establishes a foundation for potential collaboration. Check out [some examples](https://github.com/openproblems-bio/openproblems-v2/labels/task) by filtering on the 'task' label on GitHub.

```{r echo=FALSE, warning=FALSE, error=FALSE}
new_task_yml <- yaml::read_yaml(".github/ISSUE_TEMPLATE/new_task.yml")
md <- paste(sapply(new_task_yml$body, function(section) {
  if (section$type == "textarea") {
    paste0("### ", section$attributes$label, "\n\n", section$attributes$description, "\n")
  } else {
    ""
  }
}), collapse = "\n")

knitr::asis_output(md)
```

## Step 3: Create task repository

Upon approval of the task proposal, a new task repository within the OpenProblems-bio organization will be created using the [OpenProblems template](https://github.com/openproblems-bio/task_template). If it is not yet created and you have access to the organization, you can create it yourself using the [template instructions](https://github.com/openproblems-bio/task_template#readme).

## Step 4: Update the task metadata

Now update the _viash.yaml file in the root of the task repository with the following information:

* Update the `name` field to the name of the task in snake_case the nane should start with `task_`.
* Update the `description` field to a short description of the task.
* Add a keyword to the `keywords` field that describes the task.
* Update the `task_template` in the links/info field to the name of the task in snake_case.

Now update the fields int the `task_info.yaml` file in the `src/api` directory. Some small pointers for a few fields:

* The `name` field is the same as the task name in `_viash.yaml` but without the `task_` prefix.
* The `image` field is the name of the thumbnail image for the task and is stored in the `src/api` directory. This can be empty is when there is no thumbnail image available. The image is used when displaying the results on the Open Problems website.
* The `motivation` and `description` fields are from the github issue created for this task.


## Next steps

You are now well-equipped to begin [designing the API](design_api.qmd) for the new benchmarking task.