---
title: Getting started
order: 20
engine: knitr
---

{{< include ../_blocks/_clone_repo.qmd >}}
{{< include /_include/_evaluate_code.qmd >}}

To get started with contributing to OpenProblems, you'll need to fork and clone the OpenProblems repository to your local machine.


## Step 1: Create a fork

Go to the OpenProblems repository at [https://github.com/openproblems-bio/openproblems-v2](https://github.com/openproblems-bio/openproblems-v2) and click on the "Fork" button in the top right corner of the page.

![](../images/fork_repo.png){width=500px}

This will create a copy of the repository under your GitHub account. 

:::{.callout-tip}
While you're at it, why not click the "Star" button as well?

[![](../images/stargazers.png){width=500px}](https://github.com/openproblems-bio/openproblems-v2/stargazers)
:::

## Step 2: Clone the repository
To clone this forked repository to your local machine, copy the URL of the forked repository by clicking the green "Code" button and selecting HTTPS or SSH.

In your terminal or command prompt, navigate to the directory where you want to clone the repository and enter the following command:

```bash
git clone <forked repository URL> openproblems-v2
cd openproblems-v2
```

This will download a copy of the repository to your local machine. You can now make changes to the code, add new functionality, and commit your changes.

## Step 3: Download test resources

You will also need to download the test resources by running the following command.
These are needed for testing the existing components and can be used for developing new unit tests.
From the repository root, run:

```bash
viash run src/common/sync_test_resources/config.vsh.yaml
```
<details>
  <summary>Output</summary>
```{bash}
#| echo: false
rm -r resources_test
viash run src/common/sync_test_resources/config.vsh.yaml
```
</details>

The test resources are stored in the `resources_test` directory.


## Ready, set, go!

That's it! Now you should be able to test whether the existing components work as expected and then start adding functionality to the pipeline. Please check out the [next part of the guide](../create_component) to learn how to add new components to the project.